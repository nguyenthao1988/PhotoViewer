<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DevExpress.Utils.v18.1</name>
    </assembly>
    <members>
        <member name="T:DevExpress.Utils.TextOptions">

            <summary>
                <para>Contains options that specify how text is rendered.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.TextOptions.#ctor(DevExpress.Utils.HorzAlignment,DevExpress.Utils.VertAlignment,DevExpress.Utils.WordWrap,DevExpress.Utils.Trimming)">
            <summary>
                <para>Initializes a new instance of the TextOptions class with the specified alignments, word wrapping and text trimming options.

</para>
            </summary>
            <param name="hAlignment">
		A <see cref="T:DevExpress.Utils.HorzAlignment"/> value that specifies the horizontal alignment of text. This value is assigned to the <see cref="P:DevExpress.Utils.TextOptions.HAlignment"/> property.


            </param>
            <param name="vAlignment">
		A <see cref="T:DevExpress.Utils.HorzAlignment"/> value that specifies the vertical alignment of text. This value is assigned to the <see cref="P:DevExpress.Utils.TextOptions.VAlignment"/> property.


            </param>
            <param name="wordWrap">
		A <see cref="T:DevExpress.Utils.WordWrap"/> value that specifies word wrapping mode. This value is assigned to the <see cref="P:DevExpress.Utils.TextOptions.WordWrap"/> property.


            </param>
            <param name="trimming">
		A <see cref="T:DevExpress.Utils.Trimming"/> value that specifies text trimming mode. This value is assigned to the <see cref="P:DevExpress.Utils.TextOptions.Trimming"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.TextOptions.#ctor(DevExpress.Utils.AppearanceObject)">
            <summary>
                <para>Initializes a new instance of the TextOptions class with the specified owner, the text settings are set to default values.

</para>
            </summary>
            <param name="owner">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which becomes the owner of the current object.

            </param>


        </member>
        <member name="M:DevExpress.Utils.TextOptions.#ctor(DevExpress.Utils.HorzAlignment,DevExpress.Utils.VertAlignment,DevExpress.Utils.WordWrap,DevExpress.Utils.Trimming,DevExpress.Utils.HKeyPrefix)">
            <summary>
                <para>Initializes a new instance of the TextOptions class with the specified alignments, word wrapping and text trimming options.

</para>
            </summary>
            <param name="hAlignment">
		A <see cref="T:DevExpress.Utils.HorzAlignment"/> value that specifies the horizontal alignment of text. This value is assigned to the <see cref="P:DevExpress.Utils.TextOptions.HAlignment"/> property.

            </param>
            <param name="vAlignment">
		A <see cref="T:DevExpress.Utils.HorzAlignment"/> value that specifies the vertical alignment of text. This value is assigned to the <see cref="P:DevExpress.Utils.TextOptions.VAlignment"/> property.


            </param>
            <param name="wordWrap">
		A <see cref="T:DevExpress.Utils.WordWrap"/> value that specifies word wrapping mode. This value is assigned to the <see cref="P:DevExpress.Utils.TextOptions.WordWrap"/> property.

            </param>
            <param name="trimming">
		A <see cref="T:DevExpress.Utils.Trimming"/> value that specifies text trimming mode. This value is assigned to the <see cref="P:DevExpress.Utils.TextOptions.Trimming"/> property.

            </param>
            <param name="hotKeyPrefix">
		A <see cref="T:DevExpress.Utils.HKeyPrefix"/> enumeration value that specifies the hotkey prefix for the text. This value is assigned to the <see cref="P:DevExpress.Utils.TextOptions.HotkeyPrefix"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.TextOptions.Assign(DevExpress.Utils.TextOptions)">
            <summary>
                <para>Copies settings from the specified object to the current TextOptions object.
</para>
            </summary>
            <param name="options">
		A TextOptions object whose settings are copied to the current object.

            </param>


        </member>
        <member name="P:DevExpress.Utils.TextOptions.DefaultOptions">
            <summary>
                <para>Gets an object that specifies the default text options.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.TextOptions"/> object that specifies the default text options.

</value>


        </member>
        <member name="P:DevExpress.Utils.TextOptions.DefaultOptionsCenteredWithEllipsis">
            <summary>
                <para>Gets an object whose settings force text to be centered.

</para>
            </summary>
            <value>A TextOptions object with its settings set to the corresponding values.

</value>


        </member>
        <member name="P:DevExpress.Utils.TextOptions.DefaultOptionsMultiLine">
            <summary>
                <para>Gets an object whose settings allow text to wrap.
</para>
            </summary>
            <value>A TextOptions object with its settings set to the corresponding values.

</value>


        </member>
        <member name="P:DevExpress.Utils.TextOptions.DefaultOptionsNoWrap">
            <summary>
                <para>Gets an object whose settings prevent text from wrapping.

</para>
            </summary>
            <value>A TextOptions object with its settings set to the corresponding values.

</value>


        </member>
        <member name="P:DevExpress.Utils.TextOptions.DefaultOptionsNoWrapEx">
            <summary>
                <para>Gets an object whose settings force text to be centered and prevent it from wrapping.

</para>
            </summary>
            <value>A TextOptions object with its settings set to the corresponding values.

</value>


        </member>
        <member name="P:DevExpress.Utils.TextOptions.DefaultStringFormat">
            <summary>
                <para>Gets an object that contains the default formatting settings.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.StringFormat"/> object containing the default formatting settings.
</value>


        </member>
        <member name="M:DevExpress.Utils.TextOptions.ForceUseGenericDefaultStringFormat">
            <summary>
                <para>Specifies how the default string format referred to by the <see cref="P:DevExpress.Utils.TextOptions.DefaultStringFormat"/> property is constructed.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.TextOptions.GetStringFormat">
            <summary>
                <para>Returns a <see cref="T:System.Drawing.StringFormat"/> object whose settings reflect the alignment, word wrapping and text trimming options of the <see cref="P:DevExpress.Utils.TextOptions.DefaultOptions"/> object.

</para>
            </summary>
            <returns>A <see cref="T:System.Drawing.StringFormat"/> object whose properties are set to match the appropriate values.

</returns>


        </member>
        <member name="M:DevExpress.Utils.TextOptions.GetStringFormat(DevExpress.Utils.TextOptions)">
            <summary>
                <para>Returns a <see cref="T:System.Drawing.StringFormat"/> object whose settings reflect the alignment, word wrapping and text trimming options of the specified TextOptions object.

</para>
            </summary>
            <param name="defaultOptions">
		A TextOptions object whose settings are used to initialize the corresponding settings of the <see cref="T:System.Drawing.StringFormat"/> object that is to be returned.

            </param>
            <returns>A <see cref="T:System.Drawing.StringFormat"/> object whose properties are set to match the appropriate values.

</returns>


        </member>
        <member name="M:DevExpress.Utils.TextOptions.GetStringFormatInfo(DevExpress.Utils.TextOptions)">
            <summary>
                <para>Returns a StringFormatInfo object whose settings reflect the alignment, word wrapping and text trimming options of the <see cref="P:DevExpress.Utils.TextOptions.DefaultOptions"/> object.
</para>
            </summary>
            <param name="defaultOptions">
		A TextOptions object whose settings are used to initialize the corresponding settings of the StringFormatInfo object that is to be returned.

            </param>
            <returns>A StringFormatInfo object whose properties are set to match the appropriate values.
</returns>


        </member>
        <member name="M:DevExpress.Utils.TextOptions.GetStringFormatInfo">
            <summary>
                <para>Returns a StringFormatInfo object whose settings reflect the alignment, word wrapping and text trimming options of the <see cref="P:DevExpress.Utils.TextOptions.DefaultOptions"/> object.
</para>
            </summary>
            <returns>A StringFormatInfo object whose properties are set to match the appropriate values.
</returns>


        </member>
        <member name="P:DevExpress.Utils.TextOptions.HAlignment">
            <summary>
                <para>Gets or sets the horizontal alignment of text.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.HorzAlignment"/> value that specifies the text horizontal alignment.
</value>


        </member>
        <member name="M:DevExpress.Utils.TextOptions.HorzAlignmentToStringAlignment(DevExpress.Utils.HorzAlignment)">
            <summary>
                <para>Converts the specified <see cref="T:DevExpress.Utils.HorzAlignment"/> value to a corresponding <see cref="T:System.Drawing.StringAlignment"/> value.

</para>
            </summary>
            <param name="align">
		A <see cref="T:DevExpress.Utils.HorzAlignment"/> value that is to be converted.

            </param>
            <returns>A <see cref="T:System.Drawing.StringAlignment"/> value that corresponds to the specified <see cref="T:DevExpress.Utils.HorzAlignment"/> value.
</returns>


        </member>
        <member name="P:DevExpress.Utils.TextOptions.HotkeyPrefix">
            <summary>
                <para>Gets or sets the hotkey prefix for the text. 
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.HKeyPrefix"/> enumeration value which represents the hotkey prefix for the text.
</value>


        </member>
        <member name="M:DevExpress.Utils.TextOptions.IsEqual(DevExpress.Utils.TextOptions)">
            <summary>
                <para>Tests whether two objects have the same property values.
</para>
            </summary>
            <param name="options">
		The TextOptions object to which the current object is compared.

            </param>
            <returns><b>true</b> if the current object has the same property values as the specified object; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.TextOptions.Reset">
            <summary>
                <para>Resets all the text settings to their default values.

</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.TextOptions.RightToLeft">
            <summary>
                <para>Gets or sets whether the text is directed from right to left.
</para>
            </summary>
            <value><b>true</b>, if the text is directed from right to left; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Utils.TextOptions.SetHotKeyPrefix(DevExpress.Utils.HKeyPrefix)">
            <summary>
                <para>Sets the <see cref="P:DevExpress.Utils.TextOptions.HotkeyPrefix"/> property without the property changed notifications.
</para>
            </summary>
            <param name="value">
		A <see cref="T:DevExpress.Utils.HKeyPrefix"/> enumeration value which represents the hotkey prefix for the text. 

            </param>


        </member>
        <member name="M:DevExpress.Utils.TextOptions.ToString">
            <summary>
                <para>Returns the text representation of the current object.
</para>
            </summary>
            <returns>The text representation of the current object.
</returns>


        </member>
        <member name="P:DevExpress.Utils.TextOptions.Trimming">
            <summary>
                <para>Gets or sets text trimming mode.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.Trimming"/> value that specifies text trimming mode.
</value>


        </member>
        <member name="M:DevExpress.Utils.TextOptions.UpdateDefaultOptions(DevExpress.Utils.TextOptions)">
            <summary>
                <para>For internal use. Copies settings from the specified object to the current object.
</para>
            </summary>
            <param name="defaultOptions">
		A <see cref="T:DevExpress.Utils.TextOptions"/> object whose settings are copied to the current object.

            </param>


        </member>
        <member name="P:DevExpress.Utils.TextOptions.VAlignment">
            <summary>
                <para>Gets or sets the vertical alignment of text.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.VertAlignment"/> value that specifies the text vertical alignment.
</value>


        </member>
        <member name="M:DevExpress.Utils.TextOptions.VertAlignmentToStringAlignment(DevExpress.Utils.VertAlignment)">
            <summary>
                <para>Converts the specified <see cref="T:DevExpress.Utils.VertAlignment"/> value to a corresponding <see cref="T:System.Drawing.StringAlignment"/> value.
</para>
            </summary>
            <param name="align">
		A <see cref="T:DevExpress.Utils.VertAlignment"/> value that is to be converted.

            </param>
            <returns>A <see cref="T:System.Drawing.StringAlignment"/> value that corresponds to the specified <see cref="T:DevExpress.Utils.VertAlignment"/> value.
</returns>


        </member>
        <member name="P:DevExpress.Utils.TextOptions.WordWrap">
            <summary>
                <para>Gets or sets text wrapping mode.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.WordWrap"/> value that specifies text wrapping mode.
</value>


        </member>
        <member name="T:DevExpress.Utils.VisualEffects.GuideProperties">

            <summary>
                <para>Provides properties that affect all adorner guides owned by this Adorner UI Manager.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.VisualEffects.GuideProperties.#ctor">
            <summary>
                <para>Initializes a new instance of the GuideProperties class with the default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.GuideProperties.AllowFlyoutPanel">
            <summary>
                <para>Gets or sets whether any guide owned by this Adorner UI Manager can display flyout panels.
</para>
            </summary>
            <value><b>true</b>, to enable flyout panels for all guides; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.GuideProperties.FlyoutBackColor">
            <summary>
                <para>Gets or sets the background flyout panel color for any guide owned by this Adorner UI Manager.
</para>
            </summary>
            <value>A Color applied to the flyout panel background.

</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.GuideProperties.FlyoutBorderColor">
            <summary>
                <para>Gets or sets the flyout panel border color for any guide owned by this Adorner UI Manager.
</para>
            </summary>
            <value> </value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.GuideProperties.FlyoutLocation">
            <summary>
                <para>Gets or sets the flyout panel relative position for any guide owned by this Adorner UI Manager.
</para>
            </summary>
            <value> </value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.GuideProperties.FlyoutOpacity">
            <summary>
                <para>Gets or sets the flyout panel opacity for any guide owned by this Adorner UI Manager.
</para>
            </summary>
            <value> </value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.GuideProperties.ShowGuidesShortcut">
            <summary>
                <para>Gets or sets a keyboard shortcut that can be pressed at runtime to display guides.
</para>
            </summary>
            <value>A <see cref="KeyShortcut"/> enumerator value that is the keyboard shortcut that invokes guides. 
</value>


        </member>
        <member name="T:DevExpress.Utils.VisualEffects.GuideDefaultProperties">

            <summary>
                <para>Contains properties that affect invidual adorner guides only.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.VisualEffects.GuideDefaultProperties.#ctor(DevExpress.Utils.VisualEffects.GuideProperties)">
            <summary>
                <para>Initializes a new instance of the GuideDefaultProperties class with the specified settings.
</para>
            </summary>
            <param name="parentProperties">
		A <see cref="T:DevExpress.Utils.VisualEffects.GuideProperties"/> object that stores global guide settings. These settings will be inherited by the newly created GuideDefaultProperties object.

            </param>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.GuideDefaultProperties.ActualFlyoutBackColor">
            <summary>
                <para>Returns the current flyout backcolor for this guide.
</para>
            </summary>
            <value>A Color that is the current flyout backcolor for the current guide.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.GuideDefaultProperties.ActualFlyoutBorderColor">
            <summary>
                <para>Returns the current flyout border color for this guide.
</para>
            </summary>
            <value>A Color that is the current flyout border color for the current guide.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.GuideDefaultProperties.ActualFlyoutLocation">
            <summary>
                <para>Returns the current flyout location for this guide.
</para>
            </summary>
            <value>A <see cref="GuideFlyoutLocation"/> enumeration value that is the current flyout location for the current guide.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.GuideDefaultProperties.ActualFlyoutOpacity">
            <summary>
                <para>Returns the current flyout opacity for this guide.
</para>
            </summary>
            <value>A Double value that is the current flyout opacity for the current guide.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.GuideDefaultProperties.AllowFlyoutPanel">
            <summary>
                <para>Gets or sets whether or not this guide should display its flyout panel.
</para>
            </summary>
            <value>A <see cref="DefaultBoolean"/> enumerator value that specifies whether or not this guide should display its flyout panel.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.GuideDefaultProperties.FlyoutBackColor">
            <summary>
                <para>Gets or sets the flyout backcolor for the current guide.
</para>
            </summary>
            <value>A Color applied to a flyout background of the current guide.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.GuideDefaultProperties.FlyoutBorderColor">
            <summary>
                <para>Gets or sets the color applied to flyout borders of the current guide.
</para>
            </summary>
            <value>A Color applied to flyout borders of this guide.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.GuideDefaultProperties.FlyoutLocation">
            <summary>
                <para>Gets or sets the flyout position relative to the current guide.
</para>
            </summary>
            <value>A <see cref="Nullable&lt;GuideFlyoutLocation&gt;"/> enumerator value that specifies the flyout position relative to the current guide.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.GuideDefaultProperties.FlyoutOpacity">
            <summary>
                <para>Gets or sets the flyout opacity for this guide.
</para>
            </summary>
            <value>A <see cref="Nullable&lt;Double&gt;"/> value that is the flyout opacity for this guide. 
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.GuideDefaultProperties.IsFlyoutPanelEnabled">
            <summary>
                <para>Returns whether or not this guide will show its flyout panel when selected.
</para>
            </summary>
            <value><b>true</b>, if this guide will show its flyout panel when selected; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Utils.VisualEffects.Guide">

            <summary>
                <para>A child Adorner UI Manager element that highlights specific form regions. Provides a built-in flyout panel for displaying additional information and/or actions related to the highlighted region.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.VisualEffects.Guide.#ctor">
            <summary>
                <para>Initializes a new instance of the Guide class with the default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.Guide.Appearances">
            <summary>
                <para>Provides access to a group of <see cref="T:DevExpress.Utils.AppearanceObject"/>s that store appearance settings for this Guide.
</para>
            </summary>
            <value>A <see cref="GuideAppearances"/> object that stores guide appearance settings.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.Guide.Properties">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.Utils.VisualEffects.GuideDefaultProperties"/> object that stores settings for this Guide.
</para>
            </summary>
            <value>A <see cref="GuideDefaultProperties"/> object that stores guide settings.
</value>


        </member>
        <member name="T:DevExpress.Utils.VisualEffects.ValidationHintAppearances">

            <summary>
                <para>Provides three property groups that store the appearance settings for all possible validation states of a target control, related to the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.VisualEffects.ValidationHintAppearances.#ctor">
            <summary>
                <para>Initializes a new instance of the ValidationHintAppearances class with the default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintAppearances.IndeterminateState">
            <summary>
                <para>Provides access to appearance settings used by a <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> when its target control is in the indeterminate state.

</para>
            </summary>
            <value>An <see cref="AppearanceObject"/> that stores appearance settings. 
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintAppearances.InvalidState">
            <summary>
                <para>Provides access to appearance settings used by a <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> when its target control is in the invalid state.

</para>
            </summary>
            <value>An <see cref="AppearanceObject"/> that stores appearance settings. 
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintAppearances.ValidState">
            <summary>
                <para>Provides access to appearance settings used by a <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> when its target control is in the valid state.

</para>
            </summary>
            <value>An <see cref="AppearanceObject"/> that stores appearance settings. 
</value>


        </member>
        <member name="T:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties">

            <summary>
                <para>Provides access to base validation hint properties. Objects of this type affect individual validation hints only.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.#ctor(DevExpress.Utils.VisualEffects.ValidationHintBaseProperties)">
            <summary>
                <para>Initializes a new instance of the ValidationHintBaseDefaultProperties class with the specified settings.
</para>
            </summary>
            <param name="parentProperties">
		A  object that stores base validation hint settings. These settings will be inherited by the newly created ValidationHintBaseDefaultProperties object.

            </param>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ActualBackgroundMode">
            <summary>
                <para>Returns which <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> regions will be painted with this hint's background color.

</para>
            </summary>
            <value>A <see cref="ValidationHintBackgroundMode"/> enumeration value.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ActualBorderToHintDistance">
            <summary>
                <para>Returns the current text-to-border indent for this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/>.
</para>
            </summary>
            <value>An Int32 value that is the distance between a border and a hint of this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ActualHintLocation">
            <summary>
                <para>Returns the current hint position for this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object.
</para>
            </summary>
            <value>A <see cref="ValidationHintLocation"/> enumerator value that specifies the current hint position for this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ActualHintPadding">
            <summary>
                <para>Returns the current hint padding for this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object.
</para>
            </summary>
            <value>A Padding structure applied to a hint of this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ActualIcon">
            <summary>
                <para>Returns the icon currently displayed by this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object's hint.
</para>
            </summary>
            <value>An Image currently displayed by this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object's hint.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ActualIconToTextDistance">
            <summary>
                <para>Returns the image-to-text indent for this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object's hint.
</para>
            </summary>
            <value>An Int32 value that is the image-to-text indent for this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object's hint.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ActualIconType">
            <summary>
                <para>Returns the predefined icon displayed within this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object's hint.
</para>
            </summary>
            <value>A <see cref="ValidationHintIconType"/> enumerator value that specifies which predefined icon is displayed within this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object's hint.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ActualImageUri">
            <summary>
                <para>Returns the unified resource identifier (URI) that specifies the image displayed by this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object.
</para>
            </summary>
            <value>A String value that is the URI of the displayed image.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ActualText">
            <summary>
                <para>Returns the text currently displayed by this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object's hint.
</para>
            </summary>
            <value>A String value that is the text currently displayed by this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object's hint.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.AllowHtmlDrawText">
            <summary>
                <para>Gets or sets whether or not HTML tags in this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object's hint text should be used to format this text string.
</para>
            </summary>
            <value>A <see cref="DefaultBoolean"/> enumerator value that specifies whether or not this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> should recognize HTML tags in its hint text.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.BorderToHintDistance">
            <summary>
                <para>Gets or sets the indent between a border and a hint of this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object.
</para>
            </summary>
            <value>A <see cref="Nullable&lt;Int32&gt;"/> object that specifies the indent between a border and a hint of this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.CanHtmlDrawText">
            <summary>
                <para>Returns whether or not this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object can format its hint text using HTML tags.
</para>
            </summary>
            <value><b>true</b>, if the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object can format its hint text using HTML tags; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.CanShowBorder">
            <summary>
                <para>Returns whether or not this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object should display a border around its target UI element.
</para>
            </summary>
            <value><b>true</b>, if this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object should display a border; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.CanShowHint">
            <summary>
                <para>Returns whether or not this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object should display a hint next to its target UI element.
</para>
            </summary>
            <value><b>true</b>, if this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object should display a hint; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.CanShowIcon">
            <summary>
                <para>Returns whether or not this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object can currently display a glyph within its hint.
</para>
            </summary>
            <value><b>true</b>, if this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object can currently display a glyph within its hint; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.HintLocation">
            <summary>
                <para>Gets or sets the position of this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object's hint relative to its target UI element.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.VisualEffects.ValidationHintLocation"/> enumeration value that specifies the relative hint position.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.HintPadding">
            <summary>
                <para>Gets or sets the padding for this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object's hint.
</para>
            </summary>
            <value>A Padding structure that is the padding for this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object's hint.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.Icon">
            <summary>
                <para>Gets or sets the image displayed within this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object's hint.
</para>
            </summary>
            <value>An Image object displayed within this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object's hint.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.IconToTextDistance">
            <summary>
                <para>Gets or sets the distance between text and image within a hint, displayed by this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object.
</para>
            </summary>
            <value>An Int32 value that is the distance between text and image within a hint, displayed by this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.IconType">
            <summary>
                <para>Gets or sets one of the predefined images to be displayed within the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object's hint.

</para>
            </summary>
            <value>A ValidationHintIconType enumeration value that specifies one of predefined images to be displayed within the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object's hint.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ImageUri">
            <summary>
                <para>Gets or sets the image displayed within this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object's hint. The required image will be taken from the DevExpress Image Gallery.
</para>
            </summary>
            <value>A String value that specifies the image displayed within this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object's hint.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ShowBackgroundMode">
            <summary>
                <para>Gets or sets what <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object's regions should be painted using this object's background color.
</para>
            </summary>
            <value>A <see cref="Nullable&lt;ValidationHintBackgroundMode&gt;"/> object that specifies what <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object's regions should be painted using this object's background color.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ShowBorder">
            <summary>
                <para>Gets or sets whether or not this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object should draw a border around its target UI element.
</para>
            </summary>
            <value>A DefaultBoolean enumeration value that specifies whether or not this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object should draw a border around its target UI element.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ShowHint">
            <summary>
                <para>Gets or sets whether or not this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object should display a hint next to its target UI element.
</para>
            </summary>
            <value>A DefaultBoolearn enumerator value that specifies whether or not this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object should display a hint next to its target UI element.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.ShowIcon">
            <summary>
                <para>Gets or sets whether or not this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> should display a glyph within its hint.
</para>
            </summary>
            <value>A <see cref="DefaultBoolean"/> enumerator value that specifies whether or not this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> should display a glyph within its hint.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.Text">
            <summary>
                <para>Gets or sets a text string displayed within this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object's hint.
</para>
            </summary>
            <value>A String displayed within this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object's hint.
</value>


        </member>
        <member name="T:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties">

            <summary>
                <para>Provides access to base validation hint properties. Objects of this type affect all validation hints owned by an Adorner UI Manager.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.#ctor">
            <summary>
                <para>Initializes a new instance of the ValidationHintBaseProperties class with the default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.AllowHtmlDrawText">
            <summary>
                <para>Gets or sets whether or not any <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> owned by this manager should recognize HTML tags in its hint text.
</para>
            </summary>
            <value><b>true</b>, if <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> objects should recognize HTML tags in their hint texts; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.BorderToHintDistance">
            <summary>
                <para>Gets or sets the indent between the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object's border and hint. This setting is common to all <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/>s owned by this manager.
</para>
            </summary>
            <value>An Int32 value that is the indent between the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object's border and hint.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.HintLocation">
            <summary>
                <para>Gets or sets the relative hint position for any <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object owned by this Adorner UI Manager.
</para>
            </summary>
            <value>A <see cref="ValidationHintLocation"/> enumeration value that specifies the relative hint position for any <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object owned by this Adorner UI Manager.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.HintPadding">
            <summary>
                <para>Gets or sets the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> padding. This setting affects all validation hints owned by this Adorner UI Manager.
</para>
            </summary>
            <value>A Padding structure applied to all hints owned by this manager.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.Icon">
            <summary>
                <para>Gets or sets the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> icon. This icon will be displayed for all validation hints owned by the Adorner UI Manager.
</para>
            </summary>
            <value>An Image displayed by any validation hint owned by this manager.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.IconToTextDistance">
            <summary>
                <para>Gets or sets the indent between text and icon within a <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object's hint. This setting is applied to all child validation hints for the current Adorner UI Manager.
</para>
            </summary>
            <value>An Int32 value that is the default distance between hint text and image.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.IconType">
            <summary>
                <para>Gets or sets one of predefined icons to be displayed within <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object hints. This setting affects all validation hints owned by this Adorner UI Manager.

</para>
            </summary>
            <value>A <see cref="ValidationHintIconType"/> enumerator value that specifies a default validation hint icon.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.ImageUri">
            <summary>
                <para>Gets or sets the image displayed within a hint of any <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object owned by this manager. The required image will be taken from the DevExpress Image Gallery.
</para>
            </summary>
            <value>A String value that specifies the image displayed within a hint of any <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object owned by this manager. 
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.ShowBackgroundMode">
            <summary>
                <para>Gets or sets <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> elements that will be colorized using the background color. This setting is applied to all <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> objects owned by this manager.
</para>
            </summary>
            <value>A <see cref="ValidationHintBackgroundMode"/> enumerator value that specifies <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> elements that will be colorized using the background color.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.ShowBorder">
            <summary>
                <para>Gets or sets whether or not any <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object owned by this Adorner UI Manager should display borders around its target UI element.
</para>
            </summary>
            <value><b>true</b>, if validation hints should display borders; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.ShowHint">
            <summary>
                <para>Gets or sets whether or not any <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object owned by this Adorner UI Manager should display hints next to its target UI element.
</para>
            </summary>
            <value><b>true</b>, if validation hints should display hints; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.ShowIcon">
            <summary>
                <para>Gets or sets whether or not a <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> should display a glyph within its hint. This setting is applied to all validation hints owned by this manager.
</para>
            </summary>
            <value><b>true</b>, if a <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> should display a glyph within its hint; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.Text">
            <summary>
                <para>Gets or sets the default <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> text.
</para>
            </summary>
            <value>A String value that is the default validation hint text.
</value>


        </member>
        <member name="T:DevExpress.Utils.VisualEffects.ValidationHintProperties">

            <summary>
                <para>An object that stores global validation hint properties for all three control validation states.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.VisualEffects.ValidationHintProperties.#ctor">
            <summary>
                <para>Initializes a new instance of the ValidationHintProperties class with the default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintProperties.IndeterminateState">
            <summary>
                <para>Provides access to settings that will be in effect only when the parent <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> is in the indeterminate state.

</para>
            </summary>
            <value>A <see cref="ValidationHintBaseProperties"/> object that stores settings for the indeterminate <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object state.

</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintProperties.InvalidState">
            <summary>
                <para>Provides access to settings that will be in effect only when the parent <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> is in the invalid state.

</para>
            </summary>
            <value>A <see cref="ValidationHintBaseProperties"/> object that stores settings for the invalid <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object state.

</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintProperties.State">
            <summary>
                <para>Gets or sets this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object's current state.
</para>
            </summary>
            <value>A <see cref="ValidationHintState"/> enumerator value that specifies this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object's current state.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintProperties.ValidState">
            <summary>
                <para>Provides access to settings that will be in effect only when the parent <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> is in the valid state.

</para>
            </summary>
            <value>A <see cref="ValidationHintBaseProperties"/> object that stores settings for the valid <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object state.

</value>


        </member>
        <member name="T:DevExpress.Utils.VisualEffects.ValidationHint">

            <summary>
                <para>An object used by an Adorner UI Manager component to apply visual effects to controls based on these controls' validation states.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.VisualEffects.ValidationHint.#ctor">
            <summary>
                <para>Initializes a new instance of the ValidationHint class with the default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHint.Appearances">
            <summary>
                <para>Provides access to appearance settings for the current validation hint.
</para>
            </summary>
            <value>A <see cref="ValidationHintAppearances"/> object that stores appearance settings for this hint.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHint.Properties">
            <summary>
                <para>Provides access to base validation hint properties.
</para>
            </summary>
            <value>A <see cref="ValidationHintDefaultProperties"/> object that stores properties applied to this ValidationHint.
</value>


        </member>
        <member name="T:DevExpress.Utils.VisualEffects.ValidationHintLocation">

            <summary>
                <para>Provides flags that can be passed to the <see cref="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.HintLocation"/> and <see cref="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.HintLocation"/> properties to set hint locations relative to their parent <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> objects.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.VisualEffects.ValidationHintLocation.Bottom">
            <summary>
                <para>The hint will be displayed below the target UI element.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.VisualEffects.ValidationHintLocation.Default">
            <summary>
                <para>A default location. This value is equal to <see cref="F:DevExpress.Utils.VisualEffects.ValidationHintLocation.Bottom"/>.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.VisualEffects.ValidationHintLocation.Left">
            <summary>
                <para>The hint will be displayed to the target UI element's left.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.VisualEffects.ValidationHintLocation.Right">
            <summary>
                <para>The hint will be displayed to the target UI element's right.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.VisualEffects.ValidationHintLocation.Top">
            <summary>
                <para>The hint will be displayed above the target UI element.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.VisualEffects.ValidationHintIconType">

            <summary>
                <para>This enumeration's values can be passed to the <see cref="P:DevExpress.Utils.VisualEffects.ValidationHintBaseDefaultProperties.IconType"/> and <see cref="P:DevExpress.Utils.VisualEffects.ValidationHintBaseProperties.IconType"/> properties to choose a predefined image for individual or all <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> objects.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.VisualEffects.ValidationHintIconType.Application">
            <summary>
                <para>An application icon.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.VisualEffects.ValidationHintIconType.Error">
            <summary>
                <para>An error icon.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.VisualEffects.ValidationHintIconType.Information">
            <summary>
                <para>An information icon.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.VisualEffects.ValidationHintIconType.None">
            <summary>
                <para>A <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> will not display any icon.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.VisualEffects.ValidationHintIconType.Question">
            <summary>
                <para>A question icon.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.VisualEffects.ValidationHintIconType.Warning">
            <summary>
                <para>A warning icon.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.VisualEffects.GuideFlyoutLocation">

            <summary>
                <para>Provides flags that can be passed to the <see cref="P:DevExpress.Utils.VisualEffects.GuideDefaultProperties.FlyoutLocation"/> and <see cref="P:DevExpress.Utils.VisualEffects.GuideProperties.FlyoutLocation"/> properties to specify the flyout panel position relative to it's parent adorner guides.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.VisualEffects.GuideFlyoutLocation.Bottom">
            <summary>
                <para>The flyout panel is displayed below its parent guide.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.VisualEffects.GuideFlyoutLocation.Default">
            <summary>
                <para>A default setting equal to the <see cref="F:DevExpress.Utils.VisualEffects.GuideFlyoutLocation.Bottom"/> value.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.VisualEffects.GuideFlyoutLocation.Left">
            <summary>
                <para>The flyout panel is displayed to the left of its parent guide.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.VisualEffects.GuideFlyoutLocation.Right">
            <summary>
                <para>The flyout panel is displayed to the right of its parent guide.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.VisualEffects.GuideFlyoutLocation.Top">
            <summary>
                <para>The flyout panel is displayed above its parent guide.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.FlyoutPanelOptions">

            <summary>
                <para>Contains view and behavior options for a <see cref="T:DevExpress.Utils.FlyoutPanel"/>.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.FlyoutPanelOptions.#ctor">
            <summary>
                <para>Initializes a new instance of the FlyoutPanelOptions class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanelOptions.AnchorType">
            <summary>
                <para>Gets or sets the position at which the <see cref="T:DevExpress.Utils.FlyoutPanel"/> is displayed relative to its owner (<see cref="P:DevExpress.Utils.FlyoutPanel.OwnerControl"/>). 
</para>
            </summary>
            <value>The position at which the FlyoutPanel is displayed relative to its owner.
</value>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanelOptions.AnimationType">
            <summary>
                <para>Gets or sets the animation effect used to display and hide the <see cref="T:DevExpress.Utils.FlyoutPanel"/>.
</para>
            </summary>
            <value>The animation effect used to display and hide the FlyoutPanel. 
</value>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanelOptions.CloseOnHidingOwner">
            <summary>
                <para>Gets or sets whether the <see cref="T:DevExpress.Utils.FlyoutPanel"/> is automatically closed when the owner control is hidden.
</para>
            </summary>
            <value><b>true</b>, if the <see cref="T:DevExpress.Utils.FlyoutPanel"/> is automatically closed when the owner control is hidden; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanelOptions.CloseOnOuterClick">
            <summary>
                <para>Gets or sets whether the <see cref="T:DevExpress.Utils.FlyoutPanel"/> is hidden on clicking outside the panel's bounds.
</para>
            </summary>
            <value><b>true</b>, if the <see cref="T:DevExpress.Utils.FlyoutPanel"/> is hidden on clicking outside the panel's bounds; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Utils.FlyoutPanelOptions.DefaultAnchorType">
            <summary>
                <para>The default value for the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.AnchorType"/> property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Utils.FlyoutPanelOptions.DefaultAnimationType">
            <summary>
                <para>The default value for the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.AnimationType"/> property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Utils.FlyoutPanelOptions.DefaultCloseOnHidingOwner">
            <summary>
                <para>The default value for the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.CloseOnHidingOwner"/> property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Utils.FlyoutPanelOptions.DefaultCloseOnOuterClick">
            <summary>
                <para>The default value for the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.CloseOnOuterClick"/> property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Utils.FlyoutPanelOptions.DefaultHorzIndent">
            <summary>
                <para>The default value for the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.HorzIndent"/> property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Utils.FlyoutPanelOptions.DefaultLocation">
            <summary>
                <para>The default value for the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.Location"/> property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Utils.FlyoutPanelOptions.DefaultVertIndent">
            <summary>
                <para>The default value for the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.VertIndent"/> property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanelOptions.HorzIndent">
            <summary>
                <para>Gets or sets the panel's horizontal indent from the owner's top left or top right corner when the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.AnchorType"/> property is set to <b>TopLeft</b> or <b>TopRight</b>.
</para>
            </summary>
            <value>The panel's horizontal indent from a corner, in pixels.
</value>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanelOptions.Location">
            <summary>
                <para>Gets or sets the display position of the <see cref="T:DevExpress.Utils.FlyoutPanel"/> when the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.AnchorType"/> property is set to <b>Manual</b>. The position is relative to the owner's top left corner.
</para>
            </summary>
            <value>The display position of the FlyoutPanel when the AnchorType property is set to Manual, in pixels.
</value>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanelOptions.VertIndent">
            <summary>
                <para>Gets or sets the panel's vertical indent from the owner's top left or top right corner when the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.AnchorType"/> property is set to <b>TopLeft</b> or <b>TopRight</b>.
</para>
            </summary>
            <value>The panel's vertical indent from a corner, in pixels.
</value>


        </member>
        <member name="T:DevExpress.Utils.VisualEffects.BadgeDefaultProperties">

            <summary>
                <para>Provides members that specify the appearance and behavior of the current <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.#ctor(DevExpress.Utils.VisualEffects.BadgeProperties)">
            <summary>
                <para>Initializes a new instance of the BadgeDefaultProperties class and inherits its property values from the parent object.
</para>
            </summary>
            <param name="parentProperties">
		A BadgeProperties object whose property values are copied to the newly created BadgeDefaultProperties object.

            </param>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.ActualImage">
            <summary>
                <para>Gets the current image displayed by this badge.
</para>
            </summary>
            <value>An Image, currently displayed by this badge.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.ActualImageStretchMargins">
            <summary>
                <para>Returns the current stretch margins applied to this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>'s image.
</para>
            </summary>
            <value>A Padding structure that is the current image stretch margins of this badge.

</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.ActualLocation">
            <summary>
                <para>Returns the current <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> alignment relative to its target element.
</para>
            </summary>
            <value>A <see cref="ContentAlignment"/> enumerator value that specifies the current <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> alignment relative to its target element.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.ActualOffset">
            <summary>
                <para>Returns the current <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> offset.
</para>
            </summary>
            <value>A Point structure that is the current <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> offset.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.ActualPaintStyle">
            <summary>
                <para>Returns the paint style currently applied to this badge.
</para>
            </summary>
            <value>A <see cref="BadgePaintStyle"/> enumerator value that is the paint style currently applied to this badge. 
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.ActualText">
            <summary>
                <para>Returns the text currently displayed in this badge.
</para>
            </summary>
            <value>A String value that is the currently displayed badge text.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.ActualTextMargin">
            <summary>
                <para>Returns margins currently applied to this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>'s text.
</para>
            </summary>
            <value>A Padding structure that specifies margins currently applied to this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>'s text.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.ActualTrimByParent">
            <summary>
                <para>Gets whether or not this badge will be trimmed if it goes beyond its target element's parent.

</para>
            </summary>
            <value><b>true</b>, if the badge should be trimmed; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.AllowGlyphSkinning">
            <summary>
                <para>Gets or sets whether or not the glyph skinning feature is applied to this badge.
</para>
            </summary>
            <value>A DefaultBoolean enumerator value that specifies whether or not the glyph skinning feature is applied to this badge.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.AllowHtmDrawText">
            <summary>
                <para>Gets or sets whether or not this badge recognizes HTML tags in its text.
</para>
            </summary>
            <value>A <see cref="DefaultBoolean"/> enumerator value that specifies whether or not this badge recognizes HTML tags in its text.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.AllowImage">
            <summary>
                <para>Gets or sets whether or not this badge should display its image.
</para>
            </summary>
            <value>A <see cref="DefaultBoolean"/> enumerator value that specifies whether or not this badge should display its image.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.CanHtmDrawText">
            <summary>
                <para>Returns whether or not this badge can recognize HTML tags in its caption string.
</para>
            </summary>
            <value><b>true</b> if this badge can recognize HTML tags in its caption string; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.CanStretchImage">
            <summary>
                <para>Gets whether or not this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> image can be stretched.

</para>
            </summary>
            <value><b>true</b>, if this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>'s image can be stretched; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.CanUseImage">
            <summary>
                <para>Gets whether or not an image, assigned to this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> will be displayed.
</para>
            </summary>
            <value><b>true</b>, if an image, assigned to this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> will be displayed; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.Image">
            <summary>
                <para>Gets or sets an image, used by this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>.
</para>
            </summary>
            <value>An Image displayed within this badge.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.ImageStretchMargins">
            <summary>
                <para>Gets or sets the image region that can be stretched.
</para>
            </summary>
            <value>A Padding structure that is the image stretch region.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.IsGlyphSkinningEnabled">
            <summary>
                <para>Gets whether or not this badge should colorize its glyph.
</para>
            </summary>
            <value><b>true</b>, if this badge should colorize its glyph; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.Location">
            <summary>
                <para>Gets or sets the relative position for this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>.
</para>
            </summary>
            <value>A ContentAlignment enumerator value that specifies the relative position for this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.Offset">
            <summary>
                <para>Gets or sets this badge's offset from its relative position.
</para>
            </summary>
            <value>A Point structure that specifies this badge's offset from its relative position.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.PaintStyle">
            <summary>
                <para>Gets or sets the paint style applied to this badge.
</para>
            </summary>
            <value>A <see cref="Nullable&lt;BadgePaintStyle&gt;"/> enumerator value that specifies the paint style currently applied to this badge. 
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.StretchImage">
            <summary>
                <para>Gets or sets whether or not this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> should stretch its image to fit the text block.
</para>
            </summary>
            <value>A DefaultBoolean enumerator value that specifies whether or not this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> should stretch its image to fit the text block.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.Text">
            <summary>
                <para>Gets or sets the text string, displayed by this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>.
</para>
            </summary>
            <value>A String value that is the <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> text.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.TextMargin">
            <summary>
                <para>Gets or sets margins for this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>'s text.
</para>
            </summary>
            <value>A Padding structure that specifies margins for this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>'s text.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeDefaultProperties.TrimByParent">
            <summary>
                <para>Gets or sets whether or not this <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> should be trimmed to match its target element's parent.
</para>
            </summary>
            <value>A DefaultBoolean enumerator value that specifies whether or not this badge should be trimmed to match its target element's parent.
</value>


        </member>
        <member name="T:DevExpress.Utils.Menu.DXMenuCheckItem">

            <summary>
                <para>Represents a menu item that can be checked and unchecked.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuCheckItem.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the DXMenuCheckItem class with the specified caption.
</para>
            </summary>
            <param name="caption">
		A string that specifies the menu item's caption. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuCheckItem.#ctor(System.String,System.Boolean,System.Drawing.Image,System.EventHandler)">
            <summary>
                <para>Initializes a new instance of the DXMenuCheckItem class with the specified caption, image, check state and event handler.
</para>
            </summary>
            <param name="caption">
		A string that specifies the menu item's caption. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption"/> property.

            </param>
            <param name="check">
		A Boolean value that specifies the menu item's check state. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuCheckItem.Checked"/> property.

            </param>
            <param name="image">
		An image that is displayed within the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Image"/> property.

            </param>
            <param name="checkedChanged">
		An event handler that will be invoked when the check state is toggled. This value is assigned to the <see cref="E:DevExpress.Utils.Menu.DXMenuCheckItem.CheckedChanged"/> event.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuCheckItem.#ctor(System.String,System.Boolean)">
            <summary>
                <para>Initializes a new instance of the DXMenuCheckItem class with the specified caption and check state.
</para>
            </summary>
            <param name="caption">
		A string that specifies the menu item's caption. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption"/> property.

            </param>
            <param name="check">
		A Boolean value that specifies the menu item's check state. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuCheckItem.Checked"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuCheckItem.#ctor">
            <summary>
                <para>Initializes a new instance of the DXMenuCheckItem class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuCheckItem.Checked">
            <summary>
                <para>Gets or sets a value indicating whether the menu item is checked.
</para>
            </summary>
            <value><b>true</b> if the menu item is checked; otherwise, <b>false</b>.
</value>


        </member>
        <member name="E:DevExpress.Utils.Menu.DXMenuCheckItem.CheckedChanged">
            <summary>
                <para>Occurs when the menu item's check state is toggled.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuCheckItem.Dispose">
            <summary>
                <para>Releases all the resources used by the current object.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.SidePanel">

            <summary>
                <para>A panel with one-pixel borders that supports panel snapping and the overlay resize feature.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.SidePanel.#ctor">
            <summary>
                <para>Initializes a new instance of the SidePanel class with the default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.SidePanel.AllowResize">
            <summary>
                <para>Gets or sets whether or not end-users can resize this SidePanel by dragging its border.
</para>
            </summary>
            <value><b>true</b>, if end-users can resize this SidePanel by dragging its border; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SidePanel.AllowSnap">
            <summary>
                <para>Gets or sets whether or not borders of this SidePanel are allowed to snap to borders of other panels at runtime.
</para>
            </summary>
            <value><b>true</b>, if borders of this panel can snap to other panels' borders; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SidePanel.Appearance">
            <summary>
                <para>Provides access to this panel's appearance settings.
</para>
            </summary>
            <value>A <see cref="AppearanceObject"/> object that stores appearance settings applied to this SidePanel.

</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SidePanel.BackColor">
            <summary>
                <para>Gets or sets this panel's background color.
</para>
            </summary>
            <value>A Color that is this panel's background color.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SidePanel.BorderThickness">
            <summary>
                <para>Gets or sets the SidePanel border thickness.
</para>
            </summary>
            <value>An Int32 value that specifies the SidePanel border thickness.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SidePanel.DisplayRectangle">
            <summary>
                <para>Returns the rectangle structure that specifies the position and size of this SidePanel.
</para>
            </summary>
            <value>A <see cref="Rectangle"/> structure that stores this SidePanel's position and size.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SidePanel.Dock">
            <summary>
                <para>Gets or sets the parent container side to which this SidePanel is docked.
</para>
            </summary>
            <value>A <see cref="DockStyle"/> enumeration value that specifies the parent container side to which this SidePanel is docked.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SidePanel.ForeColor">
            <summary>
                <para>Gets or sets the fore color of this SidePanel and its child controls.
</para>
            </summary>
            <value>A Color that is the fore color of this SidePanel and its child controls.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.SidePanel.GetBorderThickness">
            <summary>
                <para>Gets or sets the actual SidePanel border thickness scaled according to the current DPI settings.
</para>
            </summary>
            <returns>An Int32 value that specifies the SidePanel border thickness.
</returns>


        </member>
        <member name="P:DevExpress.XtraEditors.SidePanel.LookAndFeel">
            <summary>
                <para>Provides access to Look and Feel settings of this SidePanel.
</para>
            </summary>
            <value>A <see cref="ContainerUserLookAndFeel"/> object that stores look&amp;feel settings of this SidePanel.
</value>


        </member>
        <member name="E:DevExpress.XtraEditors.SidePanel.OverlayResizeEnter">
            <summary>
                <para>Occurs when a mouse pointer enters the overlay resize zone of this panel.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.SidePanel.OverlayResizeZoneThickness">
            <summary>
                <para>Gets or sets the width of a SidePanel's overlay resize zone.
</para>
            </summary>
            <value>An Int32 value that specifies the width of a SidePanel's overlay resize zone.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.SidePanel.ResetBackColor">
            <summary>
                <para>Resets this panel's <see cref="P:DevExpress.XtraEditors.SidePanel.BackColor"/> property to its default value.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.SidePanel.SnapThreshold">
            <summary>
                <para>Gets or sets the distance from the border of this SidePanel to the border of another panel, starting from which the panel snapping feature activates.

</para>
            </summary>
            <value>An Int32 value that is the distance between panel borders, starting from which the panel snapping feature activates.
</value>


        </member>
        <member name="T:DevExpress.Utils.ImageCollection">

            <summary>
                <para>The collection of <see cref="T:System.Drawing.Image"/> objects to be used within DevExpress controls. 
The ImageCollection is also used as a part of the <see cref="T:DevExpress.Utils.SharedImageCollection"/> component.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ImageCollection.#ctor">
            <summary>
                <para>Initializes a new instance of the ImageCollection class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.#ctor(System.ComponentModel.IContainer)">
            <summary>
                <para>Initializes a new instance of the ImageCollection class with the specified container.
</para>
            </summary>
            <param name="container">
		An object that implements the <see cref="T:System.ComponentModel.IContainer"/> interface.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.#ctor(System.Boolean)">
            <summary>
                <para>Initializes a new instance of the ImageCollection class with the specified settings.
</para>
            </summary>
            <param name="allowModifyImages">
		<b>true</b> to permit image modification; otherwise, <b>false</b>.


            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.AddImage(System.Drawing.Image)">
            <summary>
                <para>Appends the specified image to the collection.
</para>
            </summary>
            <param name="image">
		The image to add to the collection.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.AddImage(System.Object,System.Drawing.Image)">
            <summary>
                <para>Appends the specified image to the specified list.
</para>
            </summary>
            <param name="images">
		An object that represents the collection of images.

            </param>
            <param name="image">
		The image to add to the specified collection.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.AddImage(System.Drawing.Image,System.String)">
            <summary>
                <para>Adds an image with the specified name to the collection.
</para>
            </summary>
            <param name="image">
		An Image to be added to the collection.

            </param>
            <param name="name">
		A string that specifies the image's name. You can then retrieve images by name via the <see cref="P:DevExpress.Utils.ImageCollection.Images"/> property.


            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.AddImageStrip(System.Drawing.Image)">
            <summary>
                <para>Adds the images from the specified horizontal image strip to the collection.
</para>
            </summary>
            <param name="image">
		The image(s) to add to the collection.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.AddImageStripVertical(System.Drawing.Image)">
            <summary>
                <para>Adds the images from the specified vertical image strip to the collection.
</para>
            </summary>
            <param name="image">
		The image(s) to add to the collection.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.AllowDPIAware">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.BeginInit">
            <summary>
                <para>Notifies the image collection that initialization is starting.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.ImageCollection.Changed">
            <summary>
                <para>Fires after the image collection has been changed.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.Clear">
            <summary>
                <para>Removes all images from the collection.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.DestroyImageListImage(System.Drawing.Image)">
            <summary>
                <para> </para>
            </summary>
            <param name="image">
		 
            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.DrawImageListImage(DevExpress.Utils.Drawing.GraphicsInfoArgs,System.Object,System.Int32,System.Drawing.Rectangle,System.Boolean)">
            <summary>
                <para>Draws the specified image in the specified state and at the specified location.
</para>
            </summary>
            <param name="info">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsInfoArgs"/> object.

            </param>
            <param name="images">
		An object that represents the source of the images.

            </param>
            <param name="index">
		A zero-based integer that specifies the index of the image within the <i>images</i>.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the drawing area.

            </param>
            <param name="enabled">
		<b>true</b> to draw the image in the enabled state; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.DrawImageListImage(DevExpress.Utils.Drawing.GraphicsCache,System.Object,System.Int32,System.Drawing.Rectangle)">
            <summary>
                <para>Draws the specified image at the specified location.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that specifies the storage for the most  used pens, fonts and brushes.

            </param>
            <param name="images">
		An object that represents the source of the images.


            </param>
            <param name="index">
		A zero-based integer that specifies the index of the image within the <i>images</i>.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the drawing area.


            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.DrawImageListImage(DevExpress.Utils.Drawing.GraphicsCache,System.Object,System.Int32,System.Drawing.Rectangle,System.Boolean)">
            <summary>
                <para>Draws the image.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides storage for pens, fonts and brushes used when painting.


            </param>
            <param name="images">
		An object that represents the image source.

            </param>
            <param name="index">
		An integer value that identifies the image within the collection.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the bounding rectangle of the image.

            </param>
            <param name="enabled">
		<b>true</b> to draw an image in enabled state; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.DrawImageListImage(DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.Image,System.Object,System.Int32,System.Drawing.Rectangle,System.Boolean)">
            <summary>
                <para>Draws the image.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides storage for pens, fonts and brushes used when painting.


            </param>
            <param name="image">
		The <see cref="T:System.Drawing.Image"/> to draw.

            </param>
            <param name="images">
		An object that represents the image source. This parameter is in effect if the <i>image</i> parameter is <b>null</b>.

            </param>
            <param name="index">
		An integer value that identifies the image within the collection. This parameter is in effect if the <i>image</i> parameter is <b>null</b>.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the bounding rectangle of the image.

            </param>
            <param name="enabled">
		<b>true</b>, to draw an image in enabled state; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.DrawImageListImage(DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.Image,System.Object,System.Int32,System.Drawing.Rectangle,System.Drawing.Imaging.ImageAttributes)">
            <summary>
                <para>Draws the specified image using the specified paint settings.
</para>
            </summary>
            <param name="cache">
		Provides the paint surface and storage of the recently used pens, fonts and brushes.

            </param>
            <param name="image">
		The <see cref="T:System.Drawing.Image"/> to draw.

            </param>
            <param name="images">
		An object that represents the source of images. This parameter is in effect if the <i>image</i> parameter is <b>null</b>.


            </param>
            <param name="index">
		An integer value that identifies the image within the collection. This parameter is in effect if the <i>image</i> parameter is <b>null</b>.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the drawing area.


            </param>
            <param name="attributes">
		Contains information about how image colors are manipulated during rendering. 

            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.DrawImageListImage(DevExpress.Utils.Drawing.GraphicsCache,System.Object,System.Int32,System.Drawing.Rectangle,System.Drawing.Imaging.ImageAttributes)">
            <summary>
                <para>Draws the specified image using the specified paint settings.
</para>
            </summary>
            <param name="cache">
		Provides the paint surface and storage of the recently used pens, fonts and brushes.

            </param>
            <param name="images">
		An object that represents the source of images.


            </param>
            <param name="index">
		An integer value that identifies the image within the collection.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the drawing area.


            </param>
            <param name="attributes">
		Contains information about how image colors are manipulated during rendering. 

            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.DrawImageListImage(DevExpress.Utils.Drawing.GraphicsCache,System.Object,System.Int32,System.Drawing.Rectangle,System.Boolean,DevExpress.Utils.Design.ISvgPaletteProvider)">
            <summary>
                <para>Draws the specified image using the specified paint settings.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides storage for pens, fonts and brushes used when painting.

            </param>
            <param name="images">
		An object that represents the image source.

            </param>
            <param name="index">
		An integer value that identifies the image within the collection.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the bounding rectangle of the image.

            </param>
            <param name="enabled">
		<b>true</b>, to draw an image in enabled state; otherwise, <b>false</b>.

            </param>
            <param name="palette">
		An ISvgPaletteProvider object specifying colors used to paint vector images.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.DrawImageListImage(DevExpress.Utils.Drawing.GraphicsCache,System.Object,System.Int32,System.Drawing.Rectangle,DevExpress.Utils.Design.ISvgPaletteProvider)">
            <summary>
                <para>Draws the specified image using the specified paint settings.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides storage for pens, fonts and brushes used when painting.

            </param>
            <param name="images">
		An object that represents the image source.

            </param>
            <param name="index">
		An integer value that identifies the image within the collection.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the bounding rectangle of the image.

            </param>
            <param name="palette">
		An ISvgPaletteProvider object specifying colors used to paint vector images.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.DrawImageListImage(DevExpress.Utils.Drawing.GraphicsCache,System.Object,System.Int32,System.Drawing.Rectangle,System.Drawing.Imaging.ImageAttributes,DevExpress.Utils.Design.ISvgPaletteProvider)">
            <summary>
                <para>Draws the specified image using the specified paint settings.
</para>
            </summary>
            <param name="cache">
		Provides the paint surface and storage of the recently used pens, fonts and brushes.

            </param>
            <param name="images">
		An object that represents the image source.

            </param>
            <param name="index">
		An integer value that identifies the image within the collection.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the bounding rectangle of the image.

            </param>
            <param name="attributes">
		Contains information about how image colors are manipulated during rendering. 

            </param>
            <param name="palette">
		An ISvgPaletteProvider object specifying colors used to paint vector images.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.EndInit">
            <summary>
                <para>Notifies the image collection that initialization is complete.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.ExportToFile(System.String)">
            <summary>
                <para>Saves the contents of the current collection to a file.
</para>
            </summary>
            <param name="fileName">
		A string that specifies the name of the file to which the contents of the image collection is saved.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.GetImageListImage(System.Object,System.Int32)">
            <summary>
                <para>Returns the image at the specified position within the specified image list.
</para>
            </summary>
            <param name="images">
		An object that represents the source of images.

            </param>
            <param name="index">
		A zero-based integer that specifies the index of the image within the <i>images</i>.

            </param>
            <returns>An <see cref="T:System.Drawing.Image"/> descendant that represents the image at the specified position within the specified image list. <b>null</b> (<b>Nothing</b> in Visual Basic) if the image isn't found.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.GetImageListImage(System.Object,System.String)">
            <summary>
                <para>Returns an image from the specified ImageList or ImageCollection.
</para>
            </summary>
            <param name="images">
		An ImageList or ImageCollection that stores an image to be returned.

            </param>
            <param name="id">
		A string value that is the key/name of the image to be returned.

            </param>
            <returns>An image with the specified key/name stored in an ImageList/ImageCollection.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.GetImageListImage(System.Object,System.Int32,DevExpress.Utils.Design.ISvgPaletteProvider,System.Nullable`1)">
            <summary>
                <para>Returns the image at the specified position within the specified image list.
</para>
            </summary>
            <param name="images">
		An object that represents the source of images.

            </param>
            <param name="index">
		A zero-based integer that specifies the index of the image within the <i>images</i>.

            </param>
            <param name="palette">
		An ISvgPaletteProvider object specifying colors used to paint vector images.

            </param>
            <param name="size">
		A vector image size.

            </param>
            <returns>An <see cref="T:System.Drawing.Image"/> descendant that represents the image at the specified position within the specified image list. <b>null</b> (<b>Nothing</b> in Visual Basic) if the image isn't found.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.GetImageListImageCount(System.Object)">
            <summary>
                <para>Returns the number of images within the specified source of images.
</para>
            </summary>
            <param name="images">
		An object that represents the source of images.

            </param>
            <returns>An integer value that specifies the number of images within the specified image source.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.GetImageListImageSize(System.Object,System.Int32)">
            <summary>
                <para>Returns the size of the image at the specified position in the image list.
</para>
            </summary>
            <param name="images">
		An object that represents the source of images.


            </param>
            <param name="index">
		The index of the required image in the <i>images</i> list. 

            </param>
            <returns>A <see cref="T:System.Drawing.Size"/> value that specifies the size of a specific image.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.GetImageListSize(System.Object)">
            <summary>
                <para>Returns the size of the images in the specified image list.
</para>
            </summary>
            <param name="images">
		An object that represents the source of the images.


            </param>
            <returns>A <see cref="T:System.Drawing.Size"/> structure that specifies the height and width of the images in the specified list. <see cref="F:System.Drawing.Size.Empty"/> if <i>images</i> is <b>null</b> (<b>Nothing</b> in Visual Basic) or isn't a source of images.

</returns>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.GetImageListSize(System.Drawing.Image,System.Object,System.Int32)">
            <summary>
                <para>Gets the size of the specified image or of an image in the image list addressed by a specific index.

</para>
            </summary>
            <param name="image">
		An image whose size is returned.


            </param>
            <param name="images">
		An object that represents the source of images. This parameter is in effect if the <i>image</i> parameter is set to <b>null</b>.


            </param>
            <param name="index">
		The index of the required image in the <i>images</i> list.

            </param>
            <returns>A <see cref="T:System.Drawing.Size"/> value that specifies the size of a specific image.

</returns>


        </member>
        <member name="E:DevExpress.Utils.ImageCollection.GetImageSize">
            <summary>
                <para>When the <see cref="P:DevExpress.Utils.ImageCollection.IsDpiAware"/> option is enabled, the <b>GetImageSize</b> event allows you to customize the size of images returned by the <see cref="T:DevExpress.Utils.ImageCollection"/>. This event is fired on finishing an <see cref="T:DevExpress.Utils.ImageCollection"/> object initialization.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.ImageFromFile(System.String)">
            <summary>
                <para>Returns the image stored in the specified file.
</para>
            </summary>
            <param name="fileName">
		A string that specifies the full path to the file.

            </param>
            <returns>A <see cref="T:System.Drawing.Image"/> object that represents the image stored in the specified file; <b>null</b> if the image cannot be loaded.
</returns>


        </member>
        <member name="P:DevExpress.Utils.ImageCollection.Images">
            <summary>
                <para>Provides access to the collection of images.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.Images"/> object that represents the collection of images.
</value>


        </member>
        <member name="P:DevExpress.Utils.ImageCollection.ImageSize">
            <summary>
                <para>Gets or sets the size of images in the image collection.
For the <see cref="T:DevExpress.Utils.SharedImageCollection"/>, this property specifies the size of images fetched from an image strip (at design time or via the <see cref="M:DevExpress.Utils.ImageCollection.AddImageStrip"/> and <see cref="M:DevExpress.Utils.ImageCollection.AddImageStripVertical"/> methods).
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Size"/> structure which specifies the height and width of the images in the list.
</value>


        </member>
        <member name="P:DevExpress.Utils.ImageCollection.ImageStream">
            <summary>
                <para>Gets or sets the handle to the <see cref="T:System.Windows.Forms.ImageListStreamer"/> associated with the current image collection.

</para>
            </summary>
            <value>A handle to the <see cref="T:System.Windows.Forms.ImageListStreamer"/> for the current image collection. <b>null</b> (<b>Nothing</b> in Visual Basic) if the current image collection is empty.
</value>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.InsertGalleryImage(System.String,System.String,System.Drawing.Image,System.Int32)">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="name">
		 

            </param>
            <param name="uri">
		 

            </param>
            <param name="image">
		 

            </param>
            <param name="index">
		 

            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.InsertImage(System.Drawing.Image,System.String,System.Type,System.Int32)">
            <summary>
                <para>Inserts an image from project resources.
</para>
            </summary>
            <param name="image">
		An image to be inserted.

            </param>
            <param name="name">
		The name of the image to be inserted.

            </param>
            <param name="resourceType">
		The type of the class where the image to be inserted is defined.

            </param>
            <param name="index">
		An integer value that specifies the position at which the image needs to be inserted in the image collection.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.InsertImage(System.Drawing.Image,System.String,System.Type,System.Int32,System.String)">
            <summary>
                <para>Inserts an image from project resources.
</para>
            </summary>
            <param name="image">
		An image to be inserted.

            </param>
            <param name="name">
		The name of the image to be inserted.

            </param>
            <param name="resourceType">
		The type of the class where the image to be inserted is defined.

            </param>
            <param name="index">
		An integer value that specifies the position at which the image needs to be inserted in the image collection.

            </param>
            <param name="resName">
		The name of the class where the image to be inserted is defined.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.InsertImage(System.Int32,System.String,System.String,System.Int32)">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="assemblyId">
		 

            </param>
            <param name="name">
		 

            </param>
            <param name="path">
		 

            </param>
            <param name="index">
		 

            </param>


        </member>
        <member name="P:DevExpress.Utils.ImageCollection.IsDpiAware">
            <summary>
                <para>Gets or sets the value that specifies that when requesting an image from the ImageCollection, another DPI-specific image corresponding to the requested image is returned instead.
</para>
            </summary>
            <value>The <b>DefaultBoolean.True</b> value if a requested image is replaced with a DPI-specific image; <b>DefaultBoolean.False</b> or <b>DefaultBoolean.Default</b> if this feature is disabled.
</value>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.IsImageExists(System.Drawing.Image,System.Object,System.Int32)">
            <summary>
                <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="image">
		The <see cref="T:System.Drawing.Image"/>.

            </param>
            <param name="images">
		An object that represents the image source.

            </param>
            <param name="index">
		An integer value that specifies the position of the image within the collection.

            </param>
            <returns>The Boolean value.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.IsImageListImageClone(System.Drawing.Image)">
            <summary>
                <para> </para>
            </summary>
            <param name="image">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.IsImageListImageExists(System.Object,System.Int32)">
            <summary>
                <para>Determines whether the image exists at the specified position within the specified source of images.
</para>
            </summary>
            <param name="images">
		An object that represents the source of images.

            </param>
            <param name="index">
		A zero-based integer that specifies the index of the image within the <i>images</i>.

            </param>
            <returns><b>true</b> if the image exists at the specified position within the specified source of images; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.IsImageListImageScaled(System.Object,System.Int32)">
            <summary>
                <para>Returns whether the specified collection contains DPI-specific images.
</para>
            </summary>
            <param name="images">
		An image collection to check for DPI-specific images.

            </param>
            <param name="index">
		An integer value specifying a zero-based index to check whether an image with this index exists in the specified collection.

            </param>
            <returns><b>true</b>, if the specified collection contains DPI-specific images; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.IsImageListImageScaled(System.Object)">
            <summary>
                <para> </para>
            </summary>
            <param name="images">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.IsSvgImageExists(System.Object,System.Int32)">
            <summary>
                <para>Returns whether an image with the specified index exists in the specified collection.
</para>
            </summary>
            <param name="images">
		An object that represents the source of images.

            </param>
            <param name="index">
		The index of the required image in the <i>images</i> list. 

            </param>
            <returns><b>true</b>, if an image exists; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.RegisterAssemblies(System.String[])">
            <summary>
                <para>Registers specific external image-containing assemblies within your application.
</para>
            </summary>
            <param name="assemblies">
		A String array that contains names of the assemblies that should be registered.

            </param>


        </member>
        <member name="P:DevExpress.Utils.ImageCollection.RegisteredAssemblies">
            <summary>
                <para>Provides access to external image-containing assemblies, registered by this ImageCollection.
</para>
            </summary>
            <value>A <see cref="ImageCollectionRegisteredAssemblies"/> object that stores registered assemblies.
</value>


        </member>
        <member name="E:DevExpress.Utils.ImageCollection.ResolveImage">
            <summary>
                <para>When requesting an image from the ImageCollection, the <b>ResolveImage</b> event fires when the project resources do not contain a DPI-specific image that matches the requested image and allows you to provide this DPI-specific image manually. This event is in effect when the <see cref="P:DevExpress.Utils.ImageCollection.IsDpiAware"/> option is enabled and the requested image was loaded into the ImageCollection from the project resources.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.SupportAnimation(System.Object,System.Int32)">
            <summary>
                <para> </para>
            </summary>
            <param name="images">
		 
            </param>
            <param name="index">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Utils.ImageCollection.TransparentColor">
            <summary>
                <para>Gets or sets the color to treat as transparent.
</para>
            </summary>
            <value>The <see cref="T:System.Drawing.Color"/> which represents the color that is not rendered when the image is drawn.
</value>


        </member>
        <member name="T:DevExpress.Utils.ToolTipControlInfo">

            <summary>
                <para>Contains tooltip information.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControlInfo.#ctor(System.Object,System.String,System.String)">
            <summary>
                <para>Initializes a new instance of the ToolTipControlInfo class with the specified identifier, tooltip text and title. 
</para>
            </summary>
            <param name="_object">
		An object used as an identifier of the currently processed visual element. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Object"/> property.

            </param>
            <param name="text">
		A string that specifies a tooltip's text. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Text"/> property.

            </param>
            <param name="title">
		A string that specifies a tooltip's title. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Title"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControlInfo.#ctor(System.Object,System.String,System.Boolean,DevExpress.Utils.ToolTipIconType)">
            <summary>
                <para>Initializes a new instance of the ToolTipControlInfo class with the specified identifier, tooltip text, icon type and delay flag.
</para>
            </summary>
            <param name="_object">
		An object used as an identifier of the currently processed visual element. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Object"/> property.

            </param>
            <param name="text">
		A string that specifies a tooltip's text. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Text"/> property.

            </param>
            <param name="immediateToolTip">
		A Boolean value that specifies whether a tooltip needs to be displayed immediately or after a delay. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.ImmediateToolTip"/> property.

            </param>
            <param name="iconType">
		A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value that specifies the kind of predefined icon to display in a tooltip. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.IconType"/>

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControlInfo.#ctor(System.Object,System.String,System.String,System.Boolean,DevExpress.Utils.ToolTipIconType)">
            <summary>
                <para>Initializes a new instance of the ToolTipControlInfo class with the specified identifier, tooltip text, title, icon type and delay flag.
</para>
            </summary>
            <param name="_object">
		An object used as an identifier of the currently processed visual element. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Object"/> property.

            </param>
            <param name="text">
		A string that specifies a tooltip's text. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Text"/> property.

            </param>
            <param name="title">
		A string that specifies a tooltip's title. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Title"/> property.

            </param>
            <param name="immediateToolTip">
		A Boolean value that specifies whether a tooltip needs to be displayed immediately or after a delay. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.ImmediateToolTip"/> property.

            </param>
            <param name="iconType">
		A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value that specifies the kind of predefined icon to display in a tooltip. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.IconType"/>

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControlInfo.#ctor(System.Object,System.String,System.String,DevExpress.Utils.ToolTipIconType)">
            <summary>
                <para>Initializes a new instance of the ToolTipControlInfo class with the specified identifier, tooltip text, title and icon type.
</para>
            </summary>
            <param name="_object">
		An object used as an identifier of the currently processed visual element. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Object"/> property.

            </param>
            <param name="text">
		A string that specifies a tooltip's text. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Text"/> property.

            </param>
            <param name="title">
		A string that specifies a tooltip's title. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Title"/> property.

            </param>
            <param name="iconType">
		A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value that specifies the kind of predefined icon to display in a tooltip. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.IconType"/>

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControlInfo.#ctor">
            <summary>
                <para>Initializes a new instance of the ToolTipControlInfo class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControlInfo.#ctor(System.Object,System.String,DevExpress.Utils.ToolTipIconType)">
            <summary>
                <para>Initializes a new instance of the ToolTipControlInfo class with the specified identifier, tooltip text and icon type.
</para>
            </summary>
            <param name="_object">
		An object used as an identifier of the currently processed visual element. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Object"/> property.

            </param>
            <param name="text">
		A string that specifies a tooltip's text. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Text"/> property.

            </param>
            <param name="iconType">
		A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value that specifies the kind of predefined icon to display in a tooltip. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.IconType"/>

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControlInfo.#ctor(System.Object,System.String)">
            <summary>
                <para>Initializes a new instance of the ToolTipControlInfo class with the specified identifier and tooltip text.
</para>
            </summary>
            <param name="_object">
		An object used as an identifier of the currently processed visual element. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Object"/> property.

            </param>
            <param name="text">
		A string that specifies a tooltip's text. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Text"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControlInfo.#ctor(System.Object,System.String,System.String,System.Boolean,DevExpress.Utils.ToolTipIconType,DevExpress.Utils.DefaultBoolean)">
            <summary>
                <para>Initializes a new instance of the ToolTipControlInfo class with the specified settings.
</para>
            </summary>
            <param name="_object">
		An object used as an identifier of the currently processed visual element. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Object"/> property.

            </param>
            <param name="text">
		A string that specifies a tooltip's text. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Text"/> property.

            </param>
            <param name="title">
		A string that specifies a tooltip's title. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Title"/> property.

            </param>
            <param name="immediateToolTip">
		A Boolean value that specifies whether a tooltip needs to be displayed immediately or after a delay. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.ImmediateToolTip"/> property.

            </param>
            <param name="iconType">
		A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value that specifies the kind of predefined icon to display in a tooltip. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.IconType"/>

            </param>
            <param name="allowHtmlText">
		A <see cref="T:DevExpress.Utils.DefaultBoolean"/> value that specifies whether HTML formatting is supported in tooltips. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.AllowHtmlText"/> property

            </param>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.AllowHtmlText">
            <summary>
                <para>Gets or sets whether HTML formatting is supported in tooltips.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> value that specifies whether HTML formatting is supported in tooltips.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.ForcedShow">
            <summary>
                <para>Gets or sets whether the tooltip should be forcibly shown for the same visual element via the <see cref="M:DevExpress.Utils.ToolTipController.ShowHint"/> method.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value that specifies whether the tooptip should be forcibly shown for the same visual element.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.HideHintOnMouseMove">
            <summary>
                <para>Gets or sets whether the shown tooltip hides when an end-user moves the mouse.
</para>
            </summary>
            <value>A Boolean value specifying whether the shown tooltip hides when an end-user moves the mouse.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.IconType">
            <summary>
                <para>Gets or sets the kind of predefined icon to display in a tooltip.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value specifying the kind of predefined icon to display.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.ImmediateToolTip">
            <summary>
                <para>Gets or sets whether a tooltip will be displayed immediately or after a delay.
</para>
            </summary>
            <value>A Boolean value that specifies whether a tooltip will be displayed immediately after an event handler call.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.Interval">
            <summary>
                <para>Gets or sets the interval that must pass before a tooltip is displayed.
</para>
            </summary>
            <value>An integer value that specifies the delay, in milliseconds.
</value>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControlInfo.Normalize">
            <summary>
                <para>Removes the '0x0' character from the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Text"/> and <see cref="P:DevExpress.Utils.ToolTipControlInfo.Title"/> strings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.Object">
            <summary>
                <para>Gets or sets an object which uniquely identifies the currently processed element.
</para>
            </summary>
            <value>An object which uniquely identifies the currently processed element.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.ObjectBounds">
            <summary>
                <para>Gets or sets the bounds of the object for which a tooltip is displayed.
</para>
            </summary>
            <value>The bounds of the object for which a tooltip is displayed.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.SuperTip">
            <summary>
                <para>Gets or sets a <see cref="T:DevExpress.Utils.SuperToolTip"/> that will be displayed if the <see cref="P:DevExpress.Utils.ToolTipControlInfo.ToolTipType"/> property is set to <b>SuperTip</b>
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.SuperToolTip"/> object that has been assigned to this property. The default value is <b>null</b>. 

</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.Text">
            <summary>
                <para>Gets or sets the tooltip's text.
</para>
            </summary>
            <value>A string that specifies the tooltip's text.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.Title">
            <summary>
                <para>Gets or sets the tooltip's title.
</para>
            </summary>
            <value>A string that specifies the tooltip's title.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.ToolTipAnchor">
            <summary>
                <para>Gets or sets whether the tooltip is anchored relative to the mouse pointer or the owning control.
</para>
            </summary>
            <value>A <see cref="ToolTipAnchor"/> value that specifies whether the tooltip is anchored relative to the mouse pointer or the owning control.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.ToolTipImage">
            <summary>
                <para>Gets or sets the image to display within the current tooltip.
</para>
            </summary>
            <value>An <see cref="T:System.Drawing.Image"/> object that specifies the image to display within the current tooltip.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.ToolTipIndent">
            <summary>
                <para>Gets or sets the space, in pixels, between the tooltip and the associated visual element.
</para>
            </summary>
            <value>An integer value specifying the space, in pixels, between the tooltip and the associated visual element. The default is <b>16</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.ToolTipLocation">
            <summary>
                <para>Gets or sets the tooltip location.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipLocation"/> enumeration value.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.ToolTipPosition">
            <summary>
                <para>Gets or sets the tooltip's position in screen coordinates.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Point"/> structure that specifies the tooltip's position, in pixels, relative to the top left corner of the screen.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.ToolTipType">
            <summary>
                <para>Gets or sets the type of tooltip to be displayed.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipType"/> value that specifies the type of tooltip to be displayed.

</value>


        </member>
        <member name="T:DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventHandler">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ToolTipController.GetActiveObjectInfo"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventHandler.Invoke(System.Object,DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ToolTipController.GetActiveObjectInfo"/> event.
</para>
            </summary>
            <param name="sender">
		The event source. This parameter identifies the ToolTip Controller which fires this event.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventArgs"/> object that contains event data.

            </param>


        </member>
        <member name="T:DevExpress.Utils.Menu.IDXDropDownControl">

            <summary>
                <para>Contains methods to operate on <see cref="T:DevExpress.Utils.Menu.DXPopupMenu"/> objects.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Menu.IDXDropDownControl.Hide">
            <summary>
                <para>Hides the current popup control.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Menu.IDXDropDownControl.Show(DevExpress.Utils.Menu.IDXMenuManager,System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
                <para>Displays the current popup control using a menu manager.
</para>
            </summary>
            <param name="manager">
		An IDXMenuManager object that displays a popup control in a specific manner.

            </param>
            <param name="control">
		A parent control for the current popup control.

            </param>
            <param name="pos">
		A position where a popup control will be displayed.

            </param>


        </member>
        <member name="P:DevExpress.Utils.Menu.IDXDropDownControl.Visible">
            <summary>
                <para>Gets whether the current popup control is visible.
</para>
            </summary>
            <value><b>true</b> if the current popup control is visible; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.Utils.ToolTipController.GetActiveObjectInfo"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventArgs.#ctor(System.Windows.Forms.Control,System.Object,DevExpress.Utils.ToolTipControlInfo,System.Drawing.Point)">
            <summary>
                <para>Initializes a new instance of the ToolTipControllerGetActiveObjectInfoEventArgs class with the specified settings.
</para>
            </summary>
            <param name="control">
		The control for which a tooltip controller's event is fired. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl"/> property.

            </param>
            <param name="obj">
		The element of the control (or the type of the element) for which the tooltip is displayed. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject"/> property.

            </param>
            <param name="info">
		An object which uniquely identifies the current element for which the tooltip is displayed. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventArgs.Info"/> property.

            </param>
            <param name="controlMousePosition">
		A <see cref="T:System.Drawing.Point"/> structure that specifies the position of the mouse cursor relative to the control's upper left corner. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventArgs.ControlMousePosition"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventArgs.ControlMousePosition">
            <summary>
                <para>Gets the position of the mouse cursor relative to the control's upper left corner. 

</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Point"/> structure that specifies the position of the mouse cursor relative to the control's upper left corner.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventArgs.Info">
            <summary>
                <para>Gets or sets an object which uniquely identifies the visual element at the current position.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipControlInfo"/> object which identifies the visual element at the current position.
</value>


        </member>
        <member name="T:DevExpress.Utils.Menu.MenuViewType">

            <summary>
                <para>Contains values that specify how a <see cref="T:DevExpress.Utils.Menu.DXPopupMenu"/> is displayed.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.Menu.MenuViewType.Menu">
            <summary>
                <para>A menu is displayed as a regular popup menu.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Menu.MenuViewType.RibbonMiniToolbar">
            <summary>
                <para>A menu is displayed as a <see cref="T:DevExpress.XtraBars.Ribbon.RibbonMiniToolbar"/>.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Menu.MenuViewType.Toolbar">
            <summary>
                <para>A menu is displayed as a popup bar.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.Drawing.ImageLayoutMode">

            <summary>
                <para>Specifies how an image can be aligned within another object.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.BottomCenter">
            <summary>
                <para>An image is vertically aligned at the bottom, and horizontally aligned at the center. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.BottomLeft">
            <summary>
                <para>An image is vertically aligned at the bottom, and horizontally aligned on the left.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.BottomRight">
            <summary>
                <para>An image is vertically aligned at the bottom, and horizontally aligned on the right. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.Default">
            <summary>
                <para>The default layout.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.MiddleCenter">
            <summary>
                <para>An image is horizontally and vertically aligned at the center.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.MiddleLeft">
            <summary>
                <para>An image is vertically aligned at the center, and horizontally aligned on the left.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.MiddleRight">
            <summary>
                <para>An image is vertically aligned at the center, and horizontally aligned on the right.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.Squeeze">
            <summary>
                <para>An image is displayed as is, if its actual size is smaller than the size of the container. If the image size is larger than the container's size, the image is shrunk proportionally to fit the container's bounds.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.Stretch">
            <summary>
                <para>An image is stretched to fill the available client area.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.StretchHorizontal">
            <summary>
                <para>An image is stretched horizontally.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.StretchVertical">
            <summary>
                <para>An image is stretched vertically.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.TopCenter">
            <summary>
                <para>An image is vertically aligned at the top, and horizontally aligned at the center. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.TopLeft">
            <summary>
                <para>An image is vertically aligned at the top, and horizontally aligned on the left.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.TopRight">
            <summary>
                <para>An image is vertically aligned at the top, and horizontally aligned on the right.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.ZoomInside">
            <summary>
                <para>Zooms an image proportionally so that it's displayed within the client area in its entirety.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Drawing.ImageLayoutMode.ZoomOutside">
            <summary>
                <para>Zooms an image proportionally, making its smaller side (width or height) to be displayed entirely. The image is centered, so the larger side (height or width) will not be displayed in its entirety.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.XtraPanel">

            <summary>
                <para>Represents the base class for panels.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.XtraPanel.#ctor">
            <summary>
                <para>Initializes a new instance of the XtraPanel class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraPanel.AutoScroll">
            <summary>
                <para>Gets or sets a value indicating whether the container enables the user to scroll to any control placed outside its visible boundaries.

</para>
            </summary>
            <value><b>true</b> if the auto-scrolling feature is enabled; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraPanel.AutoSize">
            <summary>
                <para>Gets or sets whether the panel is automatically resized according to the value of the <see cref="P:DevExpress.XtraEditors.XtraPanel.AutoSizeMode"/> property.
</para>
            </summary>
            <value><b>true</b> if the panel's auto-resizing feature is enabled; otherwise, <b>false</b>.
</value>


        </member>
        <member name="E:DevExpress.XtraEditors.XtraPanel.AutoSizeChanged">
            <summary>
                <para>Fires when the value of the <see cref="P:DevExpress.XtraEditors.XtraPanel.AutoSize"/> property is changed.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraPanel.AutoSizeMode">
            <summary>
                <para>Indicates the automatic sizing behavior of the panel.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Forms.AutoSizeMode"/> value.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraPanel.BorderStyle">
            <summary>
                <para>Gets or sets the panel's border style.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Forms.BorderStyle"/> value that specifies the panel's border style.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraPanel.GetPreferredSize(System.Drawing.Size)">
            <summary>
                <para>Retrieves the size of a rectangular area into which the panel can be fitted.
</para>
            </summary>
            <param name="proposedSize">
		A custom-sized area for the panel.


            </param>
            <returns>A Size value that specifies a rectangle into which the panel can be fit.

</returns>


        </member>
        <member name="E:DevExpress.XtraEditors.XtraPanel.KeyDown">
            <summary>
                <para>This member is not supported by the XtraPanel class.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.XtraEditors.XtraPanel.KeyPress">
            <summary>
                <para>This member is not supported by the XtraPanel class.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.XtraEditors.XtraPanel.KeyUp">
            <summary>
                <para>This member is not supported by the XtraPanel class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraPanel.ResetAutoSizeMode">
            <summary>
                <para>Resets the  <see cref="P:DevExpress.XtraEditors.XtraPanel.AutoSizeMode"/> property to its default value.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraPanel.ShouldSerializeAutoSizeMode">
            <summary>
                <para>Gets whether the <see cref="P:DevExpress.XtraEditors.XtraPanel.AutoSizeMode"/> property should be serialized.
</para>
            </summary>
            <returns><b>true</b> if the <see cref="P:DevExpress.XtraEditors.XtraPanel.AutoSizeMode"/> property should be serialized; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraPanel.TabStop">
            <summary>
                <para>Gets or sets a value indicating whether the user can focus this control using the TAB key.


</para>
            </summary>
            <value><b>true</b> if the user can focus this control using the TAB key; otherwise, <b>false</b>.

</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraPanel.Text">
            <summary>
                <para>This member is not supported by the XtraPanel class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="E:DevExpress.XtraEditors.XtraPanel.TextChanged">
            <summary>
                <para>This member is not supported by the XtraPanel class.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.SeparatorControl">

            <summary>
                <para>Allows you to delimit controls within the layout.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.SeparatorControl.#ctor">
            <summary>
                <para>Initializes a new instance of the SeparatorControl class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.SeparatorControl.AutoSizeMode">
            <summary>
                <para>Gets or sets whether the control client area size is automatically calculated based on the separating line thickness and paddings.
</para>
            </summary>
            <value><b>true</b>, if the control client area size is automatically calculated based on the separating line thickness and paddings; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SeparatorControl.Font">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code. This property is not relevant for this class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SeparatorControl.ForeColor">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code. This property is not relevant for this class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.SeparatorControl.LayoutChanged">
            <summary>
                <para>Invalidates the entire surface of the control and causes the control to be redrawn.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.SeparatorControl.LineAlignment">
            <summary>
                <para>Gets or sets the alignment of the separating line within the control client area.
</para>
            </summary>
            <value>A <see cref="Alignment"/> enumeration value that specifies the alignment of the separating line within the control client area.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SeparatorControl.LineColor">
            <summary>
                <para>Gets or sets the color of the separating line.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> structure that specifies the color of the separating line.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SeparatorControl.LineOrientation">
            <summary>
                <para>Gets or sets the orientation of the separating line.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Orientation"/> enumeration value that specifies the orientation of the separating line.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SeparatorControl.LineStyle">
            <summary>
                <para>Gets or sets the dash style of the separating line. This property is in effect when the control is painted using any paint theme, except skins.

</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Drawing2D.DashStyle"/> enumeration value that specifies the dash style of the separating line.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SeparatorControl.LineThickness">
            <summary>
                <para>Gets or sets the width, in pixels, of the separating line. This property is in effect when the control is painted using any paint theme, except skins.
</para>
            </summary>
            <value>An integer value that specifies the width, in pixels, of the separating line.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SeparatorControl.LookAndFeel">
            <summary>
                <para>Provides access to settings controlling the look and feel of the control.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object whose properties specify the look and feel of the control. 
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SeparatorControl.Padding">
            <summary>
                <para>Gets or sets the amount of space around the separating line.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Padding"/> structure that specifies the amount of space around the separating line.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.SeparatorControl.ResetLineColor">
            <summary>
                <para>Sets the <see cref="P:DevExpress.XtraEditors.SeparatorControl.LineColor"/> property to Color.Empty.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.SeparatorControl.ResetLineThickness">
            <summary>
                <para>Sets the <see cref="P:DevExpress.XtraEditors.SeparatorControl.LineThickness"/> property to the default value.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.SeparatorControl.ResetPadding">
            <summary>
                <para>Sets the <see cref="P:DevExpress.XtraEditors.SeparatorControl.Padding"/> property to the default value.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.SeparatorControl.ShouldSerializeLineColor">
            <summary>
                <para>Returns whether the <see cref="P:DevExpress.XtraEditors.SeparatorControl.LineColor"/> property should be serialized.
</para>
            </summary>
            <returns><b>true</b>, if the <see cref="P:DevExpress.XtraEditors.SeparatorControl.LineColor"/> property should be serialized; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.SeparatorControl.ShouldSerializeLineThickness">
            <summary>
                <para>Returns whether the <see cref="P:DevExpress.XtraEditors.SeparatorControl.LineThickness"/> property should be serialized.
</para>
            </summary>
            <returns><b>true</b>, if the <see cref="P:DevExpress.XtraEditors.SeparatorControl.LineThickness"/> property should be serialized; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.SeparatorControl.ShouldSerializePadding">
            <summary>
                <para>Returns whether the <see cref="P:DevExpress.XtraEditors.SeparatorControl.Padding"/> property should be serialized.
</para>
            </summary>
            <returns><b>true</b>, if the <see cref="P:DevExpress.XtraEditors.SeparatorControl.Padding"/> property should be serialized; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.XtraEditors.SeparatorControl.Text">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code. This property is not relevant for this class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="T:DevExpress.XtraEditors.ScrollUIMode">

            <summary>
                <para>Provides members that enumerate scroll bar UI modes.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.ScrollUIMode.Default">
            <summary>
                <para>Specifies the same UI mode as the <b>Desktop</b> value.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.ScrollUIMode.Desktop">
            <summary>
                <para>Scroll bars that are optimized for desktop applications. In this mode, scroll bars contain scroll buttons. The auto-hide functionality is not supported.

<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.ScrollUIMode.Touch">
            <summary>
                <para>Scroll bars that are optimized for touch-aware applications. 

In this mode, the scroll bar thumb supports the auto-hide functionality. It automatically appears when an end-user flicks the scrollable content (or the mouse cursor moves over the control), and disappears if the control is not scrolled (or the mouse cursor does not move) for some time. The scroll bar buttons are never displayed. 
<para>

</para>
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.ColumnFilterPopupMode">

            <summary>
                <para>Provides values that specify whether Data Grid and Tree List columns should display Excel-style or classic filter menus.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.ColumnFilterPopupMode.Classic">
            <summary>
                <para>Grid and TreeList columns display classic drop-down filter menus.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.ColumnFilterPopupMode.Default">
            <summary>
                <para>Equivalent to the <see cref="F:DevExpress.XtraEditors.ColumnFilterPopupMode.Excel"/> setting.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.ColumnFilterPopupMode.Excel">
            <summary>
                <para>Grid and TreeList columns display Excel-style filter menus.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.ViewInfo.ScrollBarVisibility">

            <summary>
                <para>Lists the available scroll bar visibility modes.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.ViewInfo.ScrollBarVisibility.Hidden">
            <summary>
                <para>The scroll bar is hidden.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.ViewInfo.ScrollBarVisibility.Visible">
            <summary>
                <para>The scroll bar is visible.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.VisualEffects.AdornerUIManager">

            <summary>
                <para>The component that provides a transparent adorner layer for highlighting certain UI elements and/or displaying notifications for these elements.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerUIManager.#ctor">
            <summary>
                <para>Initializes a new instance of the AdornerUIManager class with the default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerUIManager.#ctor(System.ComponentModel.IContainer)">
            <summary>
                <para>Initializes a new instance of the AdornerUIManager class with the specified settings.
</para>
            </summary>
            <param name="container">
		An IContainer object that owns this newly created AdornerUIManager.

            </param>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.AdornerUIManager.AllowArrowKeysNavigation">
            <summary>
                <para>Gets or sets whether or not end-users can cycle through selectable adorner elements (e.g., guides) by pressing arrow keys.
</para>
            </summary>
            <value><b>true</b>, if end-users can use arrow keys to cycle through selectable adorner elements; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.AdornerUIManager.AllowTabNavigation">
            <summary>
                <para>Gets or sets whether or not end-users can cycle through selectable adorner elements (e.g., guides) by pressing Tab.
</para>
            </summary>
            <value><b>true</b>, if end-users can use the Tab key to cycle through selectable adorner elements; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.AdornerUIManager.BadgeAppearance">
            <summary>
                <para>Provides access to appearance settings common to all <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> elements within this AdornerUIManager.
</para>
            </summary>
            <value>An AppearanceObject that stores appearance settings common to all <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> elements within this AdornerUIManager.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.AdornerUIManager.BadgeProperties">
            <summary>
                <para>Provides access to properties that affect all <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> elements within this AdornerUIManager.
</para>
            </summary>
            <value>A <see cref="BadgeProperties"/> object that stores properties common to all <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> elements within this AdornerUIManager.
</value>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerUIManager.BeginUpdate">
            <summary>
                <para>Locks the current AdornerUIManager and allows you to modify the control without immediately reflecting their changes.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerUIManager.CancelUpdate">
            <summary>
                <para>Unlocks the AdornerUIManager object after it has been locked by the <b>BeginUpdate</b> method, without causing an immediate visual update.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.VisualEffects.AdornerUIManager.CustomDrawBadge">
            <summary>
                <para>Allows you to paint any <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> manually.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.VisualEffects.AdornerUIManager.CustomDrawGuide">
            <summary>
                <para>Allows you to paint <see cref="T:DevExpress.Utils.VisualEffects.Guide"/> objects manually.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.VisualEffects.AdornerUIManager.CustomDrawValidationHint">
            <summary>
                <para>Allows you to paint <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> objects manually.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.AdornerUIManager.Elements">
            <summary>
                <para>Provides zero-based indexed access to <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>s of any type owned by this AdornerUIManager.
</para>
            </summary>
            <value>An <see cref="AdornerElementCollection"/> object that stores all child <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> objects for this AdornerUIManager.
</value>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerUIManager.EndUpdate">
            <summary>
                <para>Unlocks the AdornerUIManager and forces it to repaint itself.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.AdornerUIManager.GuideAppearances">
            <summary>
                <para>Provides access to four sets of appearance settings common to all <see cref="T:DevExpress.Utils.VisualEffects.Guide"/> objects owned by this manager.
</para>
            </summary>
            <value>A <see cref="GuidesAppearances"/> collection that stores sets of appearance settings, applied to guides in their corresponding visual states.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.AdornerUIManager.GuideProperties">
            <summary>
                <para>Provides access to behavior settings common to all <see cref="T:DevExpress.Utils.VisualEffects.Guide"/> objects owned by this manager.
</para>
            </summary>
            <value>A <see cref="GuideProperties"/> collection that stores behavior settings, applied to all guides owned by this manager.
</value>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerUIManager.Hide">
            <summary>
                <para>Hides all <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>s owned by this AdornerUIManager.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerUIManager.Invalidate">
            <summary>
                <para>Invalidates the region occupied by this AdornerUIManager.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.AdornerUIManager.IsUpdateLocked">
            <summary>
                <para>Gets whether or not this AdornerUIManager has been locked for updating. 
</para>
            </summary>
            <value><b>true</b>, if this AdornerUIManager has been locked for updating; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.AdornerUIManager.Owner">
            <summary>
                <para>Gets or sets the control that owns this AdornerUIManager.
</para>
            </summary>
            <value>A ContainerControl that owns this AdornerUIManager.
</value>


        </member>
        <member name="E:DevExpress.Utils.VisualEffects.AdornerUIManager.QueryGuideFlyoutControl">
            <summary>
                <para>Occurs when a <see cref="T:DevExpress.Utils.VisualEffects.Guide"/> is activated and allows you to populate a flyout panel associated with this guide.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerUIManager.Refresh">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.AdornerUIManager.SelectedElement">
            <summary>
                <para>Returns the currently selected adorner element.
</para>
            </summary>
            <value>A currently selected <see cref="AdornerElement"/>.
</value>


        </member>
        <member name="E:DevExpress.Utils.VisualEffects.AdornerUIManager.SelectedElementChanged">
            <summary>
                <para>Occurs when a currently selected AdornerUIManager element changes.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerUIManager.SelectElement(DevExpress.Utils.VisualEffects.AdornerElement)">
            <summary>
                <para>Selects the specific AdornerUIManager element.
</para>
            </summary>
            <param name="element">
		An <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> to be selected.

            </param>
            <returns><b>true</b>, if the specific element was successfully selected; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerUIManager.SelectNext">
            <summary>
                <para>Activates the item within the <see cref="P:DevExpress.Utils.VisualEffects.AdornerUIManager.Elements"/> collection that follows the currently selected item.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerUIManager.SelectPrev">
            <summary>
                <para>Activates the item within the <see cref="P:DevExpress.Utils.VisualEffects.AdornerUIManager.Elements"/> collection that precedes the currently selected item.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerUIManager.Show">
            <summary>
                <para>Forces the AdornerUIManager to display all its child <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>s whose visibility is currently set to <b>true</b>.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.AdornerUIManager.ShowGuides">
            <summary>
                <para>Gets or sets whether or not adorner guides should be displayed.
</para>
            </summary>
            <value>A <see cref="DefaultBoolean"/> enumerator value that specifies whether or not adorner guides should be displayed.
</value>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerUIManager.Update">
            <summary>
                <para>Updates the region occupied by this AdornerUIManager.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.AdornerUIManager.ValidationHintAppearances">
            <summary>
                <para>Provides access to three sets of appearance settings, applied to child <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> objects in corresponding validation states.
</para>
            </summary>
            <value>A <see cref="ValidationHintsAppearances"/> collection that stores appearance setting for valid, invalid and indeterminate hint states.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.AdornerUIManager.ValidationHintProperties">
            <summary>
                <para>Provides access to behavior settings common to all <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> objects owned by this manager.
</para>
            </summary>
            <value>A <see cref="ValidationHintProperties"/> collection that stores behavior settings, applied to all hints owned by this manager.
</value>


        </member>
        <member name="T:DevExpress.Utils.VisualEffects.BadgeProperties">

            <summary>
                <para>Provides members that specify the appearance and behavior of all <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>s within this adorner manager.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.VisualEffects.BadgeProperties.#ctor">
            <summary>
                <para>Initializes a new instance of the BadgeProperties class with the default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeProperties.AllowGlyphSkinning">
            <summary>
                <para>Gets or sets whether or not all badges within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/> should colorize their images using background colors.
</para>
            </summary>
            <value><b>true</b>, if all badges within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/> should colorize their images using background colors; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeProperties.AllowHtmDrawText">
            <summary>
                <para>Gets or sets whether or not any badge owned by this manager should use HTML tags to format its caption string.
</para>
            </summary>
            <value><b>true</b>, if any badge owned by this manager should use HTML tags to format its caption string; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeProperties.AllowImage">
            <summary>
                <para>Gets or sets whether or not badges within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/> should display their icons.
</para>
            </summary>
            <value><b>true</b>, if badges within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/> should display their icons; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeProperties.Image">
            <summary>
                <para>Gets or sets the default image, displayed by all badges within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.
</para>
            </summary>
            <value>An Image object that is the default image, displayed by all badges within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeProperties.ImageStretchMargins">
            <summary>
                <para>Gets or sets the image region that can be stretched.
</para>
            </summary>
            <value>A Padding structure that is the image region that can be stretched.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeProperties.Location">
            <summary>
                <para>Gets or sets the relative position, based on which all <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>s within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/> are aligned.

</para>
            </summary>
            <value>A ConenteAlignment enumerator value that specifies the relative position shared by all badges.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeProperties.Offset">
            <summary>
                <para>Gets or sets the offset, common to all <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>s within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.
</para>
            </summary>
            <value>A Point structure that is the offset, common to all <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>s within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeProperties.PaintStyle">
            <summary>
                <para>Gets or sets the paint style common to all badges owned by this manager.
</para>
            </summary>
            <value>A <see cref="BadgePaintStyle"/> enumerator value that specifies the paint style common to all badges owned by this manager.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeProperties.StretchImage">
            <summary>
                <para>Gets or sets whether all badges should stretch their images according to the displayed text.
</para>
            </summary>
            <value><b>true</b>, if all badges should stretch their images according to the displayed text; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeProperties.Text">
            <summary>
                <para>Gets or sets the default text, displayed by all <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>s within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.
</para>
            </summary>
            <value>A String value that is the default text, displayed by all <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>s within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeProperties.TextMargin">
            <summary>
                <para>Gets or sets the global text margin, common to all <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>s within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.
</para>
            </summary>
            <value>A Padding structure that is the global text margin, common to all <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>s within this <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.BadgeProperties.TrimByParent">
            <summary>
                <para>Gets or sets whether or not the <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/> should trim any <see cref="T:DevExpress.Utils.VisualEffects.Badge"/> that is bigger than its target element's parent.
</para>
            </summary>
            <value><b>true</b>, to trim badges; otherwise, <b>false</b>.

</value>


        </member>
        <member name="T:DevExpress.Utils.VisualEffects.Badge">

            <summary>
                <para>A simple element within the <see cref="T:DevExpress.Utils.VisualEffects.AdornerUIManager"/>.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.VisualEffects.Badge.#ctor">
            <summary>
                <para>Initializes a new instance of the Badge class with the default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.Badge.Appearance">
            <summary>
                <para>Provides access to the appearance settings that affect this Badge.
</para>
            </summary>
            <value>An <see cref="AppearanceObject"/> object that stores Badge appearance settings. 
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.Badge.Properties">
            <summary>
                <para>Provides access to advanced Badge settings.
</para>
            </summary>
            <value>A <see cref="BadgeDefaultProperties"/> object that stores advanced badge settings.
</value>


        </member>
        <member name="T:DevExpress.Utils.VisualEffects.AdornerElementCollection">

            <summary>
                <para>Stores elements of the <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> type.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerElementCollection.#ctor">
            <summary>
                <para>Initializes a new instance of the AdornerElementCollection class with the default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerElementCollection.Add(DevExpress.Utils.VisualEffects.AdornerElement)">
            <summary>
                <para>Adds a specific <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> to the current AdornerElementCollection.
</para>
            </summary>
            <param name="item">
		An AdornerElement to be added to this AdornerElementCollection.

            </param>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerElementCollection.AddRange(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Adds multiple <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>s to this AdornerElementCollection.
</para>
            </summary>
            <param name="items">
		An IEnumerable structure containing <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>s to be added.

            </param>


        </member>
        <member name="E:DevExpress.Utils.VisualEffects.AdornerElementCollection.CollectionChanged">
            <summary>
                <para>Fires when the AdornerElementCollection is modified.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerElementCollection.Contains(DevExpress.Utils.VisualEffects.AdornerElement)">
            <summary>
                <para>Checks whether or not this AdornerElementCollection contains the target <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>.
</para>
            </summary>
            <param name="item">
		The <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> to be checked.

            </param>
            <returns><b>true</b>, if this AdornerElementCollection contains the target <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerElementCollection.CopyTo(DevExpress.Utils.VisualEffects.AdornerElement[],System.Int32)">
            <summary>
                <para>Copies all <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>s from this AdornerElementCollection to a target one-dimensional array, starting from the specific index of the target array.
</para>
            </summary>
            <param name="array">
		An AdornerElement[] array to which all AdornerElementCollection items should be copied.

            </param>
            <param name="arrayIndex">
		An Int32 value that is the index of the host array, starting from which copied elements should be arranged.

            </param>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerElementCollection.GetElements``1">
            <summary>
                <para>Gets all elements of the specific type that are stored within this AdornerElementCollection.
</para>
            </summary>
            <returns>A typed elements array.
</returns>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerElementCollection.GetElementsBySource(System.Object)">
            <summary>
                <para>Gets all <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>s related to the target UI element.
</para>
            </summary>
            <param name="source">
		An Object that is the source UI element, whose related adorner elements should be returned.


            </param>
            <returns>An AdornerElements array.
</returns>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerElementCollection.GetElementsBySource``1(System.Object)">
            <summary>
                <para>Gets <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/>s of the specific type that are related to the target UI element.
</para>
            </summary>
            <param name="source">
		An Object that is the source UI element, whose related adorner elements should be returned.

            </param>
            <returns>A one-dimensional array containing elements of the specific type.
</returns>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerElementCollection.GetEnumerator">
            <summary>
                <para>Returns the object that iterates through the current AdornerElementCollection.
</para>
            </summary>
            <returns>An IEnumerator object that iterates through this AdornerElementCollection.
</returns>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerElementCollection.IndexOf(DevExpress.Utils.VisualEffects.AdornerElement)">
            <summary>
                <para>Gets the current position of the target element within this AdornerElementCollection.
</para>
            </summary>
            <param name="item">
		An <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> whose index is to be obtained.

            </param>
            <returns>An Int32 value that is the current position of the target element within this AdornerElementCollection.
</returns>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.AdornerElementCollection.IsReadOnly">
            <summary>
                <para>Gets or sets whether or not this AdornerElementCollection can be modified.
</para>
            </summary>
            <value><b>true</b>, if this AdornerElementCollection is in read-only mode; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.AdornerElementCollection.Item(System.Int32)">
            <summary>
                <para>Gets the <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> located at the target position within this AdornerElementCollection.
</para>
            </summary>
            <param name="index">
		An Int32 value that is the element position within the AdornerElementCollection.

            </param>
            <value>An <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> located at the target position within this AdornerElementCollection.
</value>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerElementCollection.Remove(DevExpress.Utils.VisualEffects.AdornerElement)">
            <summary>
                <para>Removes the target <see cref="T:DevExpress.Utils.VisualEffects.AdornerElement"/> from this AdornerElementCollection.
</para>
            </summary>
            <param name="item">
		An AdornerElement to be removed.

            </param>
            <returns><b>true</b>, if the element was successfully removed; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="T:DevExpress.Utils.VisualEffects.AdornerElement">

            <summary>
                <para>The base class for all adorner elements (e.g., <see cref="T:DevExpress.Utils.VisualEffects.Badge"/>s).
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerElement.#ctor">
            <summary>
                <para>Initializes a new instance of the AdornerElement class with the default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.AdornerElement.Appearances">
            <summary>
                <para>Provides access to multiple sets of appearance settings, applied in different AdornerElement visual states.
</para>
            </summary>
            <value>An <see cref="AdornerAppearanceCollection"/> object that stores sets of appearance settings, applied in different AdornerElement visual states.
</value>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerElement.Assign(DevExpress.Utils.VisualEffects.IAdornerElement)">
            <summary>
                <para>Copies all settings from the target AdornerElement to this AdornerElement.
</para>
            </summary>
            <param name="element">
		An AdornerElement object whose settings are to be copied to this AdornerElement.

            </param>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerElement.BindCommand(System.Linq.Expressions.Expression`1,System.Object,System.Func`1)">
            <summary>
                <para>Uses the command selector to find an appropriate parameterized command in the source and bind it to this AdornerElement.
</para>
            </summary>
            <param name="commandSelector">
		An Expression that selects the appropriate command from the <i>source</i> object.

            </param>
            <param name="source">
		An Object (typically, a ViewModel) where the <i>commandSelector</i> looks for the required command.

            </param>
            <param name="queryCommandParameter">
		A Func delegate that passes the specific Object to the <i>command</i> as a parameter. 

            </param>
            <returns>An IDisposable object. Disposing of this object unbinds the <i>command</i> from this AdornerElement. 
</returns>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerElement.BindCommand(System.Object,System.Func`1)">
            <summary>
                <para>Binds the specific parameterized command to this AdornerElement.
</para>
            </summary>
            <param name="command">
		An Object that is the command to be bound to this AdornerElement. 

            </param>
            <param name="queryCommandParameter">
		A Func delegate that passes the specific Object to the <i>command</i> as a parameter. 

            </param>
            <returns>An IDisposable object. Disposing of this object unbinds the <i>command</i> from this AdornerElement. 
</returns>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerElement.BindCommand``1(System.Linq.Expressions.Expression{System.Action`1},System.Object,System.Func{``0})">
            <summary>
                <para>Uses the command selector to find an appropriate parameterized command of the target type in the source and bind it to this AdornerElement.
</para>
            </summary>
            <param name="commandSelector">
		An Expression that selects the appropriate command from the <i>source</i> object.

            </param>
            <param name="source">
		An Object (typically, a ViewModel) where the <i>commandSelector</i> looks for the required command.

            </param>
            <param name="queryCommandParameter">
		A Func delegate that passes the specific Object to the <i>command</i> as a parameter. 

            </param>
            <returns>An IDisposable object. Disposing of this object unbinds the <i>command</i> from this AdornerElement. 
</returns>


        </member>
        <member name="E:DevExpress.Utils.VisualEffects.AdornerElement.Click">
            <summary>
                <para>Occurs when end-users clicks this AdornerElement.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.AdornerElement.Clone">
            <summary>
                <para>Duplicates this AdornerElement.
</para>
            </summary>
            <returns>An Object that is this AdornerElement object's copy.
</returns>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.AdornerElement.IsDisposing">
            <summary>
                <para>Gets whether the AdornerElement is being disposed of.
</para>
            </summary>
            <value><b>true</b>, if the AdornerElement is being disposed of; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.AdornerElement.Properties">
            <summary>
                <para>Provides access to a set of AdornerElement properties.
</para>
            </summary>
            <value>An <see cref="AdornerElementDefaultProperties"/> object that stores settings for this AdornerElement.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.AdornerElement.TabIndex">
            <summary>
                <para>Gets or sets the tab index for this AdornerElement.
</para>
            </summary>
            <value>An Int32 value that is the tab index for this AdornerElement.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.AdornerElement.Tag">
            <summary>
                <para>Gets or sets any object associated with this AdornerElement.
</para>
            </summary>
            <value>An Object that is the tag for this AdornerElement.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.AdornerElement.TargetElement">
            <summary>
                <para>Gets or sets the UI element to which this AdornerElement is bound.
</para>
            </summary>
            <value>An Object related to this AdornerElement.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.AdornerElement.TargetElementRegion">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.AdornerElement.Visible">
            <summary>
                <para>Gets or sets whether or not this AdornerElement is visible.
</para>
            </summary>
            <value><b>true</b>, if this AdornerElement is visible; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Utils.RatingContextButton">

            <summary>
                <para>A context item that allows an end-user to rate the content using the grading scale.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.RatingContextButton.#ctor">
            <summary>
                <para>Initializes a new instance of the RatingContextButton class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.RatingContextButton.CheckedGlyph">
            <summary>
                <para>Gets or sets the glyph representing checked points.
</para>
            </summary>
            <value>An <b>Image</b> that specifies the glyph representing checked points.
</value>


        </member>
        <member name="P:DevExpress.Utils.RatingContextButton.FillPrecision">
            <summary>
                <para>Gets or sets whether the rating can be specified with precision up to integers, integers and half-integers, or decimals.

</para>
            </summary>
            <value>A <see cref="RatingItemFillPrecision"/> enumeration value that specifies the rating precision.
</value>


        </member>
        <member name="M:DevExpress.Utils.RatingContextButton.GetActualCheckedGlyph(DevExpress.Skins.ISkinProvider)">
            <summary>
                <para>Returns the Image object specifying the checked point glyph actually assigned.

</para>
            </summary>
            <param name="provider">
		An ISkinProvider object.

            </param>
            <returns>The Image object specifying the checked point glyph actually assigned. 
</returns>


        </member>
        <member name="P:DevExpress.Utils.RatingContextButton.HasCheckedGlyph">
            <summary>
                <para>Gets whether or not this RatingContextButton has a checked point glyph assigned.
</para>
            </summary>
            <value><b>true</b>, if this RatingContextButton has a checked point glyph assigned; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.RatingContextButton.ImageOptions">
            <summary>
                <para>Provides access to all properties related to the RatingContextButton grading scale glyphs.
</para>
            </summary>
            <value>A <see cref="RatingContextButtonImageOptions"/> object that stores all icon-related settings.
</value>


        </member>
        <member name="P:DevExpress.Utils.RatingContextButton.ItemCount">
            <summary>
                <para>Gets or sets the number of points in the grading scale.
</para>
            </summary>
            <value>An integer value that specifies the number of points in the grading scale.
</value>


        </member>
        <member name="P:DevExpress.Utils.RatingContextButton.Rating">
            <summary>
                <para>Gets or sets the rating specified by the current item.
</para>
            </summary>
            <value>A decimal value that specifies the content rating.
</value>


        </member>
        <member name="T:DevExpress.Utils.CheckContextButton">

            <summary>
                <para>A context button displaying a check box that can be checked by an end-user.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.CheckContextButton.#ctor">
            <summary>
                <para>Initializes a new instance of the CheckContextButton class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.CheckContextButton.BindCommand(System.Object,System.Func`1)">
            <summary>
                <para>Binds the specific parameterized command to this CheckContextButton.
</para>
            </summary>
            <param name="command">
		An Object that is the command to be bound to this CheckContextButton. 

            </param>
            <param name="queryCommandParameter">
		A Func delegate that passes the specific Object to the <i>command</i> as a parameter. 

            </param>
            <returns>An IDisposable object. Disposing of this object unbinds the <i>command</i> from this CheckContextButton.
</returns>


        </member>
        <member name="M:DevExpress.Utils.CheckContextButton.BindCommand(System.Linq.Expressions.Expression`1,System.Object,System.Func`1)">
            <summary>
                <para>Uses the command selector to find an appropriate parameterized command in the source and bind it to this CheckContextButton.
</para>
            </summary>
            <param name="commandSelector">
		An Expression that selects the appropriate command from the <i>source</i> object. 

            </param>
            <param name="source">
		An Object (typically, a ViewModel) where the <i>commandSelector</i> looks for the required command.

            </param>
            <param name="queryCommandParameter">
		A Func delegate that passes the specific Object to the <i>command</i> as a parameter. 

            </param>
            <returns>An IDisposable object. Disposing of this object unbinds the <i>command</i> from this CheckContextButton.
</returns>


        </member>
        <member name="M:DevExpress.Utils.CheckContextButton.BindCommand``1(System.Linq.Expressions.Expression{System.Action`1},System.Object,System.Func{``0})">
            <summary>
                <para>Uses the command selector to find an appropriate parameterized command of the target type in the source and bind it to this CheckContextButton.
</para>
            </summary>
            <param name="commandSelector">
		An Expression that selects the appropriate command from the <i>source</i> object. 

            </param>
            <param name="source">
		An Object (typically, a ViewModel) where the <i>commandSelector</i> looks for the required command.

            </param>
            <param name="queryCommandParameter">
		A Func delegate that passes the specific Object to the <i>command</i> as a parameter. 

            </param>
            <returns>An IDisposable object. Disposing of this object unbinds the <i>command</i> from this CheckContextButton.
</returns>


        </member>
        <member name="P:DevExpress.Utils.CheckContextButton.Caption">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Utils.CheckContextButton.Checked">
            <summary>
                <para>Gets or sets whether the current button is in the checked state.

</para>
            </summary>
            <value><b>true</b>, if the current button is in the checked state; otherwise, <b>false</b>.

</value>


        </member>
        <member name="P:DevExpress.Utils.CheckContextButton.CheckedGlyph">
            <summary>
                <para>Gets or sets the glyph displayed by the current button in the checked state when it is not hovered over with the mouse pointer.
</para>
            </summary>
            <value>An <b>Image</b> object that specifies the glyph displayed by the current button.
</value>


        </member>
        <member name="M:DevExpress.Utils.CheckContextButton.GetActualCheckedGlyph(DevExpress.Skins.ISkinProvider)">
            <summary>
                <para>Returns the Image object specifying the checked state glyph actually assigned.
</para>
            </summary>
            <param name="provider">
		An ISkinProvider object.

            </param>
            <returns>The Image object specifying the hovered state glyph actually assigned. 
</returns>


        </member>
        <member name="M:DevExpress.Utils.CheckContextButton.GetActualHoverCheckedGlyph(DevExpress.Skins.ISkinProvider)">
            <summary>
                <para>Returns the Image object specifying the hovered checked state glyph actually assigned.

</para>
            </summary>
            <param name="provider">
		An ISkinProvider object.

            </param>
            <returns>The Image object specifying the hovered checked state glyph actually assigned. 
</returns>


        </member>
        <member name="P:DevExpress.Utils.CheckContextButton.HasCheckedGlyph">
            <summary>
                <para>Gets whether or not this CheckContextButton has a checked state glyph assigned.
</para>
            </summary>
            <value><b>true</b>, if this CheckContextButton has a checked state glyph assigned; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.CheckContextButton.HasHoverCheckedGlyph">
            <summary>
                <para>Gets whether or not this CheckContextButton has a hovered checked state glyph assigned.
</para>
            </summary>
            <value><b>true</b>, if this CheckContextButton has a hovered checked state glyph assigned; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.CheckContextButton.HoverCheckedGlyph">
            <summary>
                <para>Gets or sets the glyph displayed by the current button in the checked state when it is hovered over with the mouse cursor.

</para>
            </summary>
            <value>An <b>Image</b> object that specifies the glyph displayed by the current button.
</value>


        </member>
        <member name="P:DevExpress.Utils.CheckContextButton.ImageOptions">
            <summary>
                <para>Provides access to all properties related to the CheckContextButton icon.
</para>
            </summary>
            <value>A <see cref="CheckContextButtonImageOptions"/> object that stores all icon-related settings.
</value>


        </member>
        <member name="T:DevExpress.Utils.ContextButton">

            <summary>
                <para>A regular context button that can be clicked.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ContextButton.#ctor">
            <summary>
                <para>Initializes a new instance of the ContextButton class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ContextButton.GetActualPressedGlyph(DevExpress.Skins.ISkinProvider)">
            <summary>
                <para>Returns the Image object specifying the pressed state glyph actually assigned.

</para>
            </summary>
            <param name="provider">
		An ISkinProvider object.

            </param>
            <returns>The Image object specifying the pressed state glyph actually assigned. 
</returns>


        </member>
        <member name="P:DevExpress.Utils.ContextButton.HasPressedGlyph">
            <summary>
                <para>Gets whether or not this ContextButton has a pressed state glyph assigned.
</para>
            </summary>
            <value><b>true</b>, if this ContextButton has a pressed state glyph assigned; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextButton.ImageOptions">
            <summary>
                <para>Provides access to all properties that allow you to assign and customize glyphs for this ContextButton.
</para>
            </summary>
            <value>A <see cref="ContextButtonImageOptions"/> object that stores all properties that allow you to assign and customize glyphs for this ContextButton.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextButton.PressedGlyph">
            <summary>
                <para>Gets or sets the glyph displayed by the current item in the normal (not hovered) state.
</para>
            </summary>
            <value>An <b>Image</b> object that specifies the glyph displayed by the current item in the normal state.
</value>


        </member>
        <member name="T:DevExpress.Utils.ContextItem">

            <summary>
                <para>The base class for the context buttons.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ContextItem.#ctor">
            <summary>
                <para>Initializes a new instance of the ContextItem class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.Alignment">
            <summary>
                <para>Gets or sets the current item's alignment relative to the owner control. This property is obsolete, use <see cref="P:DevExpress.Utils.ContextItem.AlignmentOptions"/> instead.

</para>
            </summary>
            <value>A <b>ContextItemAlignment</b> enumeration value that specifies the current item's alignment relative to the owner control.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.AlignmentOptions">
            <summary>
                <para>Provides access to options that specify the panel in which the item is displayed, and its position in the panel.
</para>
            </summary>
            <value>A <see cref="ContextItemAlignmentOptions"/> object that specifies the panel in which the item is displayed, and its position in the panel.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.AllowGlyphSkinning">
            <summary>
                <para>Gets or sets whether the current item's glyph is painted using the foreground color.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value that specifies whether the current item's glyph is painted using the foreground color.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.AnchorAlignment">
            <summary>
                <para>Gets or sets the alignment of the current item relative to the anchor element.
</para>
            </summary>
            <value>An <b>AnchorAlignment</b> enumeration value that specifies the alignment of the current item relative to the anchor element.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.AnchorElement">
            <summary>
                <para>Gets or sets an item (anchor element) relative to which the current item is aligned.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ContextItem"/> relative to which the current item is aligned.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.AnchorElementId">
            <summary>
                <para>Gets or sets the globally unique identifier of the item (anchor element), relative to which the current item is aligned.
</para>
            </summary>
            <value>A <see cref="T:System.Guid"/> object which represents a globally unique identifier (GUID) of the item, relative to which the current item is aligned.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.AnchorIndent">
            <summary>
                <para>Gets or sets the indent between the current item and the anchor element.
</para>
            </summary>
            <value>An integer value that specifies the indent, in pixels, between the current item and the anchor element.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.AnchorOffset">
            <summary>
                <para>Gets or sets the translation of the current item from the anchor element.
</para>
            </summary>
            <value>A <b>Point</b> structure by which the current item is translated.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.AnimationType">
            <summary>
                <para>Gets or sets the type of the animation used to show and hide the current item.
</para>
            </summary>
            <value>A <b>ContextAnimationType</b> enumeration value that specifies the type of the animation used to show and hide the current item.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.AppearanceHover">
            <summary>
                <para>Provides access to the settings used to paint the current item in the hovered state.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that provides the settings used to paint the current item.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.AppearanceNormal">
            <summary>
                <para>Provides access to the appearance settings used to paint the current item in the normal (not hovered) state.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that provides the appearance settings used to paint the current item.
</value>


        </member>
        <member name="M:DevExpress.Utils.ContextItem.AssignPropertiesInternal(DevExpress.Utils.ContextItem)">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="item">
		 

            </param>


        </member>
        <member name="M:DevExpress.Utils.ContextItem.AssignPropertiesInternal(DevExpress.Utils.ContextItem,System.Boolean)">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="item">
		 

            </param>
            <param name="assignCollection">
		 

            </param>


        </member>
        <member name="M:DevExpress.Utils.ContextItem.BeginUpdate">
            <summary>
                <para>Locks the ContextItem object by preventing visual updates until the <b>EndUpdate</b> method is called.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ContextItem.CancelUpdate">
            <summary>
                <para>Unlocks the ContextItem object after it has been locked by the <b>BeginUpdate</b> method, without causing an immediate visual update.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.ContextItem.Click">
            <summary>
                <para>Fires when the current item is clicked.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ContextItem.Clone">
            <summary>
                <para>Creates a new ContextItem object that is a copy of the current instance.
</para>
            </summary>
            <returns>A new ContextItem object that is a copy of the current instance.
</returns>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.Collection">
            <summary>
                <para>Gets the collection to which the current item belongs.
</para>
            </summary>
            <value>A <b>ContextItemCollection</b> object that represents the collection to which the current item belongs.
</value>


        </member>
        <member name="E:DevExpress.Utils.ContextItem.CustomToolTip">
            <summary>
                <para>Allows the hint for the current item to be customized. This event is only raised for <see cref="T:DevExpress.Utils.RatingContextButton"/> objects.

</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.Enabled">
            <summary>
                <para>Gets or sets whether the current item can respond to end-user interaction.
</para>
            </summary>
            <value><b>true</b>, if the current item can respond to end-user interaction; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Utils.ContextItem.EndUpdate">
            <summary>
                <para>Unlocks the ContextItem object after a call to the <b>BeginUpdate</b> method and causes an immediate visual update.


</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ContextItem.GetActualGlyph(DevExpress.Skins.ISkinProvider)">
            <summary>
                <para>Returns the Image object specifying the glyph actually assigned.

</para>
            </summary>
            <param name="provider">
		An ISkinProvider object.

            </param>
            <returns>The Image object specifying the glyph actually assigned. 
</returns>


        </member>
        <member name="M:DevExpress.Utils.ContextItem.GetActualHoverGlyph(DevExpress.Skins.ISkinProvider)">
            <summary>
                <para>Returns the Image object specifying the hovered state glyph actually assigned.

</para>
            </summary>
            <param name="provider">
		An ISkinProvider object.

            </param>
            <returns>The Image object specifying the hovered state glyph actually assigned. 
</returns>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.Glyph">
            <summary>
                <para>Gets or sets the glyph displayed by the current item in the normal (not hovered) state.
</para>
            </summary>
            <value>An <b>Image</b> object that specifies the glyph displayed by the current item in the normal state.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.HasGlyph">
            <summary>
                <para>Gets whether or not this ContextItem has a glyph assigned.
</para>
            </summary>
            <value><b>true</b> if this ContextItem has a glyph assigned; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.HasHoverGlyph">
            <summary>
                <para>Gets whether or not this ContextItem has a hovered state glyph assigned.
</para>
            </summary>
            <value><b>true</b>, if this ContextItem has a hovered state glyph assigned; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.HoverGlyph">
            <summary>
                <para>Gets or sets the glyph displayed by the current item in the hovered state.
</para>
            </summary>
            <value>An <b>Image</b> object that specifies the glyph displayed by the current item in the hovered state.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.Id">
            <summary>
                <para>Gets or sets the current item's unique identifier.
</para>
            </summary>
            <value>A <see cref="T:System.Guid"/> object which represents a globally unique identifier (GUID).
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.ImageOptions">
            <summary>
                <para>Provides access to all properties that allow you to assign and customize a glyph for this ContextItem.
</para>
            </summary>
            <value>A <see cref="ContextItemImageOptions"/> object that stores all properties that allow you to assign and customize a glyph for this ContextItem.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.Name">
            <summary>
                <para>Gets or sets the current item's name.
</para>
            </summary>
            <value>A string value that specifies the current item's name.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.OriginItem">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="M:DevExpress.Utils.ContextItem.RaiseContextItemClick(System.Windows.Forms.MouseEventArgs,DevExpress.Utils.ContextItemViewInfo)">
            <summary>
                <para>Raises the <see cref="E:DevExpress.Utils.ContextItem.Click"/> event.
</para>
            </summary>
            <param name="e">
		A MouseEventArgs object.

            </param>
            <param name="itemInfo">
		A ContextItemViewInfo object.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ContextItem.ResetSuperTip">
            <summary>
                <para>Removes the <see cref="T:DevExpress.Utils.SuperToolTip"/> object assigned to the current context item.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.ShowToolTips">
            <summary>
                <para>Gets or sets whether hints can be displayed for the current item.
</para>
            </summary>
            <value><b>true</b>, if hints can be displayed for the current item; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.Size">
            <summary>
                <para>Gets or sets the current item's size.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Size"/> structure that specifies the current item's height and width.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.SuperTip">
            <summary>
                <para>Gets or sets a <see cref="T:DevExpress.Utils.SuperToolTip"/> for the current context item.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.SuperToolTip"/> object associated with the current context item.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.Tag">
            <summary>
                <para>Gets or sets custom data associated with the current item.
</para>
            </summary>
            <value>Custom data associated with the current item.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.ToolTip">
            <summary>
                <para>Gets or sets the text of the hint for the current item.
</para>
            </summary>
            <value>A String value that specifies the text of the hint for the current item.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.ToolTipIconType">
            <summary>
                <para>Gets or sets the type of icon displayed in the hint for the current item.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipIconType"/> enumeration value that specifies the type of icon displayed in the hint for the current item.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.ToolTipTitle">
            <summary>
                <para>Gets or sets the title of the hint for the current item.
</para>
            </summary>
            <value>A String value that specifies the title of the hint for the current item.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextItem.Visibility">
            <summary>
                <para>Gets or sets the item visibility.
</para>
            </summary>
            <value>A <b>ContextItemVisibility</b> enumeration value that specifies the item visibility.
</value>


        </member>
        <member name="T:DevExpress.Utils.WorkspaceManager">

            <summary>
                <para>Manages layouts of all DevExpress controls in the application as one global workspace. Workspaces can be saved and restored to (from) a local storage or stream.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.WorkspaceManager.#ctor">
            <summary>
                <para>Initializes a new instance of the WorkspaceManager class with the default settings.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.WorkspaceManager.AfterApplyWorkspace">
            <summary>
                <para>Occurs after a workspace was applied.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.WorkspaceManager.AllowTransitionAnimation">
            <summary>
                <para>Gets or sets whether or not changing workspaces within this WorkspaceManager should be followed by animation effects.
</para>
            </summary>
            <value>A DefaultBoolean enumerator value that specifies whether or not changing workspaces within this WorkspaceManager should be followed by animation effects.
</value>


        </member>
        <member name="M:DevExpress.Utils.WorkspaceManager.ApplyWorkspace(System.String)">
            <summary>
                <para>Locates a workspace with the target name within the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces"/> collection and applies it to the application.
</para>
            </summary>
            <param name="name">
		A String value that is the workspace name within the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces"/> collection.

            </param>


        </member>
        <member name="E:DevExpress.Utils.WorkspaceManager.BeforeApplyWorkspace">
            <summary>
                <para>Occurs immediately after the <see cref="M:DevExpress.Utils.WorkspaceManager.ApplyWorkspace"/> method is called.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.WorkspaceManager.CaptureWorkspace(System.String,System.Boolean)">
            <summary>
                <para>Captures the current form layout and places it to the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces"/> collection under the specific name.
</para>
            </summary>
            <param name="name">
		A String value that is the name of the captured workspaces.

            </param>
            <param name="acceptNestedObjects">
		<b>true</b>, if the workspace should include the layout of child controls hosted within controls on the current form (user control); otherwise, <b>false</b>.

            </param>


        </member>
        <member name="P:DevExpress.Utils.WorkspaceManager.CloseStreamOnWorkspaceLoading">
            <summary>
                <para>Gets or sets whether this WorkspaceManager should automatically close streams opened when loading workspaces.
</para>
            </summary>
            <value>A DefaultBoolean enumerator value that specifies whether this WorkspaceManager should automatically close streams opened when loading workspaces.
</value>


        </member>
        <member name="P:DevExpress.Utils.WorkspaceManager.CloseStreamOnWorkspaceSaving">
            <summary>
                <para>Gets or sets whether this WorkspaceManager should automatically close streams opened when saving workspaces.
</para>
            </summary>
            <value>A DefaultBoolean enumerator value that specifies whether this WorkspaceManager should automatically close streams opened when saving workspaces.
</value>


        </member>
        <member name="M:DevExpress.Utils.WorkspaceManager.FromControl(System.Windows.Forms.Control)">
            <summary>
                <para>Gets a WorkspaceManager stored within the target control.
</para>
            </summary>
            <param name="control">
		A Control from which a WorkspaceManager is extracted.

            </param>
            <returns>A WorkspaceManager stored within the target control.
</returns>


        </member>
        <member name="M:DevExpress.Utils.WorkspaceManager.GetWorkspace(System.String)">
            <summary>
                <para>Returns a workspace with a specific name from the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces"/> collection.
</para>
            </summary>
            <param name="name">
		A String value that is the name of a workspace to be obtained.

            </param>
            <returns>An IWorkspace object that is the workspace with the target name.
</returns>


        </member>
        <member name="M:DevExpress.Utils.WorkspaceManager.GetWorkspace(System.Int32)">
            <summary>
                <para>Returns a workspace with a specific index from the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces"/> collection.
</para>
            </summary>
            <param name="index">
		An Int32 value that is the index of a workspace to be obtained.

            </param>
            <returns>An IWorkspace object that is the workspace with the target index.
</returns>


        </member>
        <member name="M:DevExpress.Utils.WorkspaceManager.LoadWorkspace(System.String,System.Object)">
            <summary>
                <para>Loads a workspace from the target local file and places it in the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces"/> collection under the specific name.

</para>
            </summary>
            <param name="name">
		A String value that is the name under which the loaded workspace is kept in the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces"/> collection.

            </param>
            <param name="path">
		An Object that is the location of the file that stores a workspace.

            </param>
            <returns><b>true</b>, if the workspace was successfully loaded; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.WorkspaceManager.LoadWorkspace(System.String,System.IO.Stream)">
            <summary>
                <para>Loads a workspace from the target stream and places it in the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces"/> collection under the specific name. 
</para>
            </summary>
            <param name="name">
		A String value that is the name of the loaded workspace within the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces"/> collection.

            </param>
            <param name="stream">
		A Stream that contains the required workspace.

            </param>
            <returns><b>true</b>, if the workspace was successfully loaded; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.WorkspaceManager.LoadWorkspace(System.String,System.IO.Stream,System.Boolean)">
            <summary>
                <para>Loads a workspace from the target stream and places this workspace in the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces"/> collection under the specific name.
</para>
            </summary>
            <param name="name">
		A String value that is the name this workspace will have in the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces"/> collection.

            </param>
            <param name="stream">
		A Stream that contains the desired workspace.

            </param>
            <param name="getNameFromData">
		<b>true</b>, if the workspace name written in a stream has a priority over the <i>name</i> parameter of this method; otherwise, <b>false</b>.

            </param>
            <returns><b>true</b> if the workspace was successfully loaded; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.WorkspaceManager.LoadWorkspace(System.String,System.Object,System.Boolean)">
            <summary>
                <para>Loads a workspace from the target file and places this workspace in the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces"/> collection under the specific name.
</para>
            </summary>
            <param name="name">
		A String value that is the name this workspace will have in the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces"/> collection.

            </param>
            <param name="path">
		A String value that is the path to a local storage file, which contains the required workspace.

            </param>
            <param name="getNameFromData">
		<b>true</b>, if the workspace name written in a file has a priority over the <i>name</i> parameter of this method; otherwise, <b>false</b>.

            </param>
            <returns><b>true</b>, if the workspace was successfully loaded; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="E:DevExpress.Utils.WorkspaceManager.PropertyDeserializing">
            <summary>
                <para>Occurs whenever a property is about to be restored from a workspace.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.WorkspaceManager.PropertySerializing">
            <summary>
                <para>Occurs whenever a property is about to be written into a workspace.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.WorkspaceManager.RecentWorkspaces">
            <summary>
                <para>Provides access to the recently used workspaces collection.
</para>
            </summary>
            <value>A List object containing the recently used workspaces collection.

</value>


        </member>
        <member name="M:DevExpress.Utils.WorkspaceManager.RemoveWorkspace(System.String)">
            <summary>
                <para>Removes a workspace with the target name from the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces"/> collection.
</para>
            </summary>
            <param name="name">
		A String value that is the name under which the workspace is stored within the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces"/> collection.

            </param>


        </member>
        <member name="M:DevExpress.Utils.WorkspaceManager.RenameWorkspace(System.String,System.String)">
            <summary>
                <para>Renames the target workspace.
</para>
            </summary>
            <param name="oldName">
		A String value that is the name under which the workspace is currently stored in the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces"/> collection.

            </param>
            <param name="newName">
		A String value that is the new name for the workspace.

            </param>


        </member>
        <member name="M:DevExpress.Utils.WorkspaceManager.RestoreLayout(System.Windows.Forms.Control,System.IO.Stream)">
            <summary>
                <para>Retrieves the stored layout version of the root control from a stream.

</para>
            </summary>
            <param name="targetControl">
		A root control (see the <see cref="P:DevExpress.Utils.WorkspaceManager.TargetControl"/> property) whose layout is to be loaded.

            </param>
            <param name="stream">
		A Stream that keeps the control layout.

            </param>


        </member>
        <member name="M:DevExpress.Utils.WorkspaceManager.RestoreLayout(System.Windows.Forms.Control,System.String)">
            <summary>
                <para>Retrieves the stored layout version of the root control from a file.

</para>
            </summary>
            <param name="targetControl">
		A root control (see the <see cref="P:DevExpress.Utils.WorkspaceManager.TargetControl"/> property) whose layout is to be loaded.

            </param>
            <param name="path">
		A String value that is the path to a file that stores the control layout.

            </param>


        </member>
        <member name="M:DevExpress.Utils.WorkspaceManager.SaveLayout(System.Windows.Forms.Control,System.IO.Stream)">
            <summary>
                <para>Saves the layout of one specific control to a target stream.

</para>
            </summary>
            <param name="targetControl">
		A Control whose layout is to be saved.

            </param>
            <param name="stream">
		A Stream that should keep the control layout.

            </param>


        </member>
        <member name="M:DevExpress.Utils.WorkspaceManager.SaveLayout(System.Windows.Forms.Control,System.String)">
            <summary>
                <para>Saves the layout of one specific control to a target local storage location.

</para>
            </summary>
            <param name="targetControl">
		A Control whose layout is to be saved.

            </param>
            <param name="path">
		A String value that is the path to a file that should keep the layout of a control.

            </param>


        </member>
        <member name="M:DevExpress.Utils.WorkspaceManager.SaveWorkspace(System.String,System.Object,System.Boolean)">
            <summary>
                <para>Saves the target workspace from the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces"/> collection to a local file.
</para>
            </summary>
            <param name="name">
		A String value that is the workspace name in the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces"/> collection.

            </param>
            <param name="path">
		An Object that is the path to which the target workspace should be saved.

            </param>
            <param name="createIfNotExisting">
		If no workspace with this name is currently present at the target location, the <b>true</b> value specifies that a new file should be created. Otherwise, the existing workspace will be overwritten.
<para>
The <b>false</b> value restricts the <b>SaveWorkspace</b> method to create new workspace-containing files.
</para>


            </param>
            <returns><b>true</b>, if saving was successful; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Utils.WorkspaceManager.SaveWorkspace(System.String,System.IO.Stream,System.Boolean)">
            <summary>
                <para>Saves the required workspace from the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces"/> collection to a target stream.
</para>
            </summary>
            <param name="name">
		A String value that is the workspace name in the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces"/> collection.

            </param>
            <param name="stream">
		A Stream object to which the target workspace should be saved.

            </param>
            <param name="createIfNotExisting">
		<b>true</b> if a new stream should be created if no currently existing stream with such name was found; otherwise, <b>false</b>.

            </param>
            <returns><b>true</b>, if the workspace was successfully saved; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.WorkspaceManager.SetSerializationEnabled(System.ComponentModel.Component,System.Boolean)">
            <summary>
                <para>Allows you to exclude a specific control from the global application workspace.
</para>
            </summary>
            <param name="component">
		A Component that is the target control.

            </param>
            <param name="enabled">
		<b>false</b> to force the WorkspaceManager to ignore the target control; otherwise, <b>true</b>.

            </param>


        </member>
        <member name="P:DevExpress.Utils.WorkspaceManager.TargetControl">
            <summary>
                <para>Gets or sets a control whose layout is managed by this WorkspaceManager.
</para>
            </summary>
            <value>A Control whose layout is managed by this WorkspaceManager.
</value>


        </member>
        <member name="P:DevExpress.Utils.WorkspaceManager.TransitionType">
            <summary>
                <para>Gets or sets the transition animation that follows applying workspaces.
</para>
            </summary>
            <value>An ITransitionAnimator object that is the transition animation with its parameters.
</value>


        </member>
        <member name="E:DevExpress.Utils.WorkspaceManager.WorkspaceAdded">
            <summary>
                <para>Occurs whenever a new workspace was added to the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces"/> collection.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.WorkspaceManager.WorkspaceCollectionChanged">
            <summary>
                <para>Occurs whenever the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces"/> collection of the current Workspace Manager component changes.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.WorkspaceManager.WorkspaceRemoved">
            <summary>
                <para>Fires when a workspace was removed from the <see cref="P:DevExpress.Utils.WorkspaceManager.Workspaces"/> collection.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.WorkspaceManager.Workspaces">
            <summary>
                <para>Provides access to all currently active workspaces.
</para>
            </summary>
            <value>A List structure that stores all currently active workspaces.
</value>


        </member>
        <member name="E:DevExpress.Utils.WorkspaceManager.WorkspaceSaved">
            <summary>
                <para>Occurs after the <see cref="M:DevExpress.Utils.WorkspaceManager.SaveWorkspace"/> method was called.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.LookAndFeel.TouchUIMode">

            <summary>
                <para>Contains values used to set the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.TouchUIMode"/> property.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.LookAndFeel.TouchUIMode.Default">
            <summary>
                <para>The same as <b>False</b>.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.LookAndFeel.TouchUIMode.False">
            <summary>
                <para>Touch UI mode is disabled.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.LookAndFeel.TouchUIMode.True">
            <summary>
                <para>Touch UI mode is enabled.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.ThumbnailImageEventArgs">

            <summary>
                <para>Provides data for events that maintain the Asynchronous Image Load feature.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ThumbnailImageEventArgs.#ctor(System.Int32,DevExpress.Utils.AsyncImageLoader,DevExpress.Utils.ImageLoadInfo)">
            <summary>
                <para>Initializes a new instance of the ThumbnailImageEventArgs class with the specified settings.
</para>
            </summary>
            <param name="dataSourceIndex">
		The index of the currently processed item among other items. This value is used to initialize the <see cref="P:DevExpress.Utils.ThumbnailImageEventArgs.DataSourceIndex"/> property.

            </param>
            <param name="loader">
		An object that performs image load.

            </param>
            <param name="info">
		An object that stores detailed information about the item.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ThumbnailImageEventArgs.CreateThumbnailImage(System.Drawing.Image)">
            <summary>
                <para>Creates a thumbnail image that will be assigned to an item that supports the asynchronous image load feature.

</para>
            </summary>
            <param name="image">
		An Image that will be transformed to the thumbnail image.

            </param>
            <returns>An Image created by this method.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ThumbnailImageEventArgs.CreateThumbnailImage(System.Drawing.Image,System.Drawing.Size)">
            <summary>
                <para>Creates a thumbnail image of the specific size. This image will be later assigned to an item that supports the asynchronous image load feature.

</para>
            </summary>
            <param name="image">
		An Image that will be transformed to the thumbnail image.

            </param>
            <param name="size">
		A Size structure that is the size of the thumbnail image.


            </param>
            <returns>An Image created by this method.
</returns>


        </member>
        <member name="P:DevExpress.Utils.ThumbnailImageEventArgs.DataSourceIndex">
            <summary>
                <para>Gets the index of the currently processed item among other items in the source (the item's index in the bound data source for data-aware controls, e.g., <see cref="T:DevExpress.XtraGrid.GridControl"/>).
</para>
            </summary>
            <value>An Int32 value that specifies the index of the currently processed item among other items in the source.
</value>


        </member>
        <member name="P:DevExpress.Utils.ThumbnailImageEventArgs.DesiredThumbnailSize">
            <summary>
                <para>Stores the desired size of thumbnail images, generated using the <see cref="M:DevExpress.Utils.ThumbnailImageEventArgs.CreateThumbnailImage"/> method.

</para>
            </summary>
            <value>A Size structure that is the desired size of thumbnail images, generated using the <see cref="M:DevExpress.Utils.ThumbnailImageEventArgs.CreateThumbnailImage"/> method.

</value>


        </member>
        <member name="M:DevExpress.Utils.ThumbnailImageEventArgs.ResetImageCache">
            <summary>
                <para>Resets the image cache and causes all items that are not currently visible to reload their images when displayed again.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.ThumbnailImageEventArgs.ThumbnailImage">
            <summary>
                <para>Gets or sets the image that will be assigned to an item that fired this event.
</para>
            </summary>
            <value>An Image that will be assigned to an item that fired this event.
</value>


        </member>
        <member name="T:DevExpress.XtraEditors.ButtonPanel.IButtonProperties">

            <summary>
                <para>Contains properties for <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> objects.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Appearance">
            <summary>
                <para>Provides access to the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object's appearance settings. 
</para>
            </summary>
            <value>An AppearanceObject that stores the current IButton object's appearance settings.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.BeginUpdate">
            <summary>
                <para>Locks the <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> by preventing visual updates of the object and its elements until the EndUpdate method is called. 
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.CancelUpdate">
            <summary>
                <para>Unlocks the <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object and its elements without immediate visual update.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Caption">
            <summary>
                <para>Gets or sets the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object's caption. 
</para>
            </summary>
            <value>A String value that is the current IButton object's caption. 
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Checked">
            <summary>
                <para>Gets or sets if the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> is checked. 
</para>
            </summary>
            <value>A Boolean value specifying whether the current IButton is checked. 
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Enabled">
            <summary>
                <para>Gets or sets whether the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object is enabled. 
</para>
            </summary>
            <value><b>true</b> if the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object is enabled; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.EndUpdate">
            <summary>
                <para>Unlocks an <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> causing immediate visual update of the object and all its elements.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Glyphs">
            <summary>
                <para>Gets or sets a collection of glyphs for the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object. 
</para>
            </summary>
            <value>An Object that is the glyphs collection for the current IButton object. 

</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.GroupIndex">
            <summary>
                <para>Gets or sets a group index for the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object. 
</para>
            </summary>
            <value>An Int32 value that is the group index for the current IButton object. The default value is <b>-1</b>. 
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Image">
            <summary>
                <para>Gets or sets the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object's icon. 
</para>
            </summary>
            <value>An Image object that is the current IButton object's icon. 
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.ImageIndex">
            <summary>
                <para>Gets or sets an <see cref="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Images"/> collection member used as the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object's glyph. 
</para>
            </summary>
            <value>An Int32 value that points to an <see cref="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Images"/> collection member used as the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object's glyph. 
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.ImageLocation">
            <summary>
                <para>Gets or sets the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object's icon location relative to its <see cref="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Caption"/>. 
</para>
            </summary>
            <value>An ImageLocation enumerator value specifying the current IButton object's icon location relative to its <see cref="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Caption"/>. 
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.ImageOptions">
            <summary>
                <para>Provides access to all properties that allow you to assign and customize an icon for this <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/>.
</para>
            </summary>
            <value>A <see cref="BaseButtonImageOptions"/> object that stores all properties that allow you to assign and customize an icon for this <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Images">
            <summary>
                <para>Gets a collection of images that can be used as the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object's icon. 
</para>
            </summary>
            <value>The Object that is the source of images assigned to the parent dock panel's <see cref="P:DevExpress.XtraBars.Docking.DockPanel.Images"/> property. 
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.ImageUri">
            <summary>
                <para>Gets or sets the uniform resource identifier of the image in the DX Image Gallery displayed in the button. 
A specific version of the addressed image is automatically chosen based on the app context (the current skin and required image size).
</para>
            </summary>
            <value>A string value that specifies the uniform resource identifier of the image to be displayed in the button.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.IsUpdateLocked">
            <summary>
                <para>Gets whether the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> is locked for any visual update.
</para>
            </summary>
            <value><b>true</b> if the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> is locked for any visual update; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Style">
            <summary>
                <para>Gets or sets the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object's type. 
</para>
            </summary>
            <value>A ButtonStyle enumerator value that specifies the current IButton object's type. 
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.SuperTip">
            <summary>
                <para>Gets or sets a super tool-tip for the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/>. 
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.SuperToolTip"/> object associated with the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Tag">
            <summary>
                <para>Gets or sets the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object's tag. 
</para>
            </summary>
            <value>An Object that is the current IButton object's tag. 
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.ToolTip">
            <summary>
                <para>Gets or sets a tool-tip for the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/>. 
</para>
            </summary>
            <value>A String value that is the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/>'s tool-tip.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.UseCaption">
            <summary>
                <para>Gets or sets whether the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object's <see cref="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Caption"/> is visible. 
</para>
            </summary>
            <value><b>true</b> if the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object's <see cref="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Caption"/> is visible; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.UseImage">
            <summary>
                <para>Gets or sets whether the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object's icon is visible. 
</para>
            </summary>
            <value><b>true</b> if the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object's icon is visible; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.Visible">
            <summary>
                <para>Gets or sets whether the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object is visible. 
</para>
            </summary>
            <value><b>true</b> if the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object is visible; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ButtonPanel.IButtonProperties.VisibleIndex">
            <summary>
                <para>Gets or sets the current <see cref="T:DevExpress.XtraBars.Docking2010.IButton"/> object's relative position. 
</para>
            </summary>
            <value>An Int32 value specifying the current IButton object's relative position. 
</value>


        </member>
        <member name="T:DevExpress.Utils.VisualEffects.ValidationHintDefaultProperties">

            <summary>
                <para>An object that stores individual validation hint properties for all three control validation states.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.VisualEffects.ValidationHintDefaultProperties.#ctor(DevExpress.Utils.VisualEffects.ValidationHintProperties)">
            <summary>
                <para>Initializes a new instance of the ValidationHintDefaultProperties class with the specified settings.
</para>
            </summary>
            <param name="parentProperties">
		A ValidationHintProperties object whose settings should be inherited by the newly created ValidationHintDefaultProperties object.

            </param>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintDefaultProperties.ActualState">
            <summary>
                <para>Returns the current validation state of this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> object.
</para>
            </summary>
            <value>A <see cref="ValidationHintState"/> enumerator value that returns the current validation state.
</value>


        </member>
        <member name="M:DevExpress.Utils.VisualEffects.ValidationHintDefaultProperties.EnsureParentProperties(DevExpress.Utils.VisualEffects.AdornerElementProperties)">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="parentProperties">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintDefaultProperties.IndeterminateState">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> behavior settings applied when its target UI element is not yet validated. 

</para>
            </summary>
            <value>A <see cref="ValidationHintBaseDefaultProperties"/> object that stores behavior settings applied when the target UI element that is yet to be validated.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintDefaultProperties.InvalidState">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> behavior settings applied when its target UI element fails validation.
</para>
            </summary>
            <value>A <see cref="ValidationHintBaseDefaultProperties"/> object that stores behavior settings applied when the target UI element fails validation.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintDefaultProperties.State">
            <summary>
                <para>Gets or sets the current validation state of this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/>.
</para>
            </summary>
            <value>A ValidationHintState enumerator value that is the current validation state of this <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/>.
</value>


        </member>
        <member name="P:DevExpress.Utils.VisualEffects.ValidationHintDefaultProperties.ValidState">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.Utils.VisualEffects.ValidationHint"/> behavior settings applied when its target UI element successfully passes validation.
</para>
            </summary>
            <value>A <see cref="ValidationHintBaseDefaultProperties"/> object that stores behavior settings applied when the target UI element passes validation.
</value>


        </member>
        <member name="T:DevExpress.XtraEditors.WindowsFormsSettings">

            <summary>
                <para>Provides appearance and behavior settings common to all DevExpress controls.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.AllowArrowDragIndicators">
            <summary>
                <para>Gets or sets whether dragging-and-dropping columns/fields is indicated using arrow indicators. This is a static property.
</para>
            </summary>
            <value><b>true</b>, if dragging-and-dropping columns is indicated using arrow indicators; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.AllowAutoFilterConditionChange">
            <summary>
                <para>Gets or sets whether or not Data Grid and TreeList automatic filtering rows should display buttons that allow end-users to change the filtering condition.
</para>
            </summary>
            <value>A DefaultBoolean value that specifies whether or not DataGrid and TreeList automatic filtering rows should display buttons that allow end-users to change the filtering condition.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.AllowAutoScale">
            <summary>
                <para>Gets or sets whether a control is scaled according to its scale factor (which is dependent on the monitor DPI setting). This is a static property.
</para>
            </summary>
            <value><b>Default</b> or <b>True</b> if control auto-scaling is enabled; <b>False</b> if this mode is disabled.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.AllowDefaultSvgImages">
            <summary>
                <para>Gets or sets whether or not automatically generated UI elements (e.g., Grid context menu items) should display vector icons.
</para>
            </summary>
            <value><b>DefaultBoolean.True</b> if UI elements should display vector icons; <b>DefaultBoolean.False</b> to display raster icons instead.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.AllowDpiScale">
            <summary>
                <para>Gets or sets whether or not DevExpress Skins can be scaled on high-DPI devices.
</para>
            </summary>
            <value><b>true</b>, if DevExpress Skins can be scaled on high-DPI devices; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.AllowFormSkins">
            <summary>
                <para>Gets whether the form title bar skinning feature is enabled. This is a static property.
</para>
            </summary>
            <value><b>true</b>, if the form title bar skinning feature is enabled; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.AllowHoverAnimation">
            <summary>
                <para>Gets or sets whether animation on hovering objects is enabled. This is a static property.


</para>
            </summary>
            <value>A value that specifies whether animation on hovering objects is enabled.

</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.AllowOverpanApplicationWindow">
            <summary>
                <para>Gets or sets whether the window bounce (panning feedback) is enabled when an end-user tries to pan (scroll with the finger) beyond a control's pannable area. This is a static property.
</para>
            </summary>
            <value><b>Default</b> or <b>True</b> if the window panning feedback is enabled; <b>False</b> if this visual effect is disabled.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.AllowPixelScrolling">
            <summary>
                <para>Gets or sets whether smooth pixel-based scrolling is enabled for controls. This is a static property.

</para>
            </summary>
            <value>A <b>DefaultBoolean</b> value that specifies whether smooth pixel-based scrolling is enabled for controls.

</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.AllowRibbonFormGlass">
            <summary>
                <para>Gets or sets whether or not all <see cref="T:DevExpress.XtraBars.Ribbon.RibbonForm"/>s used within this app should use the Windows 7 Aero effect.
</para>
            </summary>
            <value>A <see cref="DefaultBoolean"/> enumerator value that specifies whether or not all <see cref="T:DevExpress.XtraBars.Ribbon.RibbonForm"/>s used within this app should use the Windows 7 Aero effect.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.AllowWindowGhosting">
            <summary>
                <para>Gets or sets whether the window ghosting feature is enabled for skinned XtraForm objects. This is a static property.
</para>
            </summary>
            <value>A Boolean value that specifies whether the window ghosting feature is enabled. The default value is <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.AnimationMode">
            <summary>
                <para>Gets or sets whether DevExpress controls animate end-user operations (expand/collapse, tab switch, sorting, etc.). This is a static (shared in VB) property.
</para>
            </summary>
            <value>An <see cref="AnimationMode"/> enumeration value that specifies whether DevExpress controls use animation effects. The default is <b><see cref="AnimationMode"/>.Default</b>.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.ApplyDemoSettings">
            <summary>
                <para>This method is called by DevExpress demos to apply specific settings. This is a static method.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.ColumnAutoFilterMode">
            <summary>
                <para>Allows you to restore default filtering conditions for all Data Grid auto-filter rows to their 16.2 versions.
</para>
            </summary>
            <value>A <see cref="ColumnAutoFilterMode"/> enumerator value.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.ColumnFilterPopupMode">
            <summary>
                <para>Gets or sets the default display mode of column filter dropdowns in all <see cref="T:DevExpress.XtraGrid.GridControl"/>s, <see cref="T:DevExpress.XtraTreeList.TreeList"/>s and <see cref="T:DevExpress.XtraPivotGrid.PivotGridControl"/>s in the current application.

</para>
            </summary>
            <value>A value that specifies the default display mode of column filter dropdowns in all GridControls and TreeLists in the current application.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.CustomizationFormSnapMode">
            <summary>
                <para>Gets or sets whether or not customization forms can stick to each other, parent forms or screen edges. 
</para>
            </summary>
            <value>A SnapMode enumerator value that specifies whether or not dock panels can stick to each other, parent forms or screen edges. 
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.DefaultAllowHtmlDraw">
            <summary>
                <para>Indicates whether HTML text formatting is enabled for controls by default. This is a static property.
</para>
            </summary>
            <value><b>true</b>, if HTML text formatting is enabled for controls by default; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.DefaultFont">
            <summary>
                <para>Gets or sets the default font for DevExpress controls (except menus and toolbars). This is a static property.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Font"/> object which is the default font for controls. The default value is the <b>Tahoma</b> font.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.DefaultLookAndFeel">
            <summary>
                <para>Gets the default <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object which is used for painting controls. This is a static property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.DefaultMenuFont">
            <summary>
                <para>Gets and sets the default font used to display text on menus, toolbars and popup menus (except Ribbon elements). This is a static property.
</para>
            </summary>
            <value>A <b><see cref="T:System.Drawing.Font"/></b> object which is the default font for menu items. If not set, the property value is specified by the <b>System.Windows.Forms.SystemInformation.MenuFont</b> property.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.DefaultPrintFont">
            <summary>
                <para>Gets or sets the default text font for printing. This is a static property.
</para>
            </summary>
            <value>A <b>System.Drawing.Font</b> object that defines the default text font for printing.
</value>


        </member>
        <member name="F:DevExpress.XtraEditors.WindowsFormsSettings.DefaultSettingsCompatibilityMode">
            <summary>
                <para>Modifies default values of various properties according to the selected DevExpress installation version.
</para>
            </summary>
            <returns>A <see cref="SettingsCompatibilityMode"/> enumeration value that specifies according to which DevExpress installation version properties should have their default values.
</returns>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.DisableAccessibility">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.DisableFormSkins">
            <summary>
                <para>Disables the title bar skinning feature for DevExpress forms and message boxes.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.DisableMdiFormSkins">
            <summary>
                <para>Disables the title bar skinning feature for MDI child DevExpress forms.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.DockingViewStyle">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.DragScrollThumbBeyondControlMode">
            <summary>
                <para>Gets or sets whether the scroll bar thumb restores its previous position or keeps the terminal position when it is dragged beyond a control. This is a static property.
</para>
            </summary>
            <value>A <b>DragScrollThumbBeyondControlMode</b> enumeration value that specifies whether the scroll bar thumb restores its previous position or keeps the terminal position when dragged beyond a control.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.DragScrollThumbBeyondControlThreshold">
            <summary>
                <para>Gets or sets the threshold, in pixels, beyond which the previous scroll bar thumb position is restored. This property is in effect in the <b>RestoreThumbPosition</b> mode. This is a static property.
</para>
            </summary>
            <value>An integer value that specifies the threshold, in pixels, beyond which the previous scroll bar thumb position is restored. The default value is <b>50</b> pixels.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.EnableFormSkins">
            <summary>
                <para>Enables the title bar skinning feature for DevExpress forms and message boxes.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.EnableFormSkinsIfXP">
            <summary>
                <para>Enables the title bar skinning feature for DevExpress forms and message boxes, if the application is running under Microsoft Windows XP.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.EnableMdiFormSkins">
            <summary>
                <para>Enables the title bar skinning feature for MDI child DevExpress forms.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.FocusRectStyle">
            <summary>
                <para>Gets or sets the style of dashed lines to paint focus rectangles. This is a static property.
</para>
            </summary>
            <value>A <b>DXDashStyle</b> enumeration value that specifies the style of dashed lines to paint focus rectangles.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.FontBehavior">
            <summary>
                <para>Gets or sets the behavior specifying fonts used by DevExpress and standard .Net controls. This is a static property. Setting this property modifies the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.DefaultFont"/> property.
</para>
            </summary>
            <value>A <see cref="WindowsFormsFontBehavior"/> enumeration value that specifies the behavior specifying fonts used by DevExpress and standard .Net controls.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.ForceAPIPaint">
            <summary>
                <para>Enables the mixed use of the DevExpress text rendering library and <b>System.Windows.Forms.TextRenderer</b> class functionality.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.ForceDirectXPaint">
            <summary>
                <para>Turns the DirectX Hardware Acceleration on.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.ForceGDIPlusPaint">
            <summary>
                <para>Enables the use of the <b>System.Drawing.Graphics</b> class for text rendering.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.ForcePaintApiDiagnostics(DevExpress.Utils.Diagnostics.PaintApiDiagnosticsLevel,DevExpress.Utils.Diagnostics.PaintApiTraceLevelResolver)">
            <summary>
                <para>Allows you to trace all outdated APIs that are not recommended for use with DirectX-rendered and Per-Monitor DPI-aware applications.

</para>
            </summary>
            <param name="level">
		A  enumerator value that specifies how the application responds to this inadvisable API.


            </param>
            <param name="resolver">
		An optional  object that allows you to implement a custom trace behavior.

            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.ForceTextRenderPaint">
            <summary>
                <para>Enables the use of the <b>System.Windows.Forms.TextRenderer</b> class for rendering text.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.GetAllowAutoScale">
            <summary>
                <para>Gets the actual value of the auto-scaling setting for controls. This is a static property.
</para>
            </summary>
            <returns>The actual value of the auto-scaling setting for controls.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.GetAllowDefaultSvgImages">
            <summary>
                <para>Returns the actual value of the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.AllowDefaultSvgImages"/> property.
</para>
            </summary>
            <returns><b>true</b>, if generated UI elements should receive vector icons; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.GetAllowHoverAnimation(DevExpress.Skins.ISkinProvider)">
            <summary>
                <para>Returns whether animation on hovering objects is enabled. This is a static method.

</para>
            </summary>
            <param name="provider">
		An object that provides information on the current skin.

            </param>
            <returns><b>true</b>, if animation on hovering objects is enabled; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.GetExpressionEditorMode(DevExpress.XtraEditors.ExpressionEditorMode)">
            <summary>
                <para>For internal use.</para>
            </summary>
            <param name="mode">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.GetIsRightToLeft(System.Windows.Forms.RightToLeft)">
            <summary>
                <para>Returns a Boolean value that specifies whether DevExpress controls are aligned to support locales using right-to-left fonts. The method parameter allows the default behavior to be specified. This is a static method.
</para>
            </summary>
            <param name="rightToLeft">
		A <b>RightToLeft</b> enumeration value that specifies the default behavior that is used if the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.RightToLeft"/> property equals <b>Default</b>.

            </param>
            <returns><b>true</b>, if DevExpress controls are aligned to support locales using right-to-left fonts; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.GetIsRightToLeft(System.Windows.Forms.Control)">
            <summary>
                <para>Returns a Boolean value that indicates whether the specified control is actually aligned to support locales using right-to-left fonts. This is a static method.
</para>
            </summary>
            <param name="control">
		A Control object.

            </param>
            <returns><b>true</b>, if the specified control is actually aligned to support locales using right-to-left fonts; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.GetIsRightToLeftLayout(System.Windows.Forms.Control)">
            <summary>
                <para>Returns a Boolean value that indicates whether right-to-left mirror placement is turned on for the specified control or form. This is a static method.
</para>
            </summary>
            <param name="control">
		A Control object.

            </param>
            <returns>A <b>Boolean</b> value that indicates whether right-to-left mirror placement is turned on for the specified control or form.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.GetIsRightToLeftLayout(System.Boolean)">
            <summary>
                <para>Returns a Boolean value that indicates whether right-to-left mirror placement is turned on. The method parameter allows the default behavior to be specified. This is a static method.
</para>
            </summary>
            <param name="rightToLeft">
		A default <b>Boolean</b> value that is returned if the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.RightToLeftLayout"/> property equals <b>Default</b>.

            </param>
            <returns>A <b>Boolean</b> value that indicates whether right-to-left mirror placement is turned on.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.GetPopupWidthMode(System.Boolean,DevExpress.XtraEditors.PopupWidthMode)">
            <summary>
                <para>For internal use.</para>
            </summary>
            <param name="allowUpdatePopupWidth">
		 
            </param>
            <param name="mode">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.GetRightToLeft(System.Windows.Forms.RightToLeft)">
            <summary>
                <para>Returns a RightToLeft enumeration value that specifies whether DevExpress controls are aligned to support locales using right-to-left fonts. The method parameter allows the default behavior to be specified. This is a static method.
</para>
            </summary>
            <param name="rightToLeft">
		A default <b>System.Windows.Forms.RightToLeft</b> enumeration value that is returned if the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.RightToLeft"/> property equals <b>Default</b>.

            </param>
            <returns>A <b>System.Windows.Forms.RightToLeft</b> enumeration value that specifies whether DevExpress controls are aligned to support locales using right-to-left fonts.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.GetRightToLeft(System.Windows.Forms.Control)">
            <summary>
                <para>Returns a RightToLeft enumeration value that indicates whether the specified control is actually aligned to support locales using right-to-left fonts. This is a static method.
</para>
            </summary>
            <param name="control">
		A Control object.

            </param>
            <returns>A <b>System.Windows.Forms.RightToLeft</b> enumeration value that indicates whether the specified control is actually aligned to support locales using right-to-left fonts.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.GetUseAdvancedFilterEditorControl">
            <summary>
                <para>For internal use.</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.InplaceEditorUpdateMode">
            <summary>
                <para>Gets or sets edit value update mode for <see cref="T:DevExpress.XtraBars.BarEditItem"/>s which display inplace editors in bars (see Bar Manager) and Ribbon controls. 
This property is supported for a limited set of inplace editors. See the Remarks section for more information.
</para>
            </summary>
            <value>An <see cref="InplaceEditorUpdateMode"/> enumerator value that specifies the edit value update mode for inplace editors.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.IsAllowPixelScrolling">
            <summary>
                <para>Gets whether smooth pixel-based scrolling is enabled for controls.
This is a static property.
</para>
            </summary>
            <value><b>true</b>, if smooth pixel-based scrolling is enabled for controls; otherwise, <b>false</b>.

</value>


        </member>
        <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.LoadApplicationSettings">
            <summary>
                <para>Loads appearance settings from the configuration file and updates the corresponding properties accordingly.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.PopupAnimation">
            <summary>
                <para>Gets or sets the animation effects that follow expanding and collapsing popup menus.
</para>
            </summary>
            <value>A <see cref="PopupAnimation"/> enumerator value that specifies animation effects that follow expanding and collapsing popup menus.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.PopupMenuStyle">
            <summary>
                <para>Gets or sets whether the DevExpess controls' built-in context menus are displayed in the classic rectangular or radial style. This is a static property.
</para>
            </summary>
            <value>A <b>PopupMenuStyle</b> enumeration value that specifies the style in which built-in context menus are displayed.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.PopupShadowStyle">
            <summary>
                <para>Specifies the shadow style applied to all popup menus in this application.

</para>
            </summary>
            <value>A <see cref="PopupShadowStyle"/> enumerator value that specifies the shadow style applied to all popup menus in this application.

</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.PreferredDateTimeCulture">
            <summary>
                <para>Gets or sets the culture settings used by date-time (canendar, scheduler, etc.) controls for month names, day abbreviations, and the first day of week.
</para>
            </summary>
            <value>A <see cref="DateTimeCulture"/> enumeration value, such as <b>CurrentCulture</b> and <b>CurrentUICulture</b>, that specifies the culture used by date-time controls.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.RightToLeft">
            <summary>
                <para>Gets or sets whether visual elements of DevExpress controls are aligned to support locales using right-to-left fonts. This is a static property.
</para>
            </summary>
            <value>A <see cref="DefaultBoolean"/> enumeration value that specifies whether visual elements of DevExpress controls are aligned to support locales using right-to-left fonts.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.RightToLeftLayout">
            <summary>
                <para>Gets or sets whether right-to-left mirror placement is turned on.
</para>
            </summary>
            <value>A <see cref="DefaultBoolean"/> value that specifies whether right-to-left mirror placement is turned on.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.ScrollUIMode">
            <summary>
                <para>Gets or sets the UI mode in which scroll bars are displayed. This is a static property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraEditors.ScrollUIMode"/> enumeration value that specifies the UI mode in which scroll bars are displayed.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.WindowsFormsSettings.SetDPIAware">
            <summary>
                <para>Sets the current process as dots per inch (dpi) aware.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.ShowTouchScrollBarOnMouseMove">
            <summary>
                <para>Gets or sets whether a control's scroll bars appear on screen when an end-user moves the mouse pointer over the scrollable content. This is a static property.
</para>
            </summary>
            <value><b>true</b>, if scroll bars appear on screen when an end-user moves the mouse pointer over the scrollable content; otherwise, <b>false</b>.

</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.SmartMouseWheelProcessing">
            <summary>
                <para>Gets or sets whether the mouse wheel scrolls the control that is currently hovered over with the mouse pointer or the control that is currently focused. This property is in effect for controls that reside within an <see cref="T:DevExpress.XtraEditors.XtraForm"/> or <see cref="T:DevExpress.XtraBars.Ribbon.RibbonForm"/>. This is a static property.
</para>
            </summary>
            <value><b>true</b>, if the mouse wheel scrolls the control that is currently hovered with the mouse pointer; <b>false</b>, if the focused control is scrolled with the mouse wheel, regardless of the mouse cursor position.
<para>The default is <b>true</b>.</para>
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.SvgImageRenderingMode">
            <summary>
                <para>Gets or sets the rendering quality of vector images.
</para>
            </summary>
            <value>A <see cref="SvgImageRenderingMode"/> enumeration value that specifies the rendering quality, such as <b>HighSpeed</b> or <b>HighQuality</b>, of vector images. <b>Default</b> equals <b>HighQuality</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.TouchScaleFactor">
            <summary>
                <para>Gets or sets the scale factor used to calculate the size and distance between specific control elements when touch UI mode is enabled. This is a static property.

</para>
            </summary>
            <value>The scale factor used to calculate the size and distance between specific control elements when touch UI mode is enabled. 
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.TouchUIMode">
            <summary>
                <para>Gets or sets whether touch UI mode is enabled, in which controls automatically increase their size and the distance between some of their elements. This is a static property.

</para>
            </summary>
            <value>A value that specifies if touch UI mode is enabled.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.WindowsFormsSettings.UseAdvancedFilterEditorControl">
            <summary>
                <para>Specifies whether WinForms data-aware controls should use the advanced Filter Editor Control that features a single-tab interface and enhanced text criteria builder.
</para>
            </summary>
            <value>A DefaultBoolean enumerator value that specifies whether or not WinForms data-aware controls should use the advanced Filter Editor Control.
</value>


        </member>
        <member name="T:DevExpress.Utils.ToolTipItem">

            <summary>
                <para>A regular tooltip item in a <see cref="T:DevExpress.Utils.SuperToolTip"/> that displays text and/or an image.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="info">
		 

            </param>
            <param name="context">
		 

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipItem.#ctor">
            <summary>
                <para>Initializes a new instance of the ToolTipItem class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.ToolTipItem.AllowHtmlText">
            <summary>
                <para>Gets or sets whether HTML formatting is allowed for the item's text (<see cref="P:DevExpress.Utils.ToolTipItem.Text"/>).
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> value that specifies whether HTML formatting is allowed in the tooltip.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipItem.DefaultImageToTextDistance">
            <summary>
                <para>Gets the default <see cref="P:DevExpress.Utils.ToolTipItem.ImageToTextDistance"/> property value.
</para>
            </summary>
            <value>An integer value that is the default <see cref="P:DevExpress.Utils.ToolTipItem.ImageToTextDistance"/> property value.
</value>


        </member>
        <member name="M:DevExpress.Utils.ToolTipItem.Dispose">
            <summary>
                <para>Releases all unmanaged resources used by the ToolTipItem.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.ToolTipItem.Font">
            <summary>
                <para>Gets or sets the font used to paint the item's text.
</para>
            </summary>
            <value>The font used to display the <see cref="T:DevExpress.Utils.ToolTipItem"/>'s text (specified in the <see cref="P:DevExpress.Utils.ToolTipItem.Text"/> property).
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipItem.Icon">
            <summary>
                <para>Gets or sets the icon displayed in the ToolTipItem object.
</para>
            </summary>
            <value>An <b>System.Drawing.Icon</b> that is displayed in the ToolTipItem object.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipItem.Image">
            <summary>
                <para>Gets or sets the image displayed in the ToolTipItem object.
</para>
            </summary>
            <value>A <b>System.Drawing.Image</b> that is displayed in the tool tip.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipItem.ImageAlign">
            <summary>
                <para>Gets or sets the image or icon alignment.
</para>
            </summary>
            <value>The image or icon alignment.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipItem.ImageIndex">
            <summary>
                <para>Gets or sets the zero-based index of an image in a <see cref="P:DevExpress.Utils.ToolTipItem.Images"/> collection to be displayed in a ToolTipItem object.

</para>
            </summary>
            <value>The zero-based index of an image in an <see cref="P:DevExpress.Utils.ToolTipItem.Images"/> collection to be displayed in a ToolTipItem object.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipItem.ImageOptions">
            <summary>
                <para>Provides access to properties that allow you to assign and customize an image for this tooltip item.
</para>
            </summary>
            <value>A <see cref="ToolTipItemImageOptions"/> object that stores properties that allow you to assign and customize an image for this tooltip item.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipItem.Images">
            <summary>
                <para>Gets or sets the source of images that can be displayed in a ToolTipItem object. 
</para>
            </summary>
            <value>The source of images that can be displayed in a ToolTipItem object. 
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipItem.ImageToTextDistance">
            <summary>
                <para>Gets or sets a space that visually detaches an image and text displayed in a ToolTipItem.
</para>
            </summary>
            <value>The distance between an image and text displayed in a ToolTipItem, in pixels
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipItem.IsEmpty">
            <summary>
                <para>Gets whether the ToolTipItem is empty.
</para>
            </summary>
            <value><b>true</b>, if ToolTipItem content (text, image and icon) is empty; otherwise, <b>false</b>
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipItem.LeftIndent">
            <summary>
                <para>Gets or sets the indent from the left edge of a ToolTipItem.

</para>
            </summary>
            <value>The indent from the left edge of a ToolTipItem, in pixels.

</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipItem.MaxWidth">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipItem.OwnerAllowHtmlText">
            <summary>
                <para>Gets whether the <see cref="T:DevExpress.Utils.SuperToolTip"/> object (the ToolTipItem owner) allows using HTML tags.

</para>
            </summary>
            <value><b>true</b>, if the <see cref="T:DevExpress.Utils.SuperToolTip"/> object (the ToolTipItem owner) allows using HTML tags.; otherwise, <b>false</b>.

</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipItem.Text">
            <summary>
                <para>Gets or sets the tooltip item text.

</para>
            </summary>
            <value>Specifies the text in a ToolTipItem.
</value>


        </member>
        <member name="T:DevExpress.Utils.Animation.TransitionManager">

            <summary>
                <para>Allows you to implement animated transitions between control states. 
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Animation.TransitionManager.#ctor">
            <summary>
                <para>Initializes a new instance of the TransitionManager class with the default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Animation.TransitionManager.#ctor(System.ComponentModel.IContainer)">
            <summary>
                <para>Initializes a new instance of the TransitionManager class with the specified settings.
</para>
            </summary>
            <param name="container">
		A container for the TransitionManager being created.

            </param>


        </member>
        <member name="E:DevExpress.Utils.Animation.TransitionManager.AfterTransitionEnds">
            <summary>
                <para>Serves as a notification event that an animated transition between a control's states is complete.

</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.Animation.TransitionManager.BeforeTransitionStarts">
            <summary>
                <para>Allows you to perform custom actions before a transition between control states starts, or allows you to cancel the transition.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.Animation.TransitionManager.CustomTransition">
            <summary>
                <para>Allows you to customize an animated state transition.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Animation.TransitionManager.EndTransition">
            <summary>
                <para>Finalizes the current animated state transition.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.Animation.TransitionManager.FrameCount">
            <summary>
                <para>Gets or sets the number of animation frames.
</para>
            </summary>
            <value>The number of animation frames.
</value>


        </member>
        <member name="P:DevExpress.Utils.Animation.TransitionManager.FrameInterval">
            <summary>
                <para>Gets or sets the time between animation frames, in special units.
</para>
            </summary>
            <value>The time between animation frames.
</value>


        </member>
        <member name="P:DevExpress.Utils.Animation.TransitionManager.IsDisposing">
            <summary>
                <para>Gets whether the TransitionManager is being disposed of.
</para>
            </summary>
            <value><b>true</b>, if the TransitionManager is being disposed of; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.Animation.TransitionManager.IsTransition">
            <summary>
                <para>Gets whether an animated transition between the start and end control states is in progress.
</para>
            </summary>
            <value><b>true</b>, if the animated transition between the states is in progress; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.Animation.TransitionManager.ShowWaitingIndicator">
            <summary>
                <para>Gets or sets whether the wait/load indicator is displayed during animation.

</para>
            </summary>
            <value><b>true</b>, if the wait/load indicator is displayed during the animation; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Utils.Animation.TransitionManager.StartTransition(System.Windows.Forms.Control)">
            <summary>
                <para>Starts an animated state transition for the specified control.
</para>
            </summary>
            <param name="control">
		The control for which to start the animated state transition.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Animation.TransitionManager.StartWaitingIndicator(System.Windows.Forms.Control,DevExpress.Utils.Animation.WaitingAnimatorType)">
            <summary>
                <para>Shows the wait indicator of the specified type over the specified control.
</para>
            </summary>
            <param name="control">
		A <b>Control</b> over which to show the wait indicator.

            </param>
            <param name="indicatorType">
		A <b>WaitingAnimatorType</b> enumeration value that specifies the type of indicator to show.


            </param>


        </member>
        <member name="M:DevExpress.Utils.Animation.TransitionManager.StartWaitingIndicator(System.Windows.Forms.Control,DevExpress.Utils.Animation.IWaitingIndicatorProperties)">
            <summary>
                <para>Shows the wait indicator over the specified control using the specified properties.
</para>
            </summary>
            <param name="control">
		A <b>Control</b> over which to show the wait indicator.

            </param>
            <param name="indicatorProperties">
		A <b>IWaitingIndicatorProperties</b> object that comprises the wait indicator properties.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Animation.TransitionManager.StopWaitingIndicator">
            <summary>
                <para>Hides the wait indicator.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.Animation.TransitionManager.Transitions">
            <summary>
                <para>Provides access to the collection of control state transitions.
</para>
            </summary>
            <value>The collection of control state transitions.
</value>


        </member>
        <member name="T:DevExpress.Utils.SvgImageCollection">

            <summary>
                <para>Stores vector images added by you and provides these images to DevExpress controls.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.#ctor(System.ComponentModel.IContainer)">
            <summary>
                <para>Initializes a new instance of the SvgImageCollection class with the specified settings.
</para>
            </summary>
            <param name="container">
		An IContainer that specifies an object that owns this SvgImageCollection.

            </param>


        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.#ctor">
            <summary>
                <para>Initializes a new instance of the SvgImageCollection class with the default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.Add(System.String,System.String,System.Type)">
            <summary>
                <para>Adds an image from project resources to this SvgImageCollection.
</para>
            </summary>
            <param name="key">
		A String value that specifies the image name.

            </param>
            <param name="resourceName">
		A String value that specifies the property name in a static project resource class.

            </param>
            <param name="resourceType">
		A Type that matches the project resource's class type.

            </param>


        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.Add(System.String,System.String)">
            <summary>
                <para>Adds an image to this SvgImageCollection.
</para>
            </summary>
            <param name="key">
		A String value that specifies the image name.

            </param>
            <param name="imageUri">
		A String value that is the Image URI.

            </param>


        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.Add(System.String,DevExpress.Utils.Svg.SvgImage)">
            <summary>
                <para>Adds an image to this SvgImageCollection and changes its name.
</para>
            </summary>
            <param name="key">
		A String value that specifies the image name.

            </param>
            <param name="image">
		An SvgImage object that specifies the image to be added.

            </param>


        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.Add(DevExpress.Utils.Svg.SvgImage)">
            <summary>
                <para>Adds an image to this SvgImageCollection.
</para>
            </summary>
            <param name="image">
		An SvgImage object that specifies the image to be added.

            </param>


        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.AddRange(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Adds multiple vector images to this SvgImageCollection.
</para>
            </summary>
            <param name="images">
		An IEnumerable object that contains multiple vector images to be added.

            </param>


        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.BeginInit">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.Clear">
            <summary>
                <para>Removes all images from this SvgImageCollection.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.Contains(DevExpress.Utils.Svg.SvgImage)">
            <summary>
                <para>Returns whether or not this SvgImageCollection contains the specific image.
</para>
            </summary>
            <param name="item">
		An SvgImage object that is the image to be checked.

            </param>
            <returns><b>true</b>, if this SvgImageCollection contains the image you check; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.ContainsKey(System.String)">
            <summary>
                <para>Determines whether the <see cref="P:DevExpress.Utils.SvgImageCollection.Keys"/> sequence contains the specified element.
</para>
            </summary>
            <param name="key">
		The value to locate in the sequence.

            </param>
            <returns><b>true</b>, if the <see cref="P:DevExpress.Utils.SvgImageCollection.Keys"/> sequence contains an element that has the specified value; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.CopyTo(DevExpress.Utils.Svg.SvgImage[],System.Int32)">
            <summary>
                <para>Copies all SvgImageCollection image to the specific array.
</para>
            </summary>
            <param name="array">
		An SvgImage array to which the target SvgImageCollection should copy all its images.

            </param>
            <param name="arrayIndex">
		An Int32 value that specifies the copied images' starting position within the array. 

            </param>


        </member>
        <member name="P:DevExpress.Utils.SvgImageCollection.Count">
            <summary>
                <para>Returns the number of vector icons stored in this SvgImageCollection.
</para>
            </summary>
            <value>An Int32 value that is the number of vector icons.

</value>


        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.EndInit">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.FromResources(System.String,System.Reflection.Assembly)">
            <summary>
                <para>Generates a new SvgImageCollection instance filled with images from a project assembly.
</para>
            </summary>
            <param name="resourceBaseName">
		A String value that specifies the path to assembly images within a project.

            </param>
            <param name="assembly">
		An Assembly that contains the target embedded resource images.

            </param>
            <returns>A <see cref="SvgImageCollection"/> object that contains images from a project assembly.
</returns>


        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.GetImage(System.String,DevExpress.Utils.Design.ISvgPaletteProvider,System.Nullable`1)">
            <summary>
                <para>Returns a regular raster image produced from a source vector image.
</para>
            </summary>
            <param name="name">
		A String value that is the vector image name within the SvgImageCollection.

            </param>
            <param name="palette">
		An ISvgPaletteProvider object that specifies a palette according to which the produced raster image should be colorized.

            </param>
            <param name="size">
		A Size structure that is the produced image' size.

            </param>
            <returns>An Image that is the raster image produced from a vector image.
</returns>


        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.GetImage(System.String,System.Nullable`1)">
            <summary>
                <para>Returns a regular raster image produced from a source vector image.
</para>
            </summary>
            <param name="name">
		A String value that is the vector image name within the SvgImageCollection.

            </param>
            <param name="size">
		A Size structure that is the produced image' size.

            </param>
            <returns>An Image that is the raster image produced from a vector image.
</returns>


        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.GetImage(System.Int32,DevExpress.Utils.Design.ISvgPaletteProvider,System.Nullable`1)">
            <summary>
                <para>Returns a regular raster image produced from a source vector image.
</para>
            </summary>
            <param name="index">
		An Index of a source vector image within this SvgImageCollection.

            </param>
            <param name="palette">
		An ISvgPaletteProvider object that specifies a palette according to which the produced raster image should be colorized.

            </param>
            <param name="size">
		A Size structure that is the produced image' size.

            </param>
            <returns>An Image that is the raster image produced from a vector image.
</returns>


        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.GetImage(System.Int32,System.Nullable`1)">
            <summary>
                <para>Returns a regular raster image produced from a source vector image.
</para>
            </summary>
            <param name="index">
		An Index of a source vector image within this SvgImageCollection.

            </param>
            <param name="size">
		A Size structure that is the produced image' size.

            </param>
            <returns>An Image that is the raster image produced from a vector image.
</returns>


        </member>
        <member name="P:DevExpress.Utils.SvgImageCollection.ImageInfos">
            <summary>
                <para>Returns the SvgImageInfo objects for all images owned by this SvgImageCollection.
</para>
            </summary>
            <value>A <see cref="SvgImageInfoCollection"/> object that stores information for all the SvgImageCollection images.

</value>


        </member>
        <member name="P:DevExpress.Utils.SvgImageCollection.ImageSize">
            <summary>
                <para>Gets or sets the default image size. If you do not manually set a control's <b>ImageOptions.SvgImageSize</b> setting, an SvgImageCollection vector icon assigned to this control will have this default size.
</para>
            </summary>
            <value>A Size that is the default image size.
</value>


        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.IndexOf(DevExpress.Utils.Svg.SvgImage)">
            <summary>
                <para>Returns the index of the specific image.

</para>
            </summary>
            <param name="item">
		An SvgImage whose index is to be obtained.

            </param>
            <returns>An Int32 value that is the specific image's index.
</returns>


        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.Insert(System.Int32,DevExpress.Utils.Svg.SvgImage)">
            <summary>
                <para>Adds a vector image to this SvgImageCollection and places it to the specific position.
</para>
            </summary>
            <param name="index">
		An Int32 value that is the position of a new image in this SvgImageCollection.

            </param>
            <param name="item">
		An SvgImage added to this SvgImageCollection.

            </param>


        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.Insert(System.Int32,System.String,System.String)">
            <summary>
                <para>Adds a vector image from a DevExpress Image Gallery to this SvgImageCollection, places this image to the specific position and renames it.
</para>
            </summary>
            <param name="index">
		An Int32 value that is the position of a new image in this SvgImageCollection.

            </param>
            <param name="key">
		A String value that is the image name in this SvgImageCollection.

            </param>
            <param name="imageUri">
		A String value that specifies the path to the required image.

            </param>


        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.Insert(System.Int32,System.String,System.String,System.Type)">
            <summary>
                <para>Adds a new vector image to this SvgImageCollection and places it to the specific position.
</para>
            </summary>
            <param name="index">
		An Int32 value that specifies the index of a newly added image in this SvgImageCollection.

            </param>
            <param name="key">
		A String value that specifies the name of a newly added image in this SvgImageCollection.

            </param>
            <param name="resourceName">
		A String value that specifies the property name in a static project resource class.

            </param>
            <param name="resourceType">
		A Type that matches the project resource's class type.

            </param>


        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.Insert(System.Int32,System.String,DevExpress.Utils.Svg.SvgImage)">
            <summary>
                <para>Inserts a specific image to this SvgImageCollection and renames it.
</para>
            </summary>
            <param name="index">
		An Int32 value that is the added image's position inside this SvgImageCollection.

            </param>
            <param name="key">
		A String value that is the added image's name.

            </param>
            <param name="image">
		An SvgImage that is the image to be added.

            </param>


        </member>
        <member name="P:DevExpress.Utils.SvgImageCollection.Item(System.Int32)">
            <summary>
                <para>Returns the SvgImageCollection image located at the specific position.
</para>
            </summary>
            <param name="index">
		An Int32 value that is the returned image's position inside this SvgImageCollection.

            </param>
            <value>An SvgImage located at the specific position.
</value>


        </member>
        <member name="P:DevExpress.Utils.SvgImageCollection.Item(System.String)">
            <summary>
                <para>Returns the SvgImageCollection image with the specific name.
</para>
            </summary>
            <param name="key">
		A String value that is the image name.

            </param>
            <value>An SvgImage that has the target name.
</value>


        </member>
        <member name="P:DevExpress.Utils.SvgImageCollection.Keys">
            <summary>
                <para>Returns names for all images kept in this SvgImageCollection.
</para>
            </summary>
            <value>An IEnumerable object that stores all image names.
</value>


        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.Remove(DevExpress.Utils.Svg.SvgImage)">
            <summary>
                <para>Removes the specific image from this SvgImageCollection.
</para>
            </summary>
            <param name="image">
		An SvgImage to be removed from this SvgImageCollection.

            </param>
            <returns><b>true</b>, if the image was successfully removed; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.RemoveAt(System.String)">
            <summary>
                <para>Removes an image with the specific name from this SvgImageCollection.
</para>
            </summary>
            <param name="key">
		A String value that is the name of an image that needs to be removed.

            </param>


        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.RemoveAt(System.Int32)">
            <summary>
                <para>Removes an image with the specific index from this SvgImageCollection.
</para>
            </summary>
            <param name="index">
		An Int32 value that is the index of an image that needs to be removed.

            </param>


        </member>
        <member name="P:DevExpress.Utils.SvgImageCollection.ScaledImageSize">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.SetKeyName(DevExpress.Utils.Svg.SvgImage,System.String)">
            <summary>
                <para>Renames the target SvgImageCollection image.
</para>
            </summary>
            <param name="item">
		An SvgImage that is the image to be renamed.

            </param>
            <param name="key">
		A String value that is the new image name.

            </param>


        </member>
        <member name="M:DevExpress.Utils.SvgImageCollection.SetKeyName(System.Int32,System.String)">
            <summary>
                <para>Renames the target SvgImageCollection image.
</para>
            </summary>
            <param name="index">
		An Int32 value that specifies the position of an image that needs to be renamed.

            </param>
            <param name="key">
		A String value that is the new image name.

            </param>


        </member>
        <member name="T:DevExpress.Utils.FlyoutPanelButtonOptions">

            <summary>
                <para>Contains miscellaneous settings applied to a <see cref="T:DevExpress.Utils.FlyoutPanel"/>'s built-in button panel.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.FlyoutPanelButtonOptions.#ctor(DevExpress.Utils.FlyoutPanel)">
            <summary>
                <para>Initializes a new instance of the FlyoutPanelButtonOptions class with the specified settings.
</para>
            </summary>
            <param name="owner">
		A <see cref="T:DevExpress.Utils.FlyoutPanel"/> that owns the current FlyoutPanelButtonOptions.

            </param>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanelButtonOptions.AllowGlyphSkinning">
            <summary>
                <para>Gets or sets whether button glyphs are painted based on the <see cref="T:DevExpress.Utils.FlyoutPanel"/>'s foreground color.

</para>
            </summary>
            <value><b>true</b>, if button glyphs are painted based on the <see cref="T:DevExpress.Utils.FlyoutPanel"/>'s foreground color; otherwise, <b>false</b>.

</value>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanelButtonOptions.AppearanceButton">
            <summary>
                <para>Provides access to appearance settings used to paint the <see cref="T:DevExpress.Utils.FlyoutPanel"/>'s buttons in different visual states.
</para>
            </summary>
            <value>A <b>DevExpress.XtraEditors.ButtonsPanelControl.ButtonsPanelControlAppearance</b> object that stores appearance settings.
</value>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanelButtonOptions.ButtonPanelContentAlignment">
            <summary>
                <para>Gets or sets the alignment of buttons within the button panel.
</para>
            </summary>
            <value>A <b>System.Drawing.ContentAlignment</b> enumeration value that specifies the alignment of buttons within the button panel.
</value>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanelButtonOptions.ButtonPanelHeight">
            <summary>
                <para>Gets or sets the built-in button panel's height.
</para>
            </summary>
            <value>A <see cref="T:System.Int32"/> value specifying the button panel's height, in pixels.
</value>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanelButtonOptions.ButtonPanelLocation">
            <summary>
                <para>Gets or sets the location of the built-in button panel in the <see cref="T:DevExpress.Utils.FlyoutPanel"/>.
</para>
            </summary>
            <value>A <b>FlyoutPanelButtonPanelLocation</b> enumeration value specifying the location of the built-in button panel in the <see cref="T:DevExpress.Utils.FlyoutPanel"/>.
</value>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanelButtonOptions.Buttons">
            <summary>
                <para>Provides access to the collection of buttons displayed in the <see cref="T:DevExpress.Utils.FlyoutPanel"/>'s built-in button panel.
</para>
            </summary>
            <value>A <b>BaseButtonCollection</b> object representing a button collection.
</value>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanelButtonOptions.Images">
            <summary>
                <para>Gets or sets the source of images that can be displayed within buttons.
</para>
            </summary>
            <value>A <see cref="T:System.Object"/> that is an image collection providing images for buttons.
</value>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanelButtonOptions.Padding">
            <summary>
                <para>Gets or sets the amount of space around the button panel.
</para>
            </summary>
            <value>A <b>System.Windows.Forms.Padding</b> structure that specifies the amount of space around the button panel.

</value>


        </member>
        <member name="M:DevExpress.Utils.FlyoutPanelButtonOptions.Reset">
            <summary>
                <para>Resets settings applied to the built-in button panel to the default values. This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.FlyoutPanelButtonOptions.ShouldSerialize">
            <summary>
                <para>Tests whether the FlyoutPanelButtonOptions object should be persisted.
</para>
            </summary>
            <returns><b>true</b>, if the object should be persisted; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanelButtonOptions.ShowButtonPanel">
            <summary>
                <para>Gets or sets whether the built-in button panel is displayed in the <see cref="T:DevExpress.Utils.FlyoutPanel"/>.
</para>
            </summary>
            <value><b>true</b>, if the built-in button panel is displayed; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Utils.DPIAwareImageCollection">

            <summary>
                <para>Storage that serves as an external icon source for DevExpress controls. Automatically replaces default images with their larger counterparts at higher DPI settings.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.DPIAwareImageCollection.#ctor">
            <summary>
                <para>Initializes a new instance of the DPIAwareImageCollection class with the default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.DPIAwareImageCollection.#ctor(System.ComponentModel.IContainer)">
            <summary>
                <para>Initializes a new instance of the DPIAwareImageCollection class with the specified settings.
</para>
            </summary>
            <param name="container">
		An IContainer descendant that owns this newly created DPIAwareImageCollection object.

            </param>


        </member>
        <member name="M:DevExpress.Utils.DPIAwareImageCollection.Assign(DevExpress.Utils.ImageCollection)">
            <summary>
                <para>Copies all available property settings from the target DPIAwareImageCollection to this DPIAwareImageCollection.
</para>
            </summary>
            <param name="imageCollection">
		A DPIAwareImageCollection object whose settings should be copied to this DPIAwareImageCollection.

            </param>


        </member>
        <member name="M:DevExpress.Utils.DPIAwareImageCollection.BeginInit">
            <summary>
                <para>Begins the DPIAwareImageCollection initialization.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.DPIAwareImageCollection.Changed">
            <summary>
                <para>Occurs whenever the DPIAwareImageCollection changes its image set and allows you to respond to these changes.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.DPIAwareImageCollection.EndInit">
            <summary>
                <para>Finishes the DPIAwareImageCollection initialization.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.DPIAwareImageCollection.GetImage(System.String)">
            <summary>
                <para>Returns the image stored within this DPIAwareImageCollection.
</para>
            </summary>
            <param name="imageKey">
		A String value that specifies the image name.

            </param>
            <returns>An Image stored within this DPIAwareImageCollection.
</returns>


        </member>
        <member name="M:DevExpress.Utils.DPIAwareImageCollection.GetImage(System.Int32)">
            <summary>
                <para>Returns the image stored within this DPIAwareImageCollection.
</para>
            </summary>
            <param name="imageIndex">
		An Int32 value that specifies the returned image's position within this DPIAwareImageCollection.

            </param>
            <returns>An Image stored within this DPIAwareImageCollection.
</returns>


        </member>
        <member name="P:DevExpress.Utils.DPIAwareImageCollection.Images">
            <summary>
                <para>Provides access to default DPIAwareImageCollection images.
</para>
            </summary>
            <value>A <see cref="DefaultImageList"/> collection that stores default DPIAwareImageCollection images.
</value>


        </member>
        <member name="P:DevExpress.Utils.DPIAwareImageCollection.ImageSize">
            <summary>
                <para>Gets or sets the image size that should be retrieved at the default 96 DPI setting.

</para>
            </summary>
            <value>A Size structure that specifies the default image size.
</value>


        </member>
        <member name="P:DevExpress.Utils.DPIAwareImageCollection.Stream">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="P:DevExpress.Utils.DPIAwareImageCollection.TransparentColor">
            <summary>
                <para>Gets or sets the color to treat as transparent.
</para>
            </summary>
            <value>A Color object that specifies a color, which is not drawn when the image is rendered.
</value>


        </member>
        <member name="T:DevExpress.Utils.Taskbar.TaskbarAssistant">

            <summary>
                <para>Provides methods to manipulate an application taskbar button, Jump List and thumbnail preview.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Taskbar.TaskbarAssistant.#ctor">
            <summary>
                <para>Initializes a new instance of the TaskbarAssistant class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Taskbar.TaskbarAssistant.Assign(System.Windows.Forms.Control)">
            <summary>
                <para>Assigns the specified parent control to the current TaskbarAssistant component.
</para>
            </summary>
            <param name="parent">
		A <b>Control</b> to be assigned the current TaskbarAssistant component.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Taskbar.TaskbarAssistant.BeginUpdate">
            <summary>
                <para>Locks the TaskbarAssistant object by preventing visual updates until the <b>EndUpdate</b> method is called.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.Default">
            <summary>
                <para>Gets the default TaskbarAssistant component.
</para>
            </summary>
            <value>The default TaskbarAssistant component.
</value>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.DesignTimeManager">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="M:DevExpress.Utils.Taskbar.TaskbarAssistant.EndUpdate">
            <summary>
                <para>Unlocks the TaskbarAssistant object after a call to the <b>BeginUpdate</b> method and causes an immediate visual update.


</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.IconsAssembly">
            <summary>
                <para>Gets or sets the name of the assembly that contains icons (in resources) for Jump List tasks.
</para>
            </summary>
            <value>A string value that specifies the name of the assembly that contains icons (in resources) for Jump List tasks.
</value>


        </member>
        <member name="M:DevExpress.Utils.Taskbar.TaskbarAssistant.Initialize">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.JumpListCustomCategories">
            <summary>
                <para>Provides access to the collection of custom categories in the Jump List.
</para>
            </summary>
            <value>The collection of custom categories in the Jump List.
</value>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.JumpListKnownCategoryPosition">
            <summary>
                <para>Gets or sets the position of the <b>Frequent</b> or <b>Recent</b> category in the Jump List.
</para>
            </summary>
            <value>The position of the <b>Frequent</b> or <b>Recent</b> category in the Jump List.
</value>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.JumpListKnownCategoryVisibility">
            <summary>
                <para>Gets or sets which category (<b>Recent</b> or <b>Frequent</b>) is enabled in the Jump List.
</para>
            </summary>
            <value>A value that specifies which category (<b>Recent</b> or <b>Frequent</b>) is enabled in the Jump List.
</value>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.JumpListTasksCategory">
            <summary>
                <para>Provides access to the collection of items within the standard <b>Tasks</b> category in the Jump List.
</para>
            </summary>
            <value>The collection of items within the standard <b>Tasks</b> category in the Jump List.
</value>


        </member>
        <member name="F:DevExpress.Utils.Taskbar.TaskbarAssistant.MaxThumbnailButtonsCount">
            <summary>
                <para>The maximum number of thumbnail buttons in the live thumbnail preview. This field is equal to 7.

</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.OverlayIcon">
            <summary>
                <para>Gets or sets a small overlay icon displayed over the application icon.
</para>
            </summary>
            <value>A small overlay icon displayed over the application icon.
</value>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.ParentControl">
            <summary>
                <para>Gets or sets the Control to which the current TaskbarAssistant is bound.
</para>
            </summary>
            <value>A <b>System.Windows.Forms.Control</b> object to which the current TaskbarAssistant is bound.
</value>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.ProgressCurrentValue">
            <summary>
                <para>Gets or sets the current value of a progress indicator within an application's taskbar button.
</para>
            </summary>
            <value>The current value of a progress indicator within an application's taskbar button.

</value>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.ProgressMaximumValue">
            <summary>
                <para>Gets or sets the maximum value of a progress indicator within an application's taskbar button.

</para>
            </summary>
            <value>The maximum value of a progress indicator within an application's taskbar button.


</value>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.ProgressMode">
            <summary>
                <para>Gets or sets the type of progress indicator within the taskbar button.
</para>
            </summary>
            <value>A value that specifies the type of progress indicator within the taskbar button.
</value>


        </member>
        <member name="M:DevExpress.Utils.Taskbar.TaskbarAssistant.Refresh">
            <summary>
                <para>Updates the application taskbar button.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.ThumbnailButtons">
            <summary>
                <para>Provides access to the collection of buttons displayed in the toolbar in the live thumbnail preview.
</para>
            </summary>
            <value>A collection of toolbar buttons in the live thumbnail preview.
</value>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.ThumbnailClipRegion">
            <summary>
                <para>Gets or sets the region of the application window that is used as a thumbnail in the live thumbnail preview.
</para>
            </summary>
            <value>The region of the application window that is used as a thumbnail in the live thumbnail preview.
</value>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.TaskbarAssistant.UseSingleJumpListForAllAppInstances">
            <summary>
                <para>Gets or sets whether a single instance of the Jump List is used for all instances of the current application.
</para>
            </summary>
            <value><b>true</b>, if a single instance of the Jump List is used for all instances of the current application; <b>false</b> if every application instance uses its own Jump List instance.
</value>


        </member>
        <member name="T:DevExpress.Utils.ToolTipStyle">

            <summary>
                <para>Enumerates paint styles for tooltips.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipStyle.Default">
            <summary>
                <para>The style of regular tooltips is automatically determined by the Windows OS and currently selected Windows theme.
In Windows Vista and Windows 7, if no classic Windows theme is applied, tooltips are painted using the <see cref="F:DevExpress.Utils.ToolTipStyle.Windows7"/> style.
In other cases, tooltips are painted using the <see cref="F:DevExpress.Utils.ToolTipStyle.WindowsXP"/> style.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipStyle.Windows7">
            <summary>
                <para>Regular tooltips are painted as those in Windows 7 (this style is in effect when a program runs under Windows Vista or Windows 7, provided that no classic Windows theme is applied).
<para>

</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipStyle.WindowsXP">
            <summary>
                <para>Regular tooltips are painted as those in Windows XP.
<para>

</para>
</para>
            </summary>


        </member>
        <member name="T:DevExpress.DocumentView.PageBorderVisibility">

            <summary>
                <para>Lists the values used to specify the visibility of page borders.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.DocumentView.PageBorderVisibility.All">
            <summary>
                <para>Both standard borders and selection borders are painted around pages.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.DocumentView.PageBorderVisibility.AllWithoutSelection">
            <summary>
                <para>Only standard page borders are painted.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.DocumentView.PageBorderVisibility.None">
            <summary>
                <para>Borders are not painted around pages at all.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.ContextButtonBase">

            <summary>
                <para>A base class for context buttons.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ContextButtonBase.#ctor">
            <summary>
                <para>Initializes a new instance of the ContextButtonBase class with the default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.ContextButtonBase.AllowHtmlText">
            <summary>
                <para>Gets or sets whether the current button's caption is formatted using HTML tags.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value that specifies whether the current button's caption is formatted using HTML tags.
</value>


        </member>
        <member name="M:DevExpress.Utils.ContextButtonBase.BindCommand(System.Linq.Expressions.Expression`1,System.Object,System.Func`1)">
            <summary>
                <para>Uses the command selector to find an appropriate parameterized command in the source and binds it to this ContextButtonBase.

</para>
            </summary>
            <param name="commandSelector">
		An Expression that selects the appropriate command from the <i>source</i> object. 

            </param>
            <param name="source">
		An Object (typically, a ViewModel) where the <i>commandSelector</i> looks for the required command. 

            </param>
            <param name="queryCommandParameter">
		A Func delegate that passes the specific Object to the command as a parameter. 

            </param>
            <returns>An IDisposable object. Disposing of this object unbinds the command from this ContextButtonBase.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ContextButtonBase.BindCommand(System.Object,System.Func`1)">
            <summary>
                <para>Binds the specific parameterized command to this ContextButtonBase.
</para>
            </summary>
            <param name="command">
		An Object that is the command to be bound to this ContextButtonBase.

            </param>
            <param name="queryCommandParameter">
		A Func delegate that passes the specific Object to the <i>command</i> as a parameter. 

            </param>
            <returns>An IDisposable object. Disposing of this object unbinds the <i>command</i> from this ContextButtonBase.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ContextButtonBase.BindCommand``1(System.Linq.Expressions.Expression{System.Action`1},System.Object,System.Func{``0})">
            <summary>
                <para>Uses the command selector to find an appropriate parameterized command of the target type in the source and binds it to this ContextButtonBase.
</para>
            </summary>
            <param name="commandSelector">
		An Expression that selects the appropriate command from the <i>source</i> object. 

            </param>
            <param name="source">
		An Object (typically, a ViewModel) where the <i>commandSelector</i> looks for the required command. 

            </param>
            <param name="queryCommandParameter">
		A Func delegate that passes the specific Object to the command as a parameter. 

            </param>
            <returns>An IDisposable object. Disposing of this object unbinds the command from this ContextButtonBase.
</returns>


        </member>
        <member name="P:DevExpress.Utils.ContextButtonBase.Caption">
            <summary>
                <para>Gets or sets the current button's caption.
</para>
            </summary>
            <value>A string value that specifies the current button's caption.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextButtonBase.Height">
            <summary>
                <para>Gets or sets the button height.
</para>
            </summary>
            <value>An integer value that specifies the button height.
</value>


        </member>
        <member name="E:DevExpress.Utils.ContextButtonBase.HyperlinkClick">
            <summary>
                <para>Fires when a hyperlink in the button caption is clicked.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.ContextButtonBase.HyperLinkColor">
            <summary>
                <para>Gets or sets the color of the hyperlink text in the current button's caption.
</para>
            </summary>
            <value>A <b>Color</b> object that specifies the color of the hyperlink text in the current button's caption.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextButtonBase.MaxHeight">
            <summary>
                <para>Gets or sets the maximum height of the current button.
</para>
            </summary>
            <value>An integer value that specifies the maximum height of the current button.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextButtonBase.MaxWidth">
            <summary>
                <para>Gets or sets the maximum width of the current button.
</para>
            </summary>
            <value>An integer value that specifies the maximum width of the current button.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextButtonBase.Padding">
            <summary>
                <para>Gets or sets the amount of space around the current button.
</para>
            </summary>
            <value>A <b>Padding</b> structure that specifies the amount of space around the current button.
</value>


        </member>
        <member name="P:DevExpress.Utils.ContextButtonBase.Width">
            <summary>
                <para>Gets or sets the button width.
</para>
            </summary>
            <value>An integer value that specifies the button width.
</value>


        </member>
        <member name="T:DevExpress.Utils.Taskbar.ThumbnailButtonCollection">

            <summary>
                <para>Represents the collection of <see cref="T:DevExpress.Utils.Taskbar.ThumbnailButton"/> objects.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Taskbar.ThumbnailButtonCollection.#ctor">
            <summary>
                <para>Initializes a new instance of the ThumbnailButtonCollection class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Taskbar.ThumbnailButtonCollection.Dispose">
            <summary>
                <para>Disposes the current object and releases all the allocated resources.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.Taskbar.ThumbButtonClickEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.Utils.Taskbar.ThumbnailButton.Click"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Taskbar.ThumbButtonClickEventArgs.#ctor(System.IntPtr,DevExpress.Utils.Taskbar.ThumbnailButton)">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="handle">
		 

            </param>
            <param name="button">
		 

            </param>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.ThumbButtonClickEventArgs.Handle">
            <summary>
                <para>Gets the window handle that the <see cref="T:DevExpress.Utils.Taskbar.TaskbarAssistant"/> is bound to.
</para>
            </summary>
            <value>The window handle that the <see cref="T:DevExpress.Utils.Taskbar.TaskbarAssistant"/> is bound to.
</value>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.ThumbButtonClickEventArgs.ThumbButton">
            <summary>
                <para>Gets the <see cref="T:DevExpress.Utils.Taskbar.ThumbnailButton"/> that raised the event.
</para>
            </summary>
            <value>The <see cref="T:DevExpress.Utils.Taskbar.ThumbnailButton"/> that raised the event.

</value>


        </member>
        <member name="T:DevExpress.Utils.Taskbar.IJumpListItem">

            <summary>
                <para>This interface supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>

        </member>
        <member name="T:DevExpress.Utils.Taskbar.JumpListItemSeparator">

            <summary>
                <para>Represents the separator that separates tasks in the <see cref="P:DevExpress.Utils.Taskbar.TaskbarAssistant.JumpListTasksCategory"/>.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Taskbar.JumpListItemSeparator.#ctor">
            <summary>
                <para>Initializes a new instance of the JumpListItemSeparator class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Taskbar.JumpListItemSeparator.ToString">
            <summary>
                <para>Converts an object to its string representation.
</para>
            </summary>
            <returns>This method returns "Separator".
</returns>


        </member>
        <member name="T:DevExpress.Utils.Taskbar.JumpListItemTask">

            <summary>
                <para>Represents a task in a Jump List.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Taskbar.JumpListItemTask.#ctor">
            <summary>
                <para>Initializes a new instance of the JumpListItemTask class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Taskbar.JumpListItemTask.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the JumpListItemTask class with the specified settings.
</para>
            </summary>
            <param name="caption">
		A string value that is used to initialize the <see cref="P:DevExpress.Utils.Taskbar.JumpListItemTask.Caption"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.JumpListItemTask.Arguments">
            <summary>
                <para>Gets or sets the arguments for a command file specified in the <see cref="P:DevExpress.Utils.Taskbar.JumpListItemTask.Path"/> property.
</para>
            </summary>
            <value>The arguments for a command file specified in the <see cref="P:DevExpress.Utils.Taskbar.JumpListItemTask.Path"/> property.
</value>


        </member>
        <member name="M:DevExpress.Utils.Taskbar.JumpListItemTask.BindCommand(System.Object,System.Func`1)">
            <summary>
                <para>Binds the specific parameterized command to this JumpListItemTask.
</para>
            </summary>
            <param name="command">
		An Object that is the command to be bound to this JumpListItemTask. 

            </param>
            <param name="queryCommandParameter">
		A Func delegate that passes the specific Object to the <i>command</i> as a parameter. 

            </param>
            <returns>An IDisposable object. Disposing of this object unbinds the <i>command</i> from this JumpListItemTask.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Taskbar.JumpListItemTask.BindCommand(System.Linq.Expressions.Expression`1,System.Object,System.Func`1)">
            <summary>
                <para>Uses the command selector to find an appropriate parameterized command in the source and bind it to this JumpListItemTask.
</para>
            </summary>
            <param name="commandSelector">
		An Expression that selects the appropriate command from the <i>source</i> object. 

            </param>
            <param name="source">
		An Object (typically, a ViewModel) where the <i>commandSelector</i> looks for the required command.

            </param>
            <param name="queryCommandParameter">
		A Func delegate that passes the specific Object to the <i>command</i> as a parameter. 

            </param>
            <returns>An IDisposable object. Disposing of this object unbinds the <i>command</i> from this JumpListItemTask.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Taskbar.JumpListItemTask.BindCommand``1(System.Linq.Expressions.Expression{System.Action`1},System.Object,System.Func{``0})">
            <summary>
                <para>Uses the command selector to find an appropriate parameterized command of the target type in the source and bind it to this JumpListItemTask.
</para>
            </summary>
            <param name="commandSelector">
		An Expression that selects the appropriate command from the <i>source</i> object. 

            </param>
            <param name="source">
		An Object (typically, a ViewModel) where the <i>commandSelector</i> looks for the required command.

            </param>
            <param name="queryCommandParameter">
		A Func delegate that passes the specific Object to the <i>command</i> as a parameter. 

            </param>
            <returns>An IDisposable object. Disposing of this object unbinds the <i>command</i> from this JumpListItemTask.
</returns>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.JumpListItemTask.Caption">
            <summary>
                <para>Gets or sets a caption of the JumpListItemTask.
</para>
            </summary>
            <value>A caption of the JumpListItemTask.
</value>


        </member>
        <member name="E:DevExpress.Utils.Taskbar.JumpListItemTask.Click">
            <summary>
                <para>Fires when a task has been clicked.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Taskbar.JumpListItemTask.Clone">
            <summary>
                <para>Creates a new object that is a copy of the current JumpListItemTask.
</para>
            </summary>
            <returns>A new object that is a copy of the current JumpListItemTask.
</returns>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.JumpListItemTask.Collection">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.JumpListItemTask.Description">
            <summary>
                <para>Gets or sets the task description shown in the tooltip.
</para>
            </summary>
            <value>A String value that specifies the task description shown in the tooltip.
</value>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.JumpListItemTask.IconIndex">
            <summary>
                <para>Gets or sets the index of an icon contained in the image source specified by the <see cref="P:DevExpress.Utils.Taskbar.JumpListItemTask.IconPath"/> property or in the resources of the <see cref="P:DevExpress.Utils.Taskbar.TaskbarAssistant.IconsAssembly"/> assembly.
</para>
            </summary>
            <value>The index of an icon that is contained in the assembly resources.
</value>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.JumpListItemTask.IconPath">
            <summary>
                <para>Gets or sets the path to an assembly or an image that is used to specify the icon for the current task.
</para>
            </summary>
            <value>A string value that specifies the path to an assembly or an image that is used to specify the icon for the current task.
</value>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.JumpListItemTask.Path">
            <summary>
                <para>Gets or sets a path to a destination folder or a file that is launched by the JumpListItemTask.
</para>
            </summary>
            <value>A path to a destination folder or a file that is launched by the JumpListItemTask.
</value>


        </member>
        <member name="M:DevExpress.Utils.Taskbar.JumpListItemTask.RaiseClick">
            <summary>
                <para>Raises the <see cref="E:DevExpress.Utils.Taskbar.JumpListItemTask.Click"/> event.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.JumpListItemTask.ShowCommand">
            <summary>
                <para>Gets or sets whether the program starts minimized, maximized, or normally.
</para>
            </summary>
            <value>The <b>WindowShowCommand</b> enumeration value that specifies whether the program starts minimized, maximized, or normally. The default value is <b>WindowShowCommand.Normal</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.JumpListItemTask.WorkingDirectory">
            <summary>
                <para>Gets or sets the current directory for a process launched with a click on the current task.
</para>
            </summary>
            <value>The current directory for a process that is launched with a click on the JumpListItemTask.
</value>


        </member>
        <member name="T:DevExpress.Utils.Taskbar.JumpListCategory">

            <summary>
                <para>Represents a custom category in a Jump List.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Taskbar.JumpListCategory.#ctor">
            <summary>
                <para>Initializes a new instance of the JumpListCategory class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Taskbar.JumpListCategory.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the JumpListCategory class with the specified settings.
</para>
            </summary>
            <param name="caption">
		A string value that is used to initialize the <see cref="P:DevExpress.Utils.Taskbar.JumpListCategory.Caption"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.JumpListCategory.Caption">
            <summary>
                <para>Gets or sets a caption of the JumpListCategory.
</para>
            </summary>
            <value>A caption of the JumpListCategory.
</value>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.JumpListCategory.JumpItems">
            <summary>
                <para>Gets or sets a collection of tasks in the JumpListCategory.
</para>
            </summary>
            <value>A collection of tasks in the JumpListCategory.
</value>


        </member>
        <member name="T:DevExpress.Utils.Taskbar.JumpListCategoryCollection">

            <summary>
                <para>Represents the collection of <see cref="T:DevExpress.Utils.Taskbar.JumpListCategory"/> objects.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Taskbar.JumpListCategoryCollection.#ctor">
            <summary>
                <para>Initializes a new instance of the JumpListCategoryCollection class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Taskbar.JumpListCategoryCollection.Dispose">
            <summary>
                <para>Releases all resources used by elements of the JumpListCategoryCollection.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.DocumentView.Controls.DocumentViewerBase">

            <summary>
                <para>The base for classes that provide the Print Preview functionality in Windows Forms applications.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.#ctor">
            <summary>
                <para>Initializes a new instance of the DocumentViewerBase class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.AutoZoom">
            <summary>
                <para>Specifies whether or not the auto-zoom mode is enabled for the print preview.
</para>
            </summary>
            <value><b>true</b>, if the auto-zoom mode is enabled; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.BackColor">
            <summary>
                <para>Specifies the background color of a <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> structure, specifying the background color of the Document Viewer. 
</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.BackgroundImage">
            <summary>
                <para>This property is overridden and never used. To customize the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>'s background image, use custom skins.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="E:DevExpress.DocumentView.Controls.DocumentViewerBase.BackgroundImageChanged">
            <summary>
                <para>Hides the <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged"/> event of the base class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.BackgroundImageLayout">
            <summary>
                <para>This property is overridden and never used. To customize the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>'s background image and its layout, use custom skins.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="E:DevExpress.DocumentView.Controls.DocumentViewerBase.BackgroundImageLayoutChanged">
            <summary>
                <para>Hides the <see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged"/> event of the base class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.BorderStyle">
            <summary>
                <para>Specifies the border style of the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>
            <value>One of the <see cref="T:System.Windows.Forms.BorderStyle"/> enumeration values, representing the border style. 
</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.Continuous">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.DesignMode">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.Document">
            <summary>
                <para>Specifies the document assigned to the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>
            <value>An object implementing the <see cref="T:DevExpress.DocumentView.IDocument"/> interface. (Typically, this is a <see cref="T:DevExpress.XtraPrinting.Document"/> object.)
</value>


        </member>
        <member name="E:DevExpress.DocumentView.Controls.DocumentViewerBase.DocumentChanged">
            <summary>
                <para>Occurs when a <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/> receives a document change notification.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.DocumentIsCreating">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.DocumentIsEmpty">
            <summary>
                <para>Specifies whether or not the current document is empty.
</para>
            </summary>
            <value><b>true</b> if the document is empty; otherwise <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.ForeColor">
            <summary>
                <para>Specifies the foreground color of the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> structure, specifying the foreground color of the Document Viewer. 
</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.HandTool">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.IsMetric">
            <summary>
                <para>Gets or sets a value indicating whether or not to use the metric system for measurements in the print preview.
</para>
            </summary>
            <value><b>true</b>, to use the metric system for measurements made in the document's preview; otherwise, <b>false</b>. The default value is set to the <b>System.Globalization.RegionInfo.CurrentRegion.IsMetric</b> property value. 
</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.LookAndFeel">
            <summary>
                <para>Provides access to the settings that control the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>'s look and feel.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object that specifies the Document Viewer's look and feel.
</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.Margins">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.MaxPageColumns">
            <summary>
                <para>Gets the maximum number of columns for multi-page reports displayed within the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>
            <value>An integer value, specifying the maximum number of columns in a multi-page report.

</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.MaxPageRows">
            <summary>
                <para>Gets the maximum number of rows for a multi-page report displayed within the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>
            <value>An integer value, specifying the maximum number of rows in a multi-page report.

</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.MaxZoom">
            <summary>
                <para>Gets the maximum zoom factor of a report page within the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>
            <value>A <see cref="T:System.Single"/> value, specifying the maximum zoom factor of a report page within the Document Viewer.
</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.MinZoom">
            <summary>
                <para>Gets the minimum zoom factor of a report page within the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>
            <value>A <see cref="T:System.Single"/> value, specifying the minimum zoom factor of a report page within the Document Viewer.
</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.PageBorderColor">
            <summary>
                <para>Specifies the color used to draw borders around all pages in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> structure that specifies the color of page borders. 
</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.PageBorderVisibility">
            <summary>
                <para>Specifies whether or not borders should be painted around all and selected document pages in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.DocumentView.PageBorderVisibility"/> enumeration value, that specifies the visibility of page borders. 
</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.PageBorderWidth">
            <summary>
                <para>Specifies the width of the borders around all pages in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>
            <value>An integer value, specifying the width of the page borders.
</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.PopupForm">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.ResetBackColor">
            <summary>
                <para>Sets the <see cref="P:DevExpress.DocumentView.Controls.DocumentViewerBase.BackColor"/> property to <see cref="F:System.Drawing.Color.Empty"/>.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.ResetForeColor">
            <summary>
                <para>Sets the <see cref="P:DevExpress.DocumentView.Controls.DocumentViewerBase.ForeColor"/> property to <see cref="F:System.Drawing.Color.Empty"/>.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.ScrollPageDown">
            <summary>
                <para>Scrolls one page down.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.ScrollPageUp">
            <summary>
                <para>Scrolls one page up.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.SelectedPage">
            <summary>
                <para>Obtains the currently selected report page.
</para>
            </summary>
            <value>An object implementing the <see cref="T:DevExpress.DocumentView.IPage"/> interface, corresponding to the currently selected report page. (Typically, this is a <see cref="T:DevExpress.XtraPrinting.Page"/> object.)
</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.SelectedPageBorderColor">
            <summary>
                <para>Specifies the color of borders around the currently selected page in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> structure, specifying the border color of the selected page.
</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.SelectedPageBorderWidth">
            <summary>
                <para>Specifies the width of the borders around the currently selected page in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>
            <value>An integer value, specifying the width of the selected page's borders. 
</value>


        </member>
        <member name="E:DevExpress.DocumentView.Controls.DocumentViewerBase.SelectedPageChanged">
            <summary>
                <para>Occurs when the selected page within the print preview is changed.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.SelectedPageIndex">
            <summary>
                <para>Specifies the index of a currently selected page in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>
            <value>An integer value, specifying the index of the currently selected page. 
</value>


        </member>
        <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.SelectFirstPage">
            <summary>
                <para>Moves selection to the first page of a document in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.SelectLastPage">
            <summary>
                <para>Moves selection to the last page of a document in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.SelectNextPage">
            <summary>
                <para>Moves selection to the next page of a document in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.SelectPrevPage">
            <summary>
                <para>Moves selection to the previous page of a document in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.SetCursor(System.Windows.Forms.Cursor)">
            <summary>
                <para>Sets the cursor kind to be used within the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>
            <param name="cursor">
		A <see cref="T:System.Windows.Forms.Cursor"/> object, specifying the cursor kind. 

            </param>


        </member>
        <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.SetFocus">
            <summary>
                <para>Sets the input focus to the current instance of <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.SetPageView(DevExpress.XtraPrinting.PageViewModes)">
            <summary>
                <para>Determines the number of columns and rows used to display pages of a multipage report within a Print Preview.
</para>
            </summary>
            <param name="viewMode">
		A <see cref="T:DevExpress.XtraPrinting.PageViewModes"/> enumeration value.

            </param>


        </member>
        <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.SetPageView(System.Int32,System.Int32)">
            <summary>
                <para>Determines the number of columns and rows used to display pages of a multipage report within a Print Preview.
</para>
            </summary>
            <param name="columns">
		The number of columns. It will not exceed the <see cref="P:DevExpress.DocumentView.Controls.DocumentViewerBase.MaxPageColumns"/> property value. 

            </param>
            <param name="rows">
		The number of rows. It will not exceed the <see cref="P:DevExpress.DocumentView.Controls.DocumentViewerBase.MaxPageRows"/> property value. 

            </param>


        </member>
        <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.ShowPage(DevExpress.DocumentView.IPage)">
            <summary>
                <para>Shows the specified page in the Document Viewer.
</para>
            </summary>
            <param name="page">
		An object implementing the <see cref="T:DevExpress.DocumentView.IPage"/> interface. (Typically, this is a <see cref="T:DevExpress.XtraPrinting.Page"/> object.)

            </param>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.ShowPageMargins">
            <summary>
                <para>Specifies whether or not the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/> shows page margin lines.
</para>
            </summary>
            <value><b>true</b> to show page margin lines; otherwise <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.ShowToolTips">
            <summary>
                <para>Specifies whether or not to display hints in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>
            <value><b>true</b> to display hints; otherwise <b>false</b>. 
</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.Status">
            <summary>
                <para>Specifies whether or not the current document is empty or null.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value.
</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.TooltipBackColor">
            <summary>
                <para>Specifies the background color of all tooltips in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> structure, specifying the background color of the tooltips.
</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.TooltipFont">
            <summary>
                <para>Specifies the font of all tooltips in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Font"/> structure, specifying the text settings that include the font face, size, and style attributes. 
</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.TooltipForeColor">
            <summary>
                <para>Specifies the foreground color of all tooltips in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> structure, specifying the foreground color of the tooltips. 
</value>


        </member>
        <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.UpdatePageView">
            <summary>
                <para>For internal use. Redraws the current page view in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.UpdateScrollBars">
            <summary>
                <para>Redraws the control's scroll bars.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.ViewColumns">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <value>An integer value.
</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.ViewControl">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.ViewManager">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.ViewRows">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <value>An integer value.
</value>


        </member>
        <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.ViewWholePage">
            <summary>
                <para>Allows you to show the currently displayed page in full.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.DocumentView.Controls.DocumentViewerBase.Zoom">
            <summary>
                <para>Specifies the current zoom factor of a document page in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>
            <value>A <see cref="T:System.Single"/> value, specifying the current zoom factor of a document page.
</value>


        </member>
        <member name="E:DevExpress.DocumentView.Controls.DocumentViewerBase.ZoomChanged">
            <summary>
                <para>Occurs after the document current zoom factor has changed.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.ZoomIn">
            <summary>
                <para>Zooms in on the page currently displayed in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.DocumentView.Controls.DocumentViewerBase.ZoomOut">
            <summary>
                <para>Zooms out the page currently displayed in the <see cref="T:DevExpress.XtraPrinting.Preview.DocumentViewer"/>.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.Taskbar.Core.JumpListKnownCategoryPosition">

            <summary>
                <para>Defines the set of values that specify the position of the <b>Frequent</b>/<b>Recent</b> category in the Jump List.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.Taskbar.Core.JumpListKnownCategoryPosition.Bottom">
            <summary>
                <para>The <b>Frequent</b>/<b>Recent</b> category is displayed at the bottom of the Jump List.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Taskbar.Core.JumpListKnownCategoryPosition.Top">
            <summary>
                <para>The <b>Frequent</b>/<b>Recent</b> category is displayed at the top of the Jump List.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.Taskbar.JumpListCategoryItemCollection">

            <summary>
                <para>Represents the collection of items in a Jump List category.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Taskbar.JumpListCategoryItemCollection.#ctor">
            <summary>
                <para>Initializes a new instance of the JumpListCategoryItemCollection class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Taskbar.JumpListCategoryItemCollection.Dispose">
            <summary>
                <para>Releases all resources used by elements of the JumpListCategoryItemCollection.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.Taskbar.Core.TaskbarButtonProgressMode">

            <summary>
                <para>Contains values that specify the type of progress indicator to be displayed within taskbar buttons.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.Taskbar.Core.TaskbarButtonProgressMode.Error">
            <summary>
                <para>The same as the <b>Normal</b> mode, but the progress bar turns red to indicate that an error has occurred.
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Taskbar.Core.TaskbarButtonProgressMode.Indeterminate">
            <summary>
                <para>An indeterminate marquee-style progress indicator, which cycles repeatedly along the length of the taskbar button. 
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Taskbar.Core.TaskbarButtonProgressMode.NoProgress">
            <summary>
                <para>Stops displaying progress and returns the button to its regular state.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Taskbar.Core.TaskbarButtonProgressMode.Normal">
            <summary>
                <para>The determinate progress indicator that grows in size from left to right. Advance the progress value with the <see cref="P:DevExpress.Utils.Taskbar.TaskbarAssistant.ProgressCurrentValue"/> property.
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Taskbar.Core.TaskbarButtonProgressMode.Paused">
            <summary>
                <para>The same as the <b>Normal</b> mode, but the progress turns yellow to indicate that progress is currently stopped.
<para>

</para>
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.Taskbar.ThumbnailButton">

            <summary>
                <para>A button within the live thumbnail preview window.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Taskbar.ThumbnailButton.#ctor">
            <summary>
                <para>Initializes a new instance of the ThumbnailButton class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Taskbar.ThumbnailButton.#ctor(System.Drawing.Bitmap,System.String,System.IntPtr)">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="bitmap">
		 

            </param>
            <param name="tooltip">
		 

            </param>
            <param name="parentHandle">
		 

            </param>


        </member>
        <member name="E:DevExpress.Utils.Taskbar.ThumbnailButton.Click">
            <summary>
                <para>Fires when the button is clicked.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.ThumbnailButton.DismissOnClick">
            <summary>
                <para>Gets or sets whether a click on this button automatically closes the live thumbnail preview.
</para>
            </summary>
            <value><b>true</b>, if the live thumbnail preview is automatically closed on clicking the button; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.ThumbnailButton.Enabled">
            <summary>
                <para>Gets or sets whether the button is enabled.
</para>
            </summary>
            <value><b>true</b>, if the button is enabled; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.ThumbnailButton.Image">
            <summary>
                <para>Gets or sets the image displayed within the button.
</para>
            </summary>
            <value>The image displayed within the button.
</value>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.ThumbnailButton.IsInteractive">
            <summary>
                <para>Gets or sets whether the button's pressed state is visually indicated.
</para>
            </summary>
            <value><b>true</b>, if the button's pressed state is visually indicated; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.ThumbnailButton.Tooltip">
            <summary>
                <para>Gets or sets the button's tooltip.
</para>
            </summary>
            <value>The button's tooltip.
</value>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.ThumbnailButton.Visible">
            <summary>
                <para>Gets or sets whether the button is visible.
</para>
            </summary>
            <value><b>true</b>, if the button is visible; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.Taskbar.ThumbnailButton.WindowHandle">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="T:DevExpress.Utils.Win.PopupToolWindowAnimation">

            <summary>
                <para>Enumerates animation modes.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.Win.PopupToolWindowAnimation.Fade">
            <summary>
                <para>A fade animation effect.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Win.PopupToolWindowAnimation.Slide">
            <summary>
                <para>A slide-in animation effect.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.Win.PopupToolWindowAnchor">

            <summary>
                <para>Contains values that specify the position at which a <see cref="T:DevExpress.Utils.FlyoutPanel"/> is displayed relative to its owner.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.Win.PopupToolWindowAnchor.Bottom">
            <summary>
                <para>The panel, when displayed, is stretched along the owner's bottom edge.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Win.PopupToolWindowAnchor.Center">
            <summary>
                <para>The panel is displayed at the center of the owner. The display size is specified by the panel's <b>Size</b> property.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Win.PopupToolWindowAnchor.Left">
            <summary>
                <para>The panel, when displayed, is stretched along the owner's left edge.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Win.PopupToolWindowAnchor.Manual">
            <summary>
                <para>The panel is displayed at the position specified by the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.Location"/> property.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Win.PopupToolWindowAnchor.Right">
            <summary>
                <para>The panel, when displayed, is stretched along the owner's right edge.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Win.PopupToolWindowAnchor.Top">
            <summary>
                <para>The panel, when displayed, is stretched along the owner's top edge.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Win.PopupToolWindowAnchor.TopLeft">
            <summary>
                <para>The panel is displayed at the owner's top left corner in the original size specified by the <b>Size</b> property. When using the <see cref="F:DevExpress.Utils.Win.PopupToolWindowAnimation.Slide"/> animation effect, the panel slides from top to bottom.
Use the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.HorzIndent"/> and <see cref="P:DevExpress.Utils.FlyoutPanelOptions.VertIndent"/> properties to shift the display position inward from the top left corner.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Win.PopupToolWindowAnchor.TopRight">
            <summary>
                <para>The panel is displayed at the owner's top right corner in the original size specified by the <b>Size</b> property. When using the <see cref="F:DevExpress.Utils.Win.PopupToolWindowAnimation.Slide"/> animation effect, the panel slides from top to bottom.
Use the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.HorzIndent"/> and <see cref="P:DevExpress.Utils.FlyoutPanelOptions.VertIndent"/> properties to shift the display position inward from the top right corner.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.Taskbar.Core.JumpListKnownCategoryVisibility">

            <summary>
                <para>Defines the set of values that specify whether the <b>Frequent</b> category or <b>Recent</b> category is displayed in the Jump List, or none of them are displayed.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.Taskbar.Core.JumpListKnownCategoryVisibility.FrequentlyUsedFiles">
            <summary>
                <para>The <b>Frequent</b> Category is displayed in the Jump List. This category contains the list of files that are frequently opened with the current application.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Taskbar.Core.JumpListKnownCategoryVisibility.None">
            <summary>
                <para>Neither <b>Frequent</b> nor <b>Recent</b> category is displayed in the Jump List.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Taskbar.Core.JumpListKnownCategoryVisibility.RecentFiles">
            <summary>
                <para>The <b>Recent</b> Category is displayed in the Jump List. This category contains the list of files that are recently opened with the current application.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.FlyoutPanel">

            <summary>
                <para>The floating panel that is displayed and hidden using an animation effect. See Flyout Panel.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.FlyoutPanel.#ctor">
            <summary>
                <para>Initializes a new instance of the FlyoutPanel class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanel.Anchor">
            <summary>
                <para>This property is not supported by the FlyoutPanel class. 
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanel.AnimationRate">
            <summary>
                <para>Gets or sets the speed of the animation used to show and hide the FlyoutPanel.
</para>
            </summary>
            <value>An integer value specifying the rate of the animation used to show and hide the FlyoutPanel.
</value>


        </member>
        <member name="E:DevExpress.Utils.FlyoutPanel.ButtonChecked">
            <summary>
                <para>Fires when a check button within the button panel of this FlyoutPanel is checked.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.FlyoutPanel.ButtonClick">
            <summary>
                <para>Occurs when a button in the FlyoutPanel's built-in <b>button panel</b> is clicked.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.FlyoutPanel.ButtonUnchecked">
            <summary>
                <para>Fires when a check button within the button panel of this FlyoutPanel is unchecked.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanel.Dock">
            <summary>
                <para>This property is not supported by the FlyoutPanel class. 
Use the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.AnchorType"/> property to specify the position at which the panel is displayed.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanel.FlyoutPanelState">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanel.ForceCreateHandle">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="M:DevExpress.Utils.FlyoutPanel.GetCurrentObjectInfo">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Utils.FlyoutPanel.GetGlyphSkinningColor(DevExpress.XtraEditors.ButtonPanel.BaseButtonInfo)">
            <summary>
                <para>Returns a color for the glyph skinning feature. This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="info">
		A <b>BaseButtonInfo</b> object.

            </param>
            <returns>A <b>System.Drawing.Color</b> structure.
</returns>


        </member>
        <member name="E:DevExpress.Utils.FlyoutPanel.Hidden">
            <summary>
                <para>Fires after the panel has been hidden.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.FlyoutPanel.Hide">
            <summary>
                <para>This method is not supported by the FlyoutPanel class. Use the <see cref="M:DevExpress.Utils.FlyoutPanel.HidePopup"/> method instead.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.FlyoutPanel.HideBeakForm">
            <summary>
                <para>Hides the current FlyoutPanel displayed as a beak form using an animation effect specified by the <b>OptionsBeakForm.AnimationType</b> property.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.FlyoutPanel.HideBeakForm(System.Boolean)">
            <summary>
                <para>Hides the current FlyoutPanel displayed as a beak form immediately or using an animation effect specified by the <b>OptionsBeakForm.AnimationType</b> property.
</para>
            </summary>
            <param name="immediate">
		<b>true</b>, if the beak form should be hidden immediately; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="M:DevExpress.Utils.FlyoutPanel.HidePopup">
            <summary>
                <para>Hides the FlyoutPanel using an animation effect specified by the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.AnimationType"/> property.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.FlyoutPanel.HidePopup(System.Boolean)">
            <summary>
                <para>Hides the FlyoutPanel immediately or using an animation effect specified by the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.AnimationType"/> property.
</para>
            </summary>
            <param name="immediate">
		<b>true</b>, to hide the panel immediately; <b>false</b> to hide the panel using an animation effect.

            </param>


        </member>
        <member name="E:DevExpress.Utils.FlyoutPanel.Hiding">
            <summary>
                <para>Fires when a panel is about to be hidden.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanel.IsPopupOpen">
            <summary>
                <para>Gets whether the current FlyoutPanel is displayed.
</para>
            </summary>
            <value><b>true</b>, if the current FlyoutPanel is displayed; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanel.MinimumSize">
            <summary>
                <para>Gets or sets the minimum size of the FlyoutPanel.
</para>
            </summary>
            <value>A <see cref="Size"/> object that specifies the minimum size of the FlyoutPanel.
</value>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanel.Options">
            <summary>
                <para>Contains the FlyoutPanel's view and behavior options.
</para>
            </summary>
            <value>The FlyoutPanel's view and behavior options.
</value>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanel.OptionsBeakPanel">
            <summary>
                <para>Provides access to the settings applied to the current FlyoutPanel displayed as a beak form.
</para>
            </summary>
            <value>A <b>BeakPanelOptions</b> object representing the settings applied to the current FlyoutPanel displayed as a beak form.
</value>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanel.OptionsButtonPanel">
            <summary>
                <para>Provides access to the set of options applied to the built-in button panel.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.FlyoutPanelButtonOptions"/> object representing a set of options applied to the built-in button panel.
</value>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanel.OwnerControl">
            <summary>
                <para>Gets or sets the FlyoutPanel's owner, relative to which the panel is displayed.
</para>
            </summary>
            <value>The FlyoutPanel's owner, relative to which the panel is displayed.
</value>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanel.ParentForm">
            <summary>
                <para>Gets or sets the form that owns this FlyoutPanel.
</para>
            </summary>
            <value>A Form that owns this FlyoutPanel.
</value>


        </member>
        <member name="M:DevExpress.Utils.FlyoutPanel.Show">
            <summary>
                <para>This method is not supported by the FlyoutPanel class. Use the <see cref="M:DevExpress.Utils.FlyoutPanel.ShowPopup"/> method instead.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.FlyoutPanel.ShowBeakForm">
            <summary>
                <para>Displays the current FlyoutPanel as a beak form using an animation effect specified by the <b>OptionsBeakForm.AnimationType</b> property.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.FlyoutPanel.ShowBeakForm(System.Drawing.Point)">
            <summary>
                <para>Displays the current FlyoutPanel as a beak form at the specified position using an animation effect specified by the <b>OptionsBeakForm.AnimationType</b> property.
</para>
            </summary>
            <param name="location">
		A <b>System.Drawing.Point</b> object that specifies the location on the screen where the beak form should be displayed.

            </param>


        </member>
        <member name="M:DevExpress.Utils.FlyoutPanel.ShowBeakForm(System.Drawing.Point,System.Boolean)">
            <summary>
                <para>Displays the current FlyoutPanel as a beak form at the specified position using an animation effect specified by the <b>OptionsBeakForm.AnimationType</b> property or immediately.
</para>
            </summary>
            <param name="location">
		A <b>System.Drawing.Point</b> object that specifies the location on the screen where the beak form should be displayed.

            </param>
            <param name="immediate">
		<b>true</b>, if the beak form should be displayed immediately; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="M:DevExpress.Utils.FlyoutPanel.ShowBeakForm(System.Drawing.Point,System.Boolean,System.Windows.Forms.Control)">
            <summary>
                <para>Displays the current FlyoutPanel as a beak form at the specified position using an animation effect specified by the <b>OptionsBeakForm.AnimationType</b> property or immediately.
</para>
            </summary>
            <param name="location">
		A <b>System.Drawing.Point</b> object that specifies the location on the screen where the beak form should be displayed.

            </param>
            <param name="immediate">
		<b>true</b>, if the beak form should be displayed immediately; otherwise, <b>false</b>.

            </param>
            <param name="ownerControl">
		A <b>Control</b> that owns the current FlyoutPanel.

            </param>


        </member>
        <member name="M:DevExpress.Utils.FlyoutPanel.ShowBeakForm(System.Boolean)">
            <summary>
                <para>Displays the current FlyoutPanel as a beak form immediately or using an animation effect specified by the <b>OptionsBeakForm.AnimationType</b> property.
</para>
            </summary>
            <param name="immediate">
		<b>true</b>, if the beak form should be displayed immediately; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="M:DevExpress.Utils.FlyoutPanel.ShowBeakForm(System.Drawing.Point,System.Boolean,System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
                <para>Displays the current FlyoutPanel as a beak form at the specified position with the specified offset using an animation effect specified by the <b>OptionsBeakForm.AnimationType</b> property or immediately.
</para>
            </summary>
            <param name="location">
		A <b>System.Drawing.Point</b> structure that specifies the location on the screen where the beak form should be displayed.

            </param>
            <param name="immediate">
		<b>true</b>, if the beak form should be displayed immediately; otherwise, <b>false</b>.

            </param>
            <param name="ownerControl">
		A <b>Control</b> that owns the current FlyoutPanel.

            </param>
            <param name="offset">
		A <b>System.Drawing.Point</b> structure by which the location specified with the <i>loc</i> parameter should be translated.

            </param>


        </member>
        <member name="M:DevExpress.Utils.FlyoutPanel.ShowBeakForm(System.Drawing.Point,System.Boolean,System.Windows.Forms.Control,System.Drawing.Point,DevExpress.Utils.IFlyoutPanelPopupController)">
            <summary>
                <para>Displays the current FlyoutPanel as a beak form at the specified position with the specified offset using an animation effect specified by the <b>OptionsBeakForm.AnimationType</b> property or immediately.
</para>
            </summary>
            <param name="location">
		A <b>System.Drawing.Point</b> structure that specifies the location on the screen where the beak form should be displayed.

            </param>
            <param name="immediate">
		<b>true</b>, if the beak form should be displayed immediately; otherwise, <b>false</b>.

            </param>
            <param name="ownerControl">
		A <b>Control</b> that owns the current FlyoutPanel.

            </param>
            <param name="offset">
		A <b>System.Drawing.Point</b> structure by which the location specified with the <i>loc</i> parameter should be translated.

            </param>
            <param name="controller">
		An <b>IFlyoutPanelPopupController</b> implementation that specifies the beak form behavior. For instance, whether to automatically close the opened beak form on a mouse move depending on the mouse coordinates relative to the form location.

            </param>


        </member>
        <member name="M:DevExpress.Utils.FlyoutPanel.ShowBeakForm(System.Drawing.Rectangle,System.Drawing.Point,System.Boolean,System.Windows.Forms.Control,System.Drawing.Point,DevExpress.Utils.IFlyoutPanelPopupController)">
            <summary>
                <para>Displays the current FlyoutPanel as a beak form relative to the specified rectangle with the specified offset using an animation effect specified by the <b>OptionsBeakForm.AnimationType</b> property or immediately.

</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.Rectangle"/> structure that specifies an area on the screen relative to which a beak form should be displayed.

            </param>
            <param name="location">
		A <see cref="T:System.Drawing.Point"/> object that specifies the location on the screen where a beak form should be displayed if the <i>rect</i> parameter is <b>Rectangle.Empty</b>.

            </param>
            <param name="immediate">
		<b>true</b>, if the beak form should be displayed immediately; otherwise, <b>false</b>.

            </param>
            <param name="ownerControl">
		A <b>Control</b> that owns the current FlyoutPanel.

            </param>
            <param name="offset">
		A <b>System.Drawing.Point</b> structure by which the location specified with the <i>loc</i> parameter should be translated.

            </param>
            <param name="controller">
		An <b>IFlyoutPanelPopupController</b> implementation that specifies the beak form behavior. For instance, whether to automatically close the opened beak form on a mouse move depending on the mouse coordinates relative to the form location.



            </param>


        </member>
        <member name="M:DevExpress.Utils.FlyoutPanel.ShowBeakForm(System.Drawing.Rectangle,System.Drawing.Point)">
            <summary>
                <para>Displays the current FlyoutPanel as a beak form relative to the specified rectangle using an animation effect specified by the <b>OptionsBeakForm.AnimationType</b> property.

</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.Rectangle"/> structure that specifies an area on the screen relative to which a beak form should be displayed.

            </param>
            <param name="location">
		A <see cref="T:System.Drawing.Point"/> object that specifies the location on the screen where a beak form should be displayed if the <i>rect</i> parameter is <b>Rectangle.Empty</b>.

            </param>


        </member>
        <member name="M:DevExpress.Utils.FlyoutPanel.ShowBeakForm(System.Drawing.Rectangle)">
            <summary>
                <para>Displays the current FlyoutPanel as a beak form relative to the specified rectangle using an animation effect specified by the <b>OptionsBeakForm.AnimationType</b> property.

</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.Rectangle"/> structure that specifies an area on the screen relative to which a beak form should be displayed.

            </param>


        </member>
        <member name="E:DevExpress.Utils.FlyoutPanel.Showing">
            <summary>
                <para>Fires when the panel is about to be displayed.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.FlyoutPanel.Shown">
            <summary>
                <para>Fires after the panel has been displayed.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.FlyoutPanel.ShowPopup">
            <summary>
                <para>Displays the panel at the position specified by the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.AnchorType"/> property using an animation effect specified  by the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.AnimationType"/> property.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.FlyoutPanel.ShowPopup(System.Boolean)">
            <summary>
                <para>Displays the panel at the position specified by the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.AnchorType"/> property immediately or using an animation effect specified  by the <see cref="P:DevExpress.Utils.FlyoutPanelOptions.AnimationType"/> property.
</para>
            </summary>
            <param name="immediate">
		<b>true</b>, if the panel is displayed immediately (without an animation); otherwise, <b>false</b>.

            </param>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanel.ToolTipController">
            <summary>
                <para>Gets or sets the tooltip controller component that controls the appearance, position and content of tooltips displayed by buttons in the button panel.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipController"/> object which controls the appearance and behavior of tooltips displayed by buttons in the button panel.
</value>


        </member>
        <member name="P:DevExpress.Utils.FlyoutPanel.Visible">
            <summary>
                <para>This property is not supported by the FlyoutPanel class. Use the <see cref="M:DevExpress.Utils.FlyoutPanel.ShowPopup"/> and <see cref="M:DevExpress.Utils.FlyoutPanel.HidePopup"/> methods to control the panel visibility.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="T:DevExpress.Utils.Controls.IXtraResizableControl">

            <summary>
                <para>Defines an interface a control that can be implemented to provide layout information to a Layout Control.

</para>
            </summary>

        </member>
        <member name="E:DevExpress.Utils.Controls.IXtraResizableControl.Changed">
            <summary>
                <para>The control that implements this interface must fire the <b>Changed</b> event when specific settings that affect the layout information have been changed, and the Layout Control must update the layout as a result.

</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.Controls.IXtraResizableControl.IsCaptionVisible">
            <summary>
                <para>When implemented by a control, specifies whether a text label should be visible by default when this control is added to a Layout Control.
</para>
            </summary>
            <value><b>true</b> if a text label should be visible by default when the control is added to a Layout Control; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.Controls.IXtraResizableControl.MaxSize">
            <summary>
                <para>When implemented by a control, specifies its default maximum size which is in effect when the control is displayed within a Layout Control.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Size"/> structure that specifies the control's default maximum size.
</value>


        </member>
        <member name="P:DevExpress.Utils.Controls.IXtraResizableControl.MinSize">
            <summary>
                <para>When implemented by a control, specifies its default minimum size which is in effect when the control is displayed within a Layout Control.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Size"/> structure that specifies the control's default minimum size.
</value>


        </member>
        <member name="T:DevExpress.Utils.GroupElementLocation">

            <summary>
                <para>Contains values that specify how an element is displayed relative to a text label within a group control.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.GroupElementLocation.AfterText">
            <summary>
                <para>Displays an element after a text label.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.GroupElementLocation.BeforeText">
            <summary>
                <para>Displays an element before a text label.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.GroupElementLocation.Default">
            <summary>
                <para>Specifies the default position of an element relative to a text label.
Currently, the <b>Default</b> option is equivalent to the <b>BeforeText</b> option.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.Controls.ExpandButtonMode">

            <summary>
                <para>Contains values that specify the direction of an expand button's arrow.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.Controls.ExpandButtonMode.Inverted">
            <summary>
                <para>Indicates the normal direction of an expand/collapse button's arrow.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Controls.ExpandButtonMode.Normal">
            <summary>
                <para>Indicates the inverted direction of an expand/collapse button's arrow.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.SimpleControl">

            <summary>
                <para>Represents the base class for controls which support the DevExpress look and feel mechanism.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.SimpleControl.#ctor">
            <summary>
                <para>Initializes a new instance of the SimpleControl class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.SimpleControl.BorderStyle">
            <summary>
                <para>Gets or sets the style used to draw the control's border.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraEditors.Controls.BorderStyles"/> enumeration member specifying the border style of the control.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SimpleControl.LookAndFeel">
            <summary>
                <para>Gets an object containing the control's look and feel settings.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object containing the control's look and feel settings.
</value>


        </member>
        <member name="T:DevExpress.Skins.SkinManager">

            <summary>
                <para>Manages skins for DevExpress controls.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Skins.SkinManager.#ctor">
            <summary>
                <para>Initializes a new instance of the SkinManager class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Skins.SkinManager.AllowArrowDragIndicators">
            <summary>
                <para>Gets or sets whether dragging-and-dropping columns/fields is indicated using arrow indicators.

</para>
            </summary>
            <value><b>true</b> if dragging-and-dropping columns is indicated using arrow indicators; otherwise, <b>false</b>.

</value>


        </member>
        <member name="P:DevExpress.Skins.SkinManager.AllowCopyScaledInfoFromTemplate">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Skins.SkinManager.AllowFormSkins">
            <summary>
                <para>Gets whether the form title bar skinning feature is enabled.
</para>
            </summary>
            <value><b>true</b> if the form title bar skinning feature is enabled; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Skins.SkinManager.AllowMdiFormSkins">
            <summary>
                <para>Gets whether the form title bar skinning feature is enabled for MDI child windows.
</para>
            </summary>
            <value><b>true</b> if the form title bar skinning feature for MDI child windows is enabled; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Skins.SkinManager.AllowWindowGhosting">
            <summary>
                <para>Gets or sets whether the window ghosting feature is enabled for skinned XtraForm objects.
</para>
            </summary>
            <value>A Boolean value that specifies whether the window ghosting feature is enabled. The default value is <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.ApplyOfficeColorScheme(DevExpress.Skins.ISkinProvider)">
            <summary>
                <para> </para>
            </summary>
            <param name="provider">
		 
            </param>


        </member>
        <member name="P:DevExpress.Skins.SkinManager.CurrentPaintControl">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Skins.SkinManager.Default">
            <summary>
                <para>Provides access to the default skin manager.
</para>
            </summary>
            <value>A SkinManager object that represents the default skin manager.
</value>


        </member>
        <member name="F:DevExpress.Skins.SkinManager.DefaultSkinName">
            <summary>
                <para>Gets the name of the default skin, which is used by controls by default.
</para>
            </summary>
            <returns>A string that specifies the name of the default skin.
</returns>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.DisableFormSkins">
            <summary>
                <para>Disables the title bar skinning feature for DevExpress forms and message boxes.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.DisableMdiFormSkins">
            <summary>
                <para>Disables the title bar skinning feature for MDI child DevExpress forms.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.DisableSkinHitTesting">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.EnableFormSkins">
            <summary>
                <para>Enables the title bar skinning feature for DevExpress forms and message boxes.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.EnableFormSkinsIfNotVista">
            <summary>
                <para>Enables the title bar skinning feature for DevExpress forms and message boxes, if the application is running under Microsoft Windows XP.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.EnableMdiFormSkins">
            <summary>
                <para>Enables the title bar skinning feature for MDI child DevExpress forms.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.EnableSkinHitTesting">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.GetRuntimeSkins">
            <summary>
                <para>Returns a list of the currently available skins.
</para>
            </summary>
            <returns>A list of the currently available skins.
</returns>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.GetSkin(System.Object)">
            <summary>
                <para>This method supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="productId">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.GetSkin(System.Object,DevExpress.Skins.ISkinProvider)">
            <summary>
                <para>This method supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="productId">
		 

            </param>
            <param name="provider">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.GetSkin(System.Object,System.String)">
            <summary>
                <para>This method supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="productId">
		 

            </param>
            <param name="skinName">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.GetSkin(DevExpress.Skins.SkinProductId,DevExpress.Skins.ISkinProvider)">
            <summary>
                <para>This method supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="productId">
		 


            </param>
            <param name="provider">
		 


            </param>
            <returns> 

</returns>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.GetSkinElement(DevExpress.Skins.SkinProductId,DevExpress.Skins.ISkinProvider,System.String)">
            <summary>
                <para>Returns a skin element with the specified name of a control in the specified product displayed using the specified skin provider.
</para>
            </summary>
            <param name="productId">
		A <b>DevExpress.Skins.SkinProductId</b> enumeration value that specifies the product in which the required element is contained.


            </param>
            <param name="provider">
		An object implementing the <b>DevExpress.Skins.ISkinProvider</b> interface that is used for painting controls.

            </param>
            <param name="elementName">
		A String value that specifies the name of the required element.

            </param>
            <returns>A <b>DevExpress.Skins.SkinElement</b> object that represents a skin element of a control.
</returns>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.GetValidSkinName(System.String)">
            <summary>
                <para>This method returns the specified skin name, if it's valid. If the skin name is invalid, the default skin's name is returned.
</para>
            </summary>
            <param name="skinName">
		A string that specifies the skin name to test.

            </param>
            <returns>A string that specifies the valid skin name.
</returns>


        </member>
        <member name="P:DevExpress.Skins.SkinManager.HitElements">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Skins.SkinManager.HitPoint">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="F:DevExpress.Skins.SkinManager.InvalidPoint">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="P:DevExpress.Skins.SkinManager.IsSkinHitTestingEnabled">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Skins.SkinManager.OpenedInSkinEditor">
            <summary>
                <para>Gets or sets whether the current SkinManager is opened in the Skin Editor.
</para>
            </summary>
            <value><b>true</b> if the current SkinManager is opened in the Skin Editor; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.RegisterAssembly(System.Reflection.Assembly)">
            <summary>
                <para>This method supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="assembly">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.RegisterSkin(DevExpress.Skins.SkinCreator)">
            <summary>
                <para>Registers the specified skin for runtime use. This method supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="creator">
		 

            </param>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.RegisterSkin(System.Object,DevExpress.Skins.SkinBuilder)">
            <summary>
                <para>This method supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="productId">
		 

            </param>
            <param name="skinBuilder">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.RegisterSkin(System.Object,DevExpress.Skins.SkinBuilder,System.String)">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="productId">
		 

            </param>
            <param name="skinBuilder">
		 

            </param>
            <param name="template">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.RegisterSkinAssembly(System.Reflection.Assembly)">
            <summary>
                <para>This method supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="asm">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.RegisterSkins(System.Reflection.Assembly)">
            <summary>
                <para>This method supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="assembly">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.SetDPIAware">
            <summary>
                <para>Sets the current process as dots per inch (dpi) aware.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Skins.SkinManager.Skins">
            <summary>
                <para>Gets the collection of skins that are currently available for use in DevExpress controls.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Skins.SkinContainerCollection"/> collection that stores available skins.
</value>


        </member>
        <member name="T:DevExpress.Utils.Controls.ControlBase">

            <summary>
                <para>Represents the base class for most controls and editors available in the DevExpress Editors Library, along with their descendants.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Controls.ControlBase.#ctor">
            <summary>
                <para>Initializes a new instance of the ControlBase class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Controls.ControlBase.ClearPreferredSizeCache(System.Windows.Forms.Control)">
            <summary>
                <para>Clears the value of the size of a rectangular area, into which the specified control can fit, from the program cache. 
</para>
            </summary>
            <param name="control">
		A Control whose size should be removed from the cache.


            </param>


        </member>
        <member name="M:DevExpress.Utils.Controls.ControlBase.ClearPrefferedSizeCache(System.Windows.Forms.Control)">
            <summary>
                <para>Clears the value of the size of a rectangular area, into which the specified control can fit, from the program cache.

</para>
            </summary>
            <param name="control">
		A <see cref="T:System.Windows.Forms.Control"/> object.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Controls.ControlBase.GetCanProcessMnemonic(System.Windows.Forms.Control)">
            <summary>
                <para>Returns the value of the control's <b>CanProcessMnemonic</b> property, if this property exists.
</para>
            </summary>
            <param name="control">
		The control whose <b>CanProcessMnemonic</b> property value is returned.

            </param>
            <returns>The value of the control's <b>CanProcessMnemonic</b> property. <b>true</b> if the property doesn't exist.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Controls.ControlBase.GetUnvalidatedControl(System.Windows.Forms.Control)">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="control">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Utils.Controls.ControlBase.GetValidationCanceled(System.Windows.Forms.Control)">
            <summary>
                <para>Returns the <b>ValidationCancelled</b> property value of a control, if this property exists.
</para>
            </summary>
            <param name="control">
		A <see cref="T:System.Object"/> that represents the control whose <b>ValidationCancelled</b> property value is returned.


            </param>
            <returns><b>true</b> if the validation is cancelled; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Utils.Controls.ControlBase.GetValidationCanceledSource(System.Windows.Forms.Control)">
            <summary>
                <para>Returns the parent container of the specified control that canceled validation.
</para>
            </summary>
            <param name="control">
		The control whose ancestor canceled validation.

            </param>
            <returns>The parent container control that canceled validation.
</returns>


        </member>
        <member name="P:DevExpress.Utils.Controls.ControlBase.IsRightToLeft">
            <summary>
                <para>Gets whether the ControlBase's visual elements are actually aligned to support locales using right-to-left fonts.
</para>
            </summary>
            <value><b>true</b>, if ControlBase's visual elements are actually aligned to support locales using right-to-left fonts; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Utils.Controls.ControlBase.IsUnvalidatedControlIsParent(System.Windows.Forms.Control)">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="control">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Utils.Controls.ControlBase.ResetValidationCanceled(System.Windows.Forms.Control)">
            <summary>
                <para>Resets the control's <b>ValidationCancelled</b> property. This method supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="control">
		A control.

            </param>


        </member>
        <member name="T:DevExpress.XtraEditors.XtraScrollableControl">

            <summary>
                <para>The skinnable panel with built-in auto-scroll functionality.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.XtraScrollableControl.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.XtraScrollableControl"/> class.

</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.AllowTouchScroll">
            <summary>
                <para>Gets or sets if end-users can scroll the XtraScrollableControl by dragging its content.
</para>
            </summary>
            <value><b>true</b>, if end-users can scroll the XtraScrollableControl by dragging its content; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.AlwaysScrollActiveControlIntoView">
            <summary>
                <para>Gets or sets whether the <b>XtraScrollableControl</b>'s view is automatically scrolled to completely display the active control if it is invisible, or partly visible.


</para>
            </summary>
            <value><b>true</b> to automatically scroll the view to completely display the active control if it is invisible, or partly visible; otherwise, <b>false</b>.


</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.Appearance">
            <summary>
                <para>Gets the control's appearance settings.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that contains appearance settings used to paint the control.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.AutoScroll">
            <summary>
                <para>Gets or sets whether the <b>XtraScrollableControl</b> enables the user to scroll to any controls placed outside its visible boundaries.

</para>
            </summary>
            <value><b>true</b> to enable auto-scrolling; otherwise, <b>false</b>.

</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.AutoScrollMargin">
            <summary>
                <para>Gets or sets the size of the auto-scroll margin.

</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Size"/> object that represents the height and width of the auto-scroll margin, in pixels.

</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.AutoScrollMinSize">
            <summary>
                <para>Gets or sets the minimum size of the auto-scroll.

</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Size"/> object that represents the minimum height and width of the area through which a user can scroll, in pixels.

</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.AutoScrollPosition">
            <summary>
                <para>Gets or sets the location of the auto-scroll position.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Point"/> structure that represents the auto-scroll position, in pixels.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.BackColor">
            <summary>
                <para>Gets or sets the control's background color.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> value that specifies the control's background color.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.DisplayRectangle">
            <summary>
                <para>Gets the rectangle that represents the <b>XtraScrollableControl</b>'s view area.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Rectangle"/> object that represents the control's view area.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.EnableIXtraResizeableControlInterfaceProxy">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.FireScrollEventOnMouseWheel">
            <summary>
                <para>Gets or sets whether the <see cref="E:DevExpress.XtraEditors.XtraScrollableControl.Scroll"/> event fires when using the mouse wheel.
</para>
            </summary>
            <value><b>true</b> if the <see cref="E:DevExpress.XtraEditors.XtraScrollableControl.Scroll"/> event fires when using the mouse wheel; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.ForeColor">
            <summary>
                <para>Gets or sets the control's foreground color.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> value that specifies the control's foreground color.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.HorizontalScroll">
            <summary>
                <para>Gets the horizontal scrollbar's settings.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraEditors.HorizontalScroll"/> object that represents the horizontal scrollbar.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.InvertTouchScroll">
            <summary>
                <para>Gets or sets whether the scroll direction is inverted when scrolling on touch devices via the pan gesture.
</para>
            </summary>
            <value><b>true</b>, if the scroll direction is inverted; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.LookAndFeel">
            <summary>
                <para>Provides access to the Look And Feel and Skinning settings of this XtraScrollableControl object.

</para>
            </summary>
            <value>A <see cref="ContainerUserLookAndFeel"/> object that stores look-and-feel settings.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraScrollableControl.ResetBackColor">
            <summary>
                <para>Resets the <see cref="P:DevExpress.XtraEditors.XtraScrollableControl.BackColor"/> property back to its default value.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.XtraEditors.XtraScrollableControl.Scroll">
            <summary>
                <para>Fires when the control's view is scrolled.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.ScrollBarSmallChange">
            <summary>
                <para>Gets or sets the distance the <b>XtraScrollableControl</b>'s view is scrolled when the user clicks one of the scroll buttons.


</para>
            </summary>
            <value>An integer value that specifies the distance, in pixels, the control's view is scrolled when the user clicks one of the scroll buttons.


</value>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)">
            <summary>
                <para>Scrolls the <b>XtraScrollableControl</b>'s view to display the specified control.
</para>
            </summary>
            <param name="activeControl">
		A <see cref="T:System.Windows.Forms.Control"/> descendant that represents the control which is invisible, or partly visible, within the <b>XtraScrollableControl</b>.


            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraScrollableControl.SetAutoScrollMargin(System.Int32,System.Int32)">
            <summary>
                <para>Specifies the size of the auto-scroll margin.
</para>
            </summary>
            <param name="x">
		An integer value that specifies the width of the auto-scroll margin, in pixels.

            </param>
            <param name="y">
		An integer value that specifies the height of the auto-scroll margin, in pixels.

            </param>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.Text">
            <summary>
                <para>Gets or sets the text associated with the control.
</para>
            </summary>
            <value>A string value that specifies the text associated with the control.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.VerticalScroll">
            <summary>
                <para>Gets the vertical scrollbar's settings.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraEditors.VerticalScroll"/> object that represents the vertical scrollbar.
</value>


        </member>
        <member name="T:DevExpress.Utils.ToolTipType">

            <summary>
                <para>Enumerates tooltip types that are supported by controls.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipType.Default">
            <summary>
                <para>The default tooltip type. The actual tooltip type is determined by a control.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipType.Standard">
            <summary>
                <para>A regular tooltip that consists of the title and contents regions.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipType.SuperTip">
            <summary>
                <para>A <see cref="T:DevExpress.Utils.SuperToolTip"/> that supports multiple text and image regions.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.SuperToolTip">

            <summary>
                <para>Represents a tooltip that supports multiple text and image regions.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.SuperToolTip.#ctor">
            <summary>
                <para>Initializes a new instance of the SuperToolTip class with the default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.SuperToolTip.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                <para>Initializes a new instance of the SuperToolTip class with the specified settings.
</para>
            </summary>
            <param name="info">
		A SerializationInfo object.

            </param>
            <param name="context">
		A StreamingContext object.

            </param>


        </member>
        <member name="P:DevExpress.Utils.SuperToolTip.AllowHtmlText">
            <summary>
                <para>Gets or sets whether HTML formatting is allowed in the current SuperToolTip object.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> value that specifies whether HTML formatting is allowed in the tooltip.
</value>


        </member>
        <member name="P:DevExpress.Utils.SuperToolTip.Appearance">
            <summary>
                <para>This property is not supported by the SuperToolTip class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="M:DevExpress.Utils.SuperToolTip.Assign(DevExpress.Utils.SuperToolTip)">
            <summary>
                <para>Copies the settings and contents of the specified tooltip to the current object.
</para>
            </summary>
            <param name="source">
		A source <see cref="T:DevExpress.Utils.SuperToolTip"/> object.

            </param>


        </member>
        <member name="M:DevExpress.Utils.SuperToolTip.Clone">
            <summary>
                <para>Returns a copy of the current object.
</para>
            </summary>
            <returns>A SuperToolTip object which is a copy of the current tooltip.
</returns>


        </member>
        <member name="F:DevExpress.Utils.SuperToolTip.DefaultDistanceBetweenItems">
            <summary>
                <para>The default distance between items. This constant specifies the default value for the <see cref="P:DevExpress.Utils.SuperToolTip.DistanceBetweenItems"/> property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Utils.SuperToolTip.DistanceBetweenItems">
            <summary>
                <para>Specifies the distance between tooltip items.
</para>
            </summary>
            <value>An integer which specifies the distance between tooltip items.
</value>


        </member>
        <member name="P:DevExpress.Utils.SuperToolTip.FixedTooltipWidth">
            <summary>
                <para>Gets or sets whether the tooltip's width is fixed or automatically adjusted to fit the tooltip's contents entirely.
</para>
            </summary>
            <value><b>true</b> if the tooltip's width is fixed; <b>false</b> if the tooltip is automatically resized to fit its contents entirely.
</value>


        </member>
        <member name="P:DevExpress.Utils.SuperToolTip.IsEmpty">
            <summary>
                <para>Gets whether the SuperToolTip is empty.
</para>
            </summary>
            <value><b>true</b> if the SuperToolTip doesn't contain any information to display; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.SuperToolTip.Items">
            <summary>
                <para>Gets the collection of items which constitute the SuperToolTip object.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipItemCollection"/> which contains items displayed by the SuperToolTip object.
</value>


        </member>
        <member name="P:DevExpress.Utils.SuperToolTip.LookAndFeel">
            <summary>
                <para>This property is not supported by this class. 
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.
</value>


        </member>
        <member name="P:DevExpress.Utils.SuperToolTip.MaxWidth">
            <summary>
                <para>Specifies the tooltip window's maximum width, in pixels.
</para>
            </summary>
            <value>An integer value that specifies the tooltip window's maximum width.
</value>


        </member>
        <member name="P:DevExpress.Utils.SuperToolTip.OwnerAllowHtmlText">
            <summary>
                <para>Gets whether HTML formatting in a SuperToolTip is allowed by the ToolTipController object that displays the current SuperToolTip object.
</para>
            </summary>
            <value><b>true</b> if HTML formatting is allowed by the ToolTipController object that displays the current SuperToolTip object; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.SuperToolTip.Padding">
            <summary>
                <para>Gets or sets padding within the SuperToolTip.

</para>
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Padding"/> object that specifies the tooltip's internal spacing characteristics.
</value>


        </member>
        <member name="P:DevExpress.Utils.SuperToolTip.RightToLeft">
            <summary>
                <para>Gets or sets whether tooltip's visual elements are aligned to support locales using right-to-left fonts.
</para>
            </summary>
            <value><b>true</b>, if tooltip's visual elements are aligned to support locales using right-to-left fonts; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Utils.SuperToolTip.Setup(DevExpress.Utils.SuperToolTipSetupArgs)">
            <summary>
                <para>Creates tooltip items based on the specified setup information.
</para>
            </summary>
            <param name="info">
		A <see cref="T:DevExpress.Utils.SuperToolTipSetupArgs"/> object which contains initialization information.

            </param>


        </member>
        <member name="M:DevExpress.Utils.SuperToolTip.ToString">
            <summary>
                <para>Gets the textual representation of the current SuperToolTip.
</para>
            </summary>
            <returns>A string which specifies the tooltip's textual representation.
</returns>


        </member>
        <member name="T:DevExpress.XtraEditors.FormBorderEffect">

            <summary>
                <para>Enumerates border effects for forms and dialogs.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.FormBorderEffect.Default">
            <summary>
                <para>The default border adorning effect, applied as follows:
<para>
For the <see cref="T:DevExpress.XtraEditors.XtraForm"/>, a shadow is displayed in the "McSkin" skin. No adorning effect is applied in other skins.
</para>
<para>
For the <see cref="T:DevExpress.XtraBars.Ribbon.RibbonForm"/>, a shadow is displayed in the following skins: "Office 2013", "Office 2013 Dark Gray", "Office 2013 Light Gray", and "McSkin". No adorning effect is applied in other skins.
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FormBorderEffect.Glow">
            <summary>
                <para>A glow effect. The default colors can be changed via the <see cref="P:DevExpress.XtraEditors.XtraForm.ActiveGlowColor"/> and <see cref="P:DevExpress.XtraEditors.XtraForm.InactiveGlowColor"/> properties.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FormBorderEffect.None">
            <summary>
                <para>No adorning effect.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FormBorderEffect.Shadow">
            <summary>
                <para>Displays a shadow around the form. 
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.Drawing.ProgressAnimationMode">

            <summary>
                <para>Contains values that specify how progress is indicated on progress bar controls.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.Drawing.ProgressAnimationMode.Cycle">
            <summary>
                <para>A control repeatedly scrolls the block from one edge to another.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Drawing.ProgressAnimationMode.Default">
            <summary>
                <para>The same, as the <see cref="F:DevExpress.Utils.Drawing.ProgressAnimationMode.Cycle"/> option.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Drawing.ProgressAnimationMode.PingPong">
            <summary>
                <para>A control scrolls the block from one edge to another, by moving the block back when it reaches any control's edge.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.Menu.DXPopupMenu">

            <summary>
                <para>A base class for popup menus in DevExpress .NET controls.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Menu.DXPopupMenu.#ctor">
            <summary>
                <para>Initializes a new instance of the DXPopupMenu class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXPopupMenu.#ctor(System.EventHandler)">
            <summary>
                <para>Initializes a new instance of the DXPopupMenu class with the specified handler for the <see cref="E:DevExpress.Utils.Menu.DXSubMenuItem.BeforePopup"/> event.
</para>
            </summary>
            <param name="beforePopup">
		An event handler that will be invoked when the menu is about to be displayed. This value is assigned to the <see cref="E:DevExpress.Utils.Menu.DXSubMenuItem.BeforePopup"/> event.

            </param>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXPopupMenu.Alignment">
            <summary>
                <para>Gets or sets the menu's alignment relative to the mouse cursor.
</para>
            </summary>
            <value>The <b>ContentAlignment</b> value that is the alignment of the menu relative to the mouse cursor.

</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXPopupMenu.AllowToolbarTransparency">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="E:DevExpress.Utils.Menu.DXPopupMenu.CloseUp">
            <summary>
                <para>Fires after the menu has been closed.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXPopupMenu.ContextOwnerControl">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXPopupMenu.GenerateCloseUpEvent">
            <summary>
                <para>Fires a specific event that typically occurs after the menu has disappeared.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXPopupMenu.GetIsRightToLeft">
            <summary>
                <para>Returns whether the menu items are actually aligned to support locales using right-to-left fonts.
</para>
            </summary>
            <returns><b>true</b>, if menu items are actually aligned to support locales using right-to-left fonts; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXPopupMenu.HidePopup">
            <summary>
                <para>Hides the current popup menu.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXPopupMenu.IsDesignTimeMenu">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXPopupMenu.IsRightToLeft">
            <summary>
                <para>Gets or sets whether the menu is aligned to support locales using right-to-left fonts.
</para>
            </summary>
            <value><b>true</b>, if the menu is aligned to support locales using right-to-left fonts; otherwise, <b>false</b>.
</value>


        </member>
        <member name="E:DevExpress.Utils.Menu.DXPopupMenu.ItemClick">
            <summary>
                <para>Fires whenever a user clicks any item that belongs to this DXPopupMenu.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Menu.DXPopupMenu.MaxSubMenuLevel">
            <summary>
                <para>Specifies the maximum menu depth for all DXPopupMenu descendants in this solution. Menus with a nesting level that exceeds this value will be unable to expand certain sub-menu items.
</para>
            </summary>
            <returns>An Int32 value that is the maximum menu depth for all DXPopupMenu descendants in this solution.
</returns>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXPopupMenu.MenuViewType">
            <summary>
                <para>Gets or sets how the current menu is displayed (as a menu, floating bar or <see cref="T:DevExpress.XtraBars.Ribbon.RibbonMiniToolbar"/>).
</para>
            </summary>
            <value>A MenuViewType value
</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXPopupMenu.MultiColumn">
            <summary>
                <para>Gets or sets whether items in this DXPopupMenu can be displayed in multiple columns.

</para>
            </summary>
            <value>A <see cref="DefaultBoolean"/> enumerator value that specifies whether or not items in this DXPopupMenu can be displayed in multiple columns.

</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXPopupMenu.OptionsMultiColumn">
            <summary>
                <para>Provides access to the set of properties that manage multi-column item layout in this DXPopupMenu.

</para>
            </summary>
            <value>A <see cref="OptionsMultiColumn"/> object that stores properties which manage multi-column item layout in this DXPopupMenu.

</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXPopupMenu.OwnerPopup">
            <summary>
                <para>Gets or sets the object that created the current popup menu. For internal use.
</para>
            </summary>
            <value>An object that created the current popup menu.
</value>


        </member>
        <member name="E:DevExpress.Utils.Menu.DXPopupMenu.PopupHide">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXPopupMenu.ShowCaption">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXPopupMenu.ShowItemToolTips">
            <summary>
                <para>Gets or sets whether this DXPopupMenu items should display their hints.
</para>
            </summary>
            <value><b>true</b>, if these DXPopupMenu items should display their hints; otherwise, <b>false</b>.

</value>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXPopupMenu.ShowPopup(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
                <para>Displays the DXPopupMenu at specific coordinates.
</para>
            </summary>
            <param name="control">
		A Control that is the parent control for this DXPopupMenu.

            </param>
            <param name="location">
		A Point structure that specifies the menu location.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXPopupMenu.ShowPopup(System.Windows.Forms.Control,System.Drawing.Point,System.Boolean)">
            <summary>
                <para> </para>
            </summary>
            <param name="control">
		 
            </param>
            <param name="location">
		 
            </param>
            <param name="isContextMenu">
		 
            </param>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXPopupMenu.ToolbarHideDistance">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXPopupMenu.ToolbarRowCount">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="T:DevExpress.Utils.Menu.DXSubMenuItem">

            <summary>
                <para>Specifies a submenu.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Menu.DXSubMenuItem.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the DXSubMenuItem class with the specified caption.
</para>
            </summary>
            <param name="caption">
		A string that specifies the text displayed by the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXSubMenuItem.#ctor">
            <summary>
                <para>Initializes a new instance of the DXSubMenuItem class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXSubMenuItem.#ctor(System.String,System.EventHandler)">
            <summary>
                <para>Initializes a new instance of the DXSubMenuItem class with the specified caption and the handler for the <see cref="E:DevExpress.Utils.Menu.DXSubMenuItem.BeforePopup"/> event.
</para>
            </summary>
            <param name="caption">
		A string that specifies the text displayed by the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption"/> property.

            </param>
            <param name="beforePopup">
		A handler for the <see cref="E:DevExpress.Utils.Menu.DXSubMenuItem.BeforePopup"/> event.

            </param>


        </member>
        <member name="E:DevExpress.Utils.Menu.DXSubMenuItem.BeforePopup">
            <summary>
                <para>Allows you to dynamically provide sub-items for the current DXSubMenuItem object.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXSubMenuItem.GenerateBeforePopupEvent">
            <summary>
                <para>Invokes the event handler assigned to the <see cref="E:DevExpress.Utils.Menu.DXSubMenuItem.BeforePopup"/> event.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXSubMenuItem.Items">
            <summary>
                <para>Gets a collection of items displayed when the current submenu is expanded.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.Menu.DXMenuItemCollection"/> object which contains menu items displayed when the submenu is expanded.
</value>


        </member>
        <member name="T:DevExpress.Utils.Menu.DXMenuItem">

            <summary>
                <para>Represents a regular menu item.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuItem.#ctor">
            <summary>
                <para>Initializes a new instance of the DXMenuItem class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuItem.#ctor(System.String,System.EventHandler,System.Drawing.Image)">
            <summary>
                <para>Initializes a new instance of the DXMenuItem class with the specified caption, image and <b>Click</b> event handler
</para>
            </summary>
            <param name="caption">
		A string that specifies the text displayed by the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption"/> property.

            </param>
            <param name="click">
		An event handler that will be invoked when the menu item is clicked or selected. This value is assigned to the <see cref="E:DevExpress.Utils.Menu.DXMenuItem.Click"/> event.

            </param>
            <param name="image">
		An image that is displayed within the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Image"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuItem.#ctor(System.String,System.EventHandler)">
            <summary>
                <para>Initializes a new instance of the DXMenuItem class with the specified caption and <b>Click</b> event handler
</para>
            </summary>
            <param name="caption">
		A string that specifies the text displayed by the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption"/> property.

            </param>
            <param name="click">
		An event handler that will be invoked when the menu item is clicked or selected. This value is assigned to the <see cref="E:DevExpress.Utils.Menu.DXMenuItem.Click"/> event.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuItem.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the DXMenuItem class with the specified caption.
</para>
            </summary>
            <param name="caption">
		A string that specifies the text displayed by the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuItem.#ctor(System.String,System.EventHandler,System.Drawing.Image,System.Drawing.Image)">
            <summary>
                <para>Initializes a new instance of the DXMenuItem class with the specified settings.
</para>
            </summary>
            <param name="caption">
		A string used to initialize the item's <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption"/> property.

            </param>
            <param name="click">
		A handler for the <see cref="E:DevExpress.Utils.Menu.DXMenuItem.Click"/> event.

            </param>
            <param name="image">
		An Image used to initialize the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Image"/> property.

            </param>
            <param name="imageDisabled">
		An Image used to initialize the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.ImageDisabled"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuItem.#ctor(System.String,System.EventHandler,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image)">
            <summary>
                <para>Initializes a new instance of the DXMenuItem class with the specified settings.
</para>
            </summary>
            <param name="caption">
		A string used to initialize the item's <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption"/> property.

            </param>
            <param name="click">
		A handler for the <see cref="E:DevExpress.Utils.Menu.DXMenuItem.Click"/> event.

            </param>
            <param name="image">
		An Image used to initialize the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Image"/> property.

            </param>
            <param name="imageDisabled">
		An Image used to initialize the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.ImageDisabled"/> property.

            </param>
            <param name="largeImage">
		An Image used to initialize the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.LargeImage"/> property.

            </param>
            <param name="largeImageDisabled">
		An Image used to initialize the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.LargeImageDisabled"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuItem.#ctor(System.String,System.EventHandler,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,System.Drawing.Image,DevExpress.Utils.Menu.DXMenuItemPriority)">
            <summary>
                <para>Initializes a new instance of the DXMenuItem class with the specified settings.
</para>
            </summary>
            <param name="caption">
		A string that specifies the text displayed by the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption"/> property.

            </param>
            <param name="click">
		An event handler that will be invoked when the menu item is clicked or selected. This value is assigned to the <see cref="E:DevExpress.Utils.Menu.DXMenuItem.Click"/> event.

            </param>
            <param name="image">
		An image that is displayed within the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Image"/> property.

            </param>
            <param name="imageDisabled">
		An Image used to initialize the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.ImageDisabled"/> property.

            </param>
            <param name="largeImage">
		An Image used to initialize the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.LargeImage"/> property.

            </param>
            <param name="largeImageDisabled">
		An Image used to initialize the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.LargeImageDisabled"/> property.

            </param>
            <param name="priority">
		A <b>DXMenuItemPriority</b> enumeration value that specifies the display priority for the current item in a <see cref="T:DevExpress.XtraBars.Ribbon.RadialMenu"/>. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Priority"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuItem.#ctor(System.String,System.EventHandler,DevExpress.Utils.Menu.DXMenuItemPriority)">
            <summary>
                <para>Initializes a new instance of the DXMenuItem class with the specified caption, display priority and <b>Click</b> event handler.
</para>
            </summary>
            <param name="caption">
		A string that specifies the text displayed by the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption"/> property.

            </param>
            <param name="click">
		An event handler that will be invoked when the menu item is clicked or selected. This value is assigned to the <see cref="E:DevExpress.Utils.Menu.DXMenuItem.Click"/> event.

            </param>
            <param name="priority">
		A <b>DXMenuItemPriority</b> enumeration value that specifies the display priority for the current item in a <see cref="T:DevExpress.XtraBars.Ribbon.RadialMenu"/>. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Priority"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuItem.#ctor(System.String,DevExpress.Utils.Menu.DXMenuItemPriority)">
            <summary>
                <para>Initializes a new instance of the DXMenuItem class with the specified caption and display priority.
</para>
            </summary>
            <param name="caption">
		A string that specifies the text displayed by the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption"/> property.

            </param>
            <param name="priority">
		A <b>DXMenuItemPriority</b> enumeration value that specifies the display priority for the current item in a <see cref="T:DevExpress.XtraBars.Ribbon.RadialMenu"/>. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Priority"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.AllowGlyphSkinning">
            <summary>
                <para>Gets or sets whether the current DXMenuItem icon should be painted in the DXMenuItem's foreground color.

</para>
            </summary>
            <value><b>true</b>, if the current DXMenuItem icon should be painted in the DXMenuItem's foreground color; otherwise, <b>false</b>.

</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.Appearance">
            <summary>
                <para>Provides access to the appearance settings used to paint the DXMenuItem in the normal state.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that contains the appearance settings.
</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.AppearanceDisabled">
            <summary>
                <para>Provides access to the appearance settings used to paint the DXMenuItem in the disbled state.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that contains the appearance settings.
</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.AppearanceHovered">
            <summary>
                <para>Provides access to the appearance settings used to paint the DXMenuItem in the hovered state.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that contains the appearance settings.
</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.BeginGroup">
            <summary>
                <para>Gets or sets whether the current menu item starts a group.
</para>
            </summary>
            <value><b>true</b> if the menu item starts a group; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuItem.BindCommand(System.Object,System.Func`1)">
            <summary>
                <para>Binds the specific parameterized command to this DXMenuItem.
</para>
            </summary>
            <param name="command">
		An Object that is the command to be bound to this DXMenuItem. 

            </param>
            <param name="queryCommandParameter">
		A Func delegate that passes the specific Object to the <i>command</i> as a parameter. 

            </param>
            <returns>An IDisposable object. Disposing of this object unbinds the <i>command</i> from this DXMenuItem.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuItem.BindCommand(System.Linq.Expressions.Expression`1,System.Object,System.Func`1)">
            <summary>
                <para>Uses the command selector to find an appropriate parameterized command in the source and bind it to this DXMenuItem.
</para>
            </summary>
            <param name="commandSelector">
		An Expression that selects the appropriate command from the <i>source</i> object. 

            </param>
            <param name="source">
		An Object (typically, a ViewModel) where the <i>commandSelector</i> looks for the required command.

            </param>
            <param name="queryCommandParameter">
		A Func delegate that passes the specific Object to the <i>command</i> as a parameter. 

            </param>
            <returns>An IDisposable object. Disposing of this object unbinds the <i>command</i> from this DXMenuItem.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuItem.BindCommand``1(System.Linq.Expressions.Expression{System.Action`1},System.Object,System.Func{``0})">
            <summary>
                <para>Uses the command selector to find an appropriate parameterized command of the target type in the source and bind it to this DXMenuItem.
</para>
            </summary>
            <param name="commandSelector">
		An Expression that selects the appropriate command from the <i>source</i> object. 

            </param>
            <param name="source">
		An Object (typically, a ViewModel) where the <i>commandSelector</i> looks for the required command.

            </param>
            <param name="queryCommandParameter">
		A Func delegate that passes the specific Object to the <i>command</i> as a parameter. 

            </param>
            <returns>An IDisposable object. Disposing of this object unbinds the <i>command</i> from this DXMenuItem.
</returns>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.Caption">
            <summary>
                <para>Specifies the text displayed within the menu item.
</para>
            </summary>
            <value>A string that specifies the text displayed within the menu item.
</value>


        </member>
        <member name="E:DevExpress.Utils.Menu.DXMenuItem.Click">
            <summary>
                <para>Occurs when the menu item's functionality needs to be invoked.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.CloseMenuOnClick">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.CloseOwnerMenuOnlyOnClick">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.Collection">
            <summary>
                <para>Gets the menu item collection which owns the current menu item.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.Menu.DXMenuItemCollection"/> collection which owns the current menu item.
</value>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuItem.Dispose">
            <summary>
                <para>Releases all the resources used by the current object.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.Enabled">
            <summary>
                <para>Gets or sets whether the menu item is enabled.
</para>
            </summary>
            <value><b>true</b> if the menu item is enabled; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuItem.GenerateClickEvent">
            <summary>
                <para>Invokes the event handler assigned to the <see cref="E:DevExpress.Utils.Menu.DXMenuItem.Click"/> event.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuItem.GetImage(DevExpress.Utils.Design.ISvgPaletteProvider)">
            <summary>
                <para>Returns the actual raster image displayed by this DXMenuItem.
</para>
            </summary>
            <param name="palette">
		An ISvgPaletteProvider that colorizes SVG icons depending on the currently applied DevExpress skin.

            </param>
            <returns>An Image displayed by this DXMenuItem.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuItem.GetIsRightToLeft">
            <summary>
                <para>Returns whether the current menu item is actually aligned to support locales using right-to-left fonts.
</para>
            </summary>
            <returns><b>true</b>, if the current item is actually aligned to support locales using right-to-left fonts; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.HasImage">
            <summary>
                <para>Returns whether or not this DXMenuItem has an image assigned.
</para>
            </summary>
            <value><b>true</b>, if this DXMenuItem has an image assigned; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.Image">
            <summary>
                <para>Gets or sets an image displayed within the menu item,
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Image"/> object that specifies the image displayed within the menu item.
</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.ImageDisabled">
            <summary>
                <para>Gets or sets an image representing the menu item in the disabled state.
</para>
            </summary>
            <value>An Image object representing the menu item in the disabled state.
</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.ImageOptions">
            <summary>
                <para>Provides access to settings that allow you to set up raster and vector icons for this DXMenuItem.
</para>
            </summary>
            <value>An <see cref="DXMenuItemImageOptions"/> object that stores image-related options.
</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.IsRightToLeft">
            <summary>
                <para>Gets or sets whether the menu item is aligned to support locales using right-to-left fonts.
</para>
            </summary>
            <value><b>true</b>, if the menu item is aligned to support locales using right-to-left fonts; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.LargeImage">
            <summary>
                <para>Gets or sets a large image for the current menu item.
</para>
            </summary>
            <value>An Image object that is a large image for the current menu item.
</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.LargeImageDisabled">
            <summary>
                <para>Gets or sets a large image displayed in the current menu item when it is in the disabled state.
</para>
            </summary>
            <value>An Image object that is a large image displayed in the current menu item when it is in the disabled state.
</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.Owner">
            <summary>
                <para>Gets or sets the object that owns this DXMenuItem.
</para>
            </summary>
            <value>An object that owns this DXMenuItem.
</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.Priority">
            <summary>
                <para>Gets or sets the display priority for the current item in a <see cref="T:DevExpress.XtraBars.Ribbon.RadialMenu"/>.
</para>
            </summary>
            <value>A <b>DXMenuItemPriority</b> enumeration value that specifies the display priority for the current item in a <see cref="T:DevExpress.XtraBars.Ribbon.RadialMenu"/>.
</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.Shortcut">
            <summary>
                <para>Gets or sets a shortcut displayed within the menu item
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Shortcut"/> value that specifies a shortcut.
</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.ShowHotKeyPrefix">
            <summary>
                <para>Gets or sets whether the ampersand ('&amp;') character, when it is found in the item's <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption"/>, acts as a shortcut prefix, or it is displayed as is.
</para>
            </summary>
            <value><b>true</b> if the ampersand ('&amp;') character, when it is found in the item's <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption"/>, acts as a shortcut prefix; <b>false</b> if the ampersand ('&amp;') is displayed as is.
</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.SuperTip">
            <summary>
                <para>Gets or sets a super tip for this DXMenuItem.
</para>
            </summary>
            <value>A <see cref="SuperToolTip"/> object assigned to this DXMenuItem.
</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.SvgImage">
            <summary>
                <para>Gets or sets the vector image that is this DXMenuItem icon.
</para>
            </summary>
            <value>An SvgImage object that is the vector image assigned to this DXMenuItem.
</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.Tag">
            <summary>
                <para>Gets or sets the data associated with the menu item.
</para>
            </summary>
            <value>An object that contains the information which is associated with the menu item.
</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.Visible">
            <summary>
                <para>Gets or sets whether the menu item is visible.
</para>
            </summary>
            <value><b>true</b> if the menu item is visible; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Utils.DefaultToolTipController">

            <summary>
                <para>Manages tooltips for all DevExpress controls.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.DefaultToolTipController.#ctor">
            <summary>
                <para>Initializes a new instance of the DefaultToolTipController class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.DefaultToolTipController.#ctor(System.ComponentModel.IContainer)">
            <summary>
                <para>Initializes a new instance of the DefaultToolTipController class with the specified container.
</para>
            </summary>
            <param name="container">
		An object that implements the <see cref="T:System.ComponentModel.IContainer"/> interface.

            </param>


        </member>
        <member name="P:DevExpress.Utils.DefaultToolTipController.DefaultController">
            <summary>
                <para>Returns the object which represents the Default ToolTipController.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipController"/> object which represents the Default ToolTipController.
</value>


        </member>
        <member name="M:DevExpress.Utils.DefaultToolTipController.GetAllowHtmlText(System.Windows.Forms.Control)">
            <summary>
                <para>Returns whether HTML formatting is enabled in tooltips for the specified control.
</para>
            </summary>
            <param name="control">
		A control for which this tooltip setting is to be obtained.

            </param>
            <returns>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> value that specifies whether HTML formatting is supported in tooltips for the specified control.
</returns>


        </member>
        <member name="M:DevExpress.Utils.DefaultToolTipController.GetSuperTip(System.Windows.Forms.Control)">
            <summary>
                <para>Gets a <see cref="T:DevExpress.Utils.SuperToolTip"/> object associated with the specified control.
</para>
            </summary>
            <param name="control">
		A control whose SuperToolTip object is to be obtained.


            </param>
            <returns>A <see cref="T:DevExpress.Utils.SuperToolTip"/> object associated with the control.
</returns>


        </member>
        <member name="M:DevExpress.Utils.DefaultToolTipController.GetTitle(System.Windows.Forms.Control)">
            <summary>
                <para>Gets a regular tooltip's title displayed within the specified control.

</para>
            </summary>
            <param name="control">
		A control whose tooltip's title is to be obtained.


            </param>
            <returns>A string representing a regular tooltip's title for the control.

</returns>


        </member>
        <member name="M:DevExpress.Utils.DefaultToolTipController.GetToolTip(System.Windows.Forms.Control)">
            <summary>
                <para>Gets a regular tooltip for the specified control.
</para>
            </summary>
            <param name="control">
		A control whose tooltip should be obtained.


            </param>
            <returns>A string representing a regular tooltip for the control.

</returns>


        </member>
        <member name="M:DevExpress.Utils.DefaultToolTipController.GetToolTipIconType(System.Windows.Forms.Control)">
            <summary>
                <para>Gets the type of the icon displayed within the specified control's regular tooltip.

</para>
            </summary>
            <param name="control">
		A control whose tooltip's icon type is to be obtained.



            </param>
            <returns>A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value representing the icon type displayed within the specified control's regular tooltip. 



</returns>


        </member>
        <member name="M:DevExpress.Utils.DefaultToolTipController.SetAllowHtmlText(System.Windows.Forms.Control,DevExpress.Utils.DefaultBoolean)">
            <summary>
                <para>Sets whether HTML formatting is enabled in tooltips for the specified control.
</para>
            </summary>
            <param name="control">
		A control for which the tooltip information is to be changed.


            </param>
            <param name="value">
		A <see cref="T:DevExpress.Utils.DefaultBoolean"/> value that specifies whether HTML formatting is enabled in tooltips for the specified control.

            </param>


        </member>
        <member name="M:DevExpress.Utils.DefaultToolTipController.SetSuperTip(System.Windows.Forms.Control,DevExpress.Utils.SuperToolTip)">
            <summary>
                <para>Associates a <see cref="T:DevExpress.Utils.SuperToolTip"/> object with the specified control.
</para>
            </summary>
            <param name="control">
		A control for which to set the tooltip.


            </param>
            <param name="value">
		A <see cref="T:DevExpress.Utils.SuperToolTip"/> object to associate with the control.

            </param>


        </member>
        <member name="M:DevExpress.Utils.DefaultToolTipController.SetTitle(System.Windows.Forms.Control,System.String)">
            <summary>
                <para>Sets a regular tooltip's title for the specified control.
</para>
            </summary>
            <param name="control">
		A control for which to set a regular tooltip's title.


            </param>
            <param name="value">
		A string representing a regular tooltip's title.


            </param>


        </member>
        <member name="M:DevExpress.Utils.DefaultToolTipController.SetToolTip(System.Windows.Forms.Control,System.String)">
            <summary>
                <para>Sets a regular tooltip for the specified control.
</para>
            </summary>
            <param name="control">
		A control for which to set the tooltip.


            </param>
            <param name="value">
		A string representing a regular tooltip.


            </param>


        </member>
        <member name="M:DevExpress.Utils.DefaultToolTipController.SetToolTipIconType(System.Windows.Forms.Control,DevExpress.Utils.ToolTipIconType)">
            <summary>
                <para>Sets the type of the icon displayed within the specified control's regular tooltip.

</para>
            </summary>
            <param name="control">
		A control for which the icon type is set.



            </param>
            <param name="value">
		A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value representing the type of the icon that should be displayed within the specified control's regular tooltip.

            </param>


        </member>
        <member name="T:DevExpress.Utils.Images">

            <summary>
                <para>Represents a collection of <see cref="T:System.Drawing.Image"/> objects.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Images.#ctor(DevExpress.Utils.ImageCollection)">
            <summary>
                <para>Initializes a new instance of the Images class with the specified owner.
</para>
            </summary>
            <param name="owner">
		An <see cref="T:DevExpress.Utils.ImageCollection"/> object that represents the image collection which owns this object.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Images.#ctor(DevExpress.Utils.ImageCollection,System.Boolean)">
            <summary>
                <para>Initializes a new instance of the Images class with the specified settings.
</para>
            </summary>
            <param name="owner">
		An <see cref="T:DevExpress.Utils.ImageCollection"/> object representing the Images object's owner.

            </param>
            <param name="allowModifyImages">
		<b>true</b> to permit image modification; otherwise, <b>false</b>.


            </param>


        </member>
        <member name="M:DevExpress.Utils.Images.Add(System.Drawing.Image)">
            <summary>
                <para>Appends the specified image to the current collection of images.

</para>
            </summary>
            <param name="image">
		A <see cref="T:System.Drawing.Image"/> object to append to the collection.


            </param>
            <returns>An integer value indicating the position at which the new element was inserted. <b>-1</b> if the specified image is <b>null</b> (<b>Nothing</b> in Visual Basic) or empty.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Images.Add(System.Drawing.Image,System.String)">
            <summary>
                <para>Adds an image with the specified name to the collection.
</para>
            </summary>
            <param name="image">
		An image to add to the collection.

            </param>
            <param name="name">
		A string that specifies the name of the image,

            </param>
            <returns>An integer value that specifies the position at which the image has been added.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Images.AddImageStrip(System.Drawing.Image)">
            <summary>
                <para>Adds images from the specified horizontal image strip to the collection.

</para>
            </summary>
            <param name="sourceImage">
		The image(s) to add to the collection.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Images.AddImageStripVertical(System.Drawing.Image)">
            <summary>
                <para>Adds images from the specified vertical image strip to the collection.

</para>
            </summary>
            <param name="sourceImage">
		The image(s) to add to the collection.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Images.AddRange(System.Object[])">
            <summary>
                <para>Adds an array of images to the current collection.
</para>
            </summary>
            <param name="images">
		An array of images to be added to the collection.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Images.AddRange(System.Collections.IList)">
            <summary>
                <para>Adds images from the specified list to the current collection.
</para>
            </summary>
            <param name="images">
		A IList object that contains images to be added to the collection.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Images.Clear">
            <summary>
                <para>Clears the current collection.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Images.Contains(System.Object)">
            <summary>
                <para>Gets whether the collection contains the specified element.
</para>
            </summary>
            <param name="value">
		An object to locate in the collection.

            </param>
            <returns>A Boolean value that specifies whether the collection contains the specified element.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Images.CopyTo(System.Array,System.Int32)">
            <summary>
                <para>Copies the collection to a compatible one-dimensional Array, starting at the specified index of the target array.
</para>
            </summary>
            <param name="array">
		The one-dimensional Array that is the destination of the elements copied from the collection. The Array must have zero-based indexing. 


            </param>
            <param name="index">
		The zero-based index in the array in which copying begins. 


            </param>


        </member>
        <member name="P:DevExpress.Utils.Images.Count">
            <summary>
                <para>Gets the number of items in the collection.
</para>
            </summary>
            <value>An integer value that specifies the number of items in the collection.
</value>


        </member>
        <member name="M:DevExpress.Utils.Images.GetEnumerator">
            <summary>
                <para>Returns an enumerator for the collection.
</para>
            </summary>
            <returns>An IEnumerator for the collection.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Images.GetImageFromCollection(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                <para>Returns an image from the image collection at the specified position within the specified height and width.

</para>
            </summary>
            <param name="image">
		A <see cref="T:System.Drawing.Image"/> object which resolution settings will be applied to the resulting image.


            </param>
            <param name="width">
		An integer value that specifies the width of the resulting image.

            </param>
            <param name="height">
		An integer value that specifies the height of the resulting image.

            </param>
            <param name="wIndex">
		An integer value that specifies the vertical position of the resulting image in the images collection.


            </param>
            <param name="hIndex">
		An integer value that specifies the horizontal position of the resulting image in the images collection.


            </param>
            <returns>A <see cref="T:System.Drawing.Image"/> object which represents an image at the specified position of the specified size.

</returns>


        </member>
        <member name="M:DevExpress.Utils.Images.IndexOf(System.Object)">
            <summary>
                <para>Searches for the specified Object and returns the zero-based index of the first occurrence within the collection.
</para>
            </summary>
            <param name="value">
		The zero-based index of the first occurrence of value within the collection, if found; otherwise, <b>-1</b>.

            </param>
            <returns>The Object to locate in the collection.
</returns>


        </member>
        <member name="P:DevExpress.Utils.Images.InnerImages">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value>An InnerImagesList object.
</value>


        </member>
        <member name="M:DevExpress.Utils.Images.Insert(System.Int32,System.Object)">
            <summary>
                <para>Inserts an image into the collection at the specified position.
</para>
            </summary>
            <param name="index">
		An integer value specifying the zero-based position at which the specified image is inserted.

            </param>
            <param name="value">
		An image to insert into the collection.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Images.Insert(System.Int32,System.Object,System.String)">
            <summary>
                <para>Inserts an image with the assigned name into the collection at the specified position.
</para>
            </summary>
            <param name="index">
		An integer value specifying the zero-based position at which the specified image is inserted.

            </param>
            <param name="value">
		An image to insert into the collection.

            </param>
            <param name="name">
		A string that specifies the name to be associated with the image.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Images.Insert(System.Drawing.Image,System.String,System.Type,System.Int32)">
            <summary>
                <para>Inserts an image from project resources.
</para>
            </summary>
            <param name="image">
		An image to be inserted.

            </param>
            <param name="name">
		The name of the image to be inserted.

            </param>
            <param name="resourceType">
		The type of the class where the image to be inserted is defined.

            </param>
            <param name="index">
		An integer value that specifies the position at which the image needs to be inserted in the image collection.

            </param>
            <returns>An integer value that specifies the index of the inserted image in the image collection.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Images.Insert(System.Drawing.Image,System.String,System.Type,System.Int32,System.String)">
            <summary>
                <para>Inserts an image from project resources.
</para>
            </summary>
            <param name="image">
		An image to be inserted.

            </param>
            <param name="name">
		The name of the image to be inserted.

            </param>
            <param name="resourceType">
		The type of the class where the image to be inserted is defined.

            </param>
            <param name="index">
		An integer value that specifies the position at which the image needs to be inserted in the image collection.

            </param>
            <param name="resName">
		The name of the class where the image to be inserted is defined.

            </param>
            <returns>An integer value that specifies the index of the inserted image in the image collection.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Images.Insert(System.String,System.String,System.String,System.Int32)">
            <summary>
                <para>Inserts an image from the target assembly.
</para>
            </summary>
            <param name="assemblyName">
		A String value that is the name of the source assembly that stores the required image.

            </param>
            <param name="name">
		A String value that is the image name.

            </param>
            <param name="path">
		A String value that is the path to the source assembly.

            </param>
            <param name="index">
		An Int32 value that is the position within the Images collection at which the target image should be placed.

            </param>
            <returns>An Int32 value that is the index of the successfully inserted image.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Images.InsertGalleryImage(System.String,System.String,System.Drawing.Image,System.Int32)">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="name">
		 

            </param>
            <param name="uri">
		 

            </param>
            <param name="image">
		 

            </param>
            <param name="index">
		 

            </param>


        </member>
        <member name="P:DevExpress.Utils.Images.IsFixedSize">
            <summary>
                <para>Gets a value indicating whether the collection has a fixed size.
</para>
            </summary>
            <value><b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.Images.IsReadOnly">
            <summary>
                <para>Gets a value indicating whether the collection is read-only.
</para>
            </summary>
            <value><b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.Images.IsSynchronized">
            <summary>
                <para>Gets a value indicating whether access to the collection is synchronized (thread safe).
</para>
            </summary>
            <value><b>true</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.Images.Item(System.Int32)">
            <summary>
                <para>Provides indexed access to individual items in the collection.
</para>
            </summary>
            <param name="index">
		A zero-based integer specifying the desired item's position within the collection. If it's negative or exceeds the last available index, an exception is raised. 

            </param>
            <value>A <see cref="T:System.Drawing.Image"/> object which represents the image at the specified position.

</value>


        </member>
        <member name="P:DevExpress.Utils.Images.Item(System.String)">
            <summary>
                <para>Provides access to the images in the collection by their names.
</para>
            </summary>
            <param name="name">
		A string that specifies the name of the image to locate in the collection.

            </param>
            <value>An image with the specified name.
</value>


        </member>
        <member name="P:DevExpress.Utils.Images.Keys">
            <summary>
                <para>Gets the collection of names assigned to the images in the current collection.
</para>
            </summary>
            <value>A StringCollection of names assigned to the images in the current collection.
</value>


        </member>
        <member name="M:DevExpress.Utils.Images.Remove(System.Object)">
            <summary>
                <para>Removes the specified image from the collection.
</para>
            </summary>
            <param name="value">
		An image to remove from the collection.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Images.RemoveAt(System.Int32)">
            <summary>
                <para>Removes an image at the specified position from the collection.
</para>
            </summary>
            <param name="index">
		A zero-based index of the required image.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Images.RemoveByName(System.String)">
            <summary>
                <para>Removes an image with the specified name from the collection.
</para>
            </summary>
            <param name="name">
		A string that specifies the name of the required image.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Images.SetKeyName(System.Int32,System.String)">
            <summary>
                <para>Assigns a name to the image located at the specified position within the collection.
</para>
            </summary>
            <param name="index">
		An integer value that specifies the zero-based index of the required image.

            </param>
            <param name="name">
		A string that specifies the name to be assigned to the image.

            </param>


        </member>
        <member name="P:DevExpress.Utils.Images.SyncRoot">
            <summary>
                <para>Gets an object that can be used to synchronize access to the collection.
</para>
            </summary>
            <value>The current object.
</value>


        </member>
        <member name="M:DevExpress.Utils.Images.ToArray">
            <summary>
                <para>Copies the elements of the Images to a new array of <see cref="T:System.Drawing.Image"/> objects.
</para>
            </summary>
            <returns>An array of <see cref="T:System.Drawing.Image"/> objects containing the copies of the elements of the Images.
</returns>


        </member>
        <member name="T:DevExpress.Utils.Locations">

            <summary>
                <para>Contains values that specify how a specific element is positioned relative to another element.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.Locations.Bottom">
            <summary>
                <para>An element is located at the bottom edge of another element.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Locations.Default">
            <summary>
                <para>The same as the <see cref="F:DevExpress.Utils.Locations.Top"/> option.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Locations.Left">
            <summary>
                <para>An element is located at the left edge of another element.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Locations.Right">
            <summary>
                <para>An element is located at the right edge of another element.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Locations.Top">
            <summary>
                <para>An element is located at the top edge of another element.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.ToolTipControllerCustomDrawEventHandler">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ToolTipController.CustomDraw"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerCustomDrawEventHandler.Invoke(System.Object,DevExpress.Utils.ToolTipControllerCustomDrawEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ToolTipController.CustomDraw"/> event.
</para>
            </summary>
            <param name="sender">
		The event source. This parameter identifies the tooltip controller which raised the event.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs"/> object that contains event data.

            </param>


        </member>
        <member name="T:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.Utils.ToolTipController.CustomDraw"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs.#ctor(DevExpress.Utils.Drawing.GraphicsCache,DevExpress.Utils.ToolTipControllerShowEventArgs,System.Drawing.Rectangle)">
            <summary>
                <para>Initializes a new instance of the ToolTipControllerCustomDrawEventArgs class.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which specifies the storage for the most  used  pens, fonts and brushes. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs.Cache"/> property.

            </param>
            <param name="args">
		A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object which provides the information required to paint a tooltip. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs.ShowInfo"/> property.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure which specifies the tooltip's boundaries. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs.Bounds"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs.Bounds">
            <summary>
                <para>Gets the bounding rectangle of the painted tooltip.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Rectangle"/> structure which specifies the tooltip's boundaries.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs.Cache">
            <summary>
                <para>Gets an object which specifies the storage for the most  used pens, fonts and brushes
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which specifies the storage for the most  used  pens, fonts and brushes.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs.Handled">
            <summary>
                <para>Gets or sets whether an event was handled, if it was handled the default actions are not required.
</para>
            </summary>
            <value><b>true</b> if default painting isn't required; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs.ShowInfo">
            <summary>
                <para>Gets an object which provides the information required to paint a tooltip.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object which provides the information required to paint a tooltip.
</value>


        </member>
        <member name="T:DevExpress.Utils.EditorShowMode">

            <summary>
                <para>Contains values that specify how an in-place editor is activated for a cell in a container control.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.EditorShowMode.Click">
            <summary>
                <para>If a cell is focused and not being edited, an in-place editor is opened on a click (the mouse button is pressed and then released). Clicking a non-focused cell focuses the cell first, and a subsequent click activates the in-place editor (if not prohibited).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.EditorShowMode.Default">
            <summary>
                <para>Specifies the default behavior.
<para>
For the Grid Control, the Default value is equivalent to:
</para>
<para>
- <see cref="F:DevExpress.Utils.EditorShowMode.Click"/> - in multiple cell selection mode (see <see cref="F:DevExpress.XtraGrid.Views.Grid.GridMultiSelectMode.CellSelect"/>)
- <see cref="F:DevExpress.Utils.EditorShowMode.MouseUp"/> - in multiple row selection mode if the built-in Check column is enabled (see <see cref="F:DevExpress.XtraGrid.Views.Grid.GridMultiSelectMode.CheckBoxRowSelect"/>)
- <see cref="F:DevExpress.Utils.EditorShowMode.MouseDown"/> - in other cases.
</para>

<para>
For the PivotGrid control, this option acts as the <see cref="F:DevExpress.Utils.EditorShowMode.MouseDownFocused"/> option.
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.EditorShowMode.MouseDown">
            <summary>
                <para>A cell's in-place editor is activated when the left mouse button is pressed.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.EditorShowMode.MouseDownFocused">
            <summary>
                <para>If a cell is focused and not being edited, an in-place editor is opened on pressing the mouse button. Clicking a non-focused cell focuses the cell first, and a subsequent mouse-down event activates the in-place editor (if not prohibited).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.EditorShowMode.MouseUp">
            <summary>
                <para>A cell's in-place editor is activated when a mouse button is released from a click within the cell.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.HKeyPrefix">

            <summary>
                <para>Provides values that indicate different ways to interpret an ampersand character (&amp;) in item captions.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.HKeyPrefix.Default">
            <summary>
                <para>A default control behavior.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.HKeyPrefix.Hide">
            <summary>
                <para>The ampersand character (&amp;) is hidden, the next character is not underlined.
<para>

</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.HKeyPrefix.None">
            <summary>
                <para>The ampersand character (&amp;) is shown, the next character is not underlined.
<para>

</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.HKeyPrefix.Show">
            <summary>
                <para>The ampersand character (&amp;) is hidden, the next character is underlined.
<para>

</para>

</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.Menu.CommandPopupMenu`1">

            <summary>
                <para>Base class for the popup (context) menu of Office-inspired controls.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Menu.CommandPopupMenu`1.#ctor">
            <summary>
                <para>Initializes a new instance of the CommandPopupMenu&lt;T&gt; class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Menu.CommandPopupMenu`1.#ctor(System.EventHandler)">
            <summary>
                <para>Initializes a new instance of the CommandPopupMenu&lt;T&gt; class with the specified caption and the handler for the <see cref="E:DevExpress.Utils.Menu.DXSubMenuItem.BeforePopup"/> event.
</para>
            </summary>
            <param name="beforePopup">
		An event handler that will be invoked when the menu is about to be displayed. This value is assigned to the <see cref="E:DevExpress.Utils.Menu.DXSubMenuItem.BeforePopup"/> event.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.CommandPopupMenu`1.DisableMenuItem(DevExpress.Utils.Menu.T)">
            <summary>
                <para>Find a menu item specified by its Id and disable it.

</para>
            </summary>
            <param name="id">
		An object serving as a menu identifier.


            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.CommandPopupMenu`1.DisableMenuItem(DevExpress.Utils.Menu.T,System.Boolean)">
            <summary>
                <para>Find a menu item specified by its Id and disable it.

</para>
            </summary>
            <param name="id">
		An object serving as a menu identifier.


            </param>
            <param name="recursive">
		<b>true</b> to search nested menus recursively; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.CommandPopupMenu`1.EnableMenuItem(DevExpress.Utils.Menu.T)">
            <summary>
                <para>Find a menu item specified by its Id and enable it.
</para>
            </summary>
            <param name="id">
		An object serving as a menu identifier.


            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.CommandPopupMenu`1.EnableMenuItem(DevExpress.Utils.Menu.T,System.Boolean)">
            <summary>
                <para>Find a menu item specified by its Id and enable it.
</para>
            </summary>
            <param name="id">
		An object serving as a menu identifier.


            </param>
            <param name="recursive">
		<b>true</b> to search nested menus recursively; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.CommandPopupMenu`1.GetDXMenuItemById(DevExpress.Utils.Menu.DXPopupMenu,DevExpress.Utils.Menu.T,System.Boolean)">
            <summary>
                <para>Searches for a menu item specified by its ID within a specified menu object.
</para>
            </summary>
            <param name="menu">
		A <see cref="T:DevExpress.Utils.Menu.DXPopupMenu"/> object that is the menu from which a search starts.

            </param>
            <param name="id">
		An integer that is the position of the menu item within the menu object.


            </param>
            <param name="recursive">
		<b>true</b>, to search nested menus recursively; otherwise, <b>false</b>.

            </param>
            <returns>A <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/> object if the menu with a specified identifier is found; otherwise <b>null</b> (or <b>Nothing</b> in Visual Basic)
</returns>


        </member>
        <member name="P:DevExpress.Utils.Menu.CommandPopupMenu`1.Id">
            <summary>
                <para>Gets or sets menu identifier.
</para>
            </summary>
            <value>An object serving as a menu identifier.
</value>


        </member>
        <member name="M:DevExpress.Utils.Menu.CommandPopupMenu`1.MoveMenuCheckItem(DevExpress.Utils.Menu.T,System.Int32)">
            <summary>
                <para>Moves a menu item with a check mark to a specified position.
</para>
            </summary>
            <param name="id">
		An object serving as a menu identifier.

            </param>
            <param name="to">
		An integer that is the position of a menu item within the menu object.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.CommandPopupMenu`1.MoveMenuItem(DevExpress.Utils.Menu.T,System.Int32)">
            <summary>
                <para>Moves a menu item to a specified position.
</para>
            </summary>
            <param name="id">
		An object serving as a menu identifier.


            </param>
            <param name="to">
		An integer that is the position of a menu item within the menu object.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.CommandPopupMenu`1.MoveMenuItem(DevExpress.Utils.Menu.DXMenuItem,System.Int32)">
            <summary>
                <para>Moves a menu item to a specified position.
</para>
            </summary>
            <param name="item">
		A <see cref="T:DevExpress.Utils.Menu.DXMenuItem"/> object that is the menu item.

            </param>
            <param name="to">
		An integer that is the position of a menu item within the menu object.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.CommandPopupMenu`1.MoveSubMenuItem(DevExpress.Utils.Menu.T,System.Int32)">
            <summary>
                <para>Moves a submenu item to a specified position.
</para>
            </summary>
            <param name="id">
		An object serving as a menu identifier.

            </param>
            <param name="to">
		An integer that is the position of a menu item within the menu object.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.CommandPopupMenu`1.RemoveMenuItem(DevExpress.Utils.Menu.T,System.Boolean)">
            <summary>
                <para>Find a menu item specified by its Id and remove it.

</para>
            </summary>
            <param name="id">
		An object serving as a menu identifier.


            </param>
            <param name="recursive">
		<b>true</b>, to search nested menus recursively; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.CommandPopupMenu`1.RemoveMenuItem(DevExpress.Utils.Menu.T)">
            <summary>
                <para>Find a menu item specified by its Id and remove it.

</para>
            </summary>
            <param name="id">
		An object serving as a menu identifier.


            </param>


        </member>
        <member name="T:DevExpress.XtraEditors.XtraUserControl">

            <summary>
                <para>The user control that supports look and feel and skinning technology. Provides centralized control over the look and feel settings of the DevExpress controls placed on it.


</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.XtraUserControl.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.XtraUserControl"/> class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraUserControl.Appearance">
            <summary>
                <para>Gets the appearance settings used to paint the user control.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which contains the user control's appearance settings.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraUserControl.BackColor">
            <summary>
                <para>Gets or sets the user control's background color.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> structure which specifies the user control's background color.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraUserControl.EnableIXtraResizeableControlInterfaceProxy">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraUserControl.Font">
            <summary>
                <para>Gets or sets font settings applied to the control.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Font"/> object that contains font settings.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraUserControl.ForeColor">
            <summary>
                <para>Gets or sets the control's foreground color.
</para>
            </summary>
            <value>A Color structure that specifies the control's foreground color.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraUserControl.LookAndFeel">
            <summary>
                <para>Contains settings that specify the look and feel of the current XtraUserControl and all DevExpress controls placed on it. 
</para>
            </summary>
            <value>An object that provides look-and-feel settings.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraUserControl.ResetBackColor">
            <summary>
                <para>Resets the <see cref="P:DevExpress.XtraEditors.XtraUserControl.BackColor"/> property back to its default value.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraUserControl.ResetForeColor">
            <summary>
                <para>Sets the <see cref="P:DevExpress.XtraEditors.XtraUserControl.ForeColor"/> property to <b>Color.Empty</b>.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraUserControl.Site">
            <summary>
                <para>Gets or sets the site of the XtraUserControl.
</para>
            </summary>
            <value>The <b>ISite</b> associated with the XtraUserControl, if any.
</value>


        </member>
        <member name="T:DevExpress.XtraEditors.XtraForm">

            <summary>
                <para>A form that supports title bar and border skinning. Provides centralized control over the look and feel settings of the DevExpress controls placed on it.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.XtraForm.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.XtraForm"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.AcrylicAccentTintOpacity">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.ActiveGlowColor">
            <summary>
                <para>Gets or sets the color of the glow adorning effect applied to the form's borders when the form is active.
</para>
            </summary>
            <value>The color of the glow adorning effect applied to the form's borders when the form is active.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.AllowFormSkin">
            <summary>
                <para>Gets or sets whether the form's title bar and borders are painted using the current skin. This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value><b>true</b> if the form's title bar and borders are painted using the current skin; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.AllowMdiBar">
            <summary>
                <para>Gets or sets whether an MDI bar is allowed for this form. This property is in effect for a parent MDI form, when the title bar skinning feature is enabled.
</para>
            </summary>
            <value><b>true</b> if the MDI bar is allowed; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.Appearance">
            <summary>
                <para>Gets the appearance settings used to paint the form.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which contains the form's appearance settings.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.BackColor">
            <summary>
                <para>Gets or sets the background color of the form's client region. 
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> structure which specifies the background color of the form's client region.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.BackgroundImage">
            <summary>
                <para>Specifies the background image for the form.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Image"/> object that represents the background image.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.BackgroundImageLayout">
            <summary>
                <para>Gets or sets the background image layout as defined in the <see cref="T:System.Windows.Forms.ImageLayout"/> enumeration.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Forms.ImageLayout"/> value that specifies the background image layout.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.BackgroundImageLayoutStore">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value>An ImageLayout value.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.BackgroundImageStore">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value>An Image object.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraForm.CheckInvisibleDueShowingStrategy(DevExpress.XtraEditors.XtraForm)">
            <summary>
                <para>Returns whether or not the target XtraForm exists but is not yet displayed.

</para>
            </summary>
            <param name="form">
		An <see cref="T:DevExpress.XtraEditors.XtraForm"/> to be checked.

            </param>
            <returns><b>true</b>, if the target form exists but is not yet shown; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.CloseBox">
            <summary>
                <para>Gets or sets whether the form's Close button (x) is visible. This property is in effect when the Form Title Bar Skinning feature is enabled.
</para>
            </summary>
            <value><b>true</b> if the form's Close button (x) is visible; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.DeactivatedForm">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.EnableAcrylicAccent">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.Font">
            <summary>
                <para>Gets or sets the form's font. 
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Font"/> object which specifies the form's font. 
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.ForeColor">
            <summary>
                <para>Gets or sets the foreground color of the form's client region. 
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> structure which specifies the foreground color of the form's client region.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.FormBorderEffect">
            <summary>
                <para>Gets or sets the form's border adornment effect.
</para>
            </summary>
            <value>The form's border adornment effect.
</value>


        </member>
        <member name="E:DevExpress.XtraEditors.XtraForm.FormLayoutChanged">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.HtmlImages">
            <summary>
                <para>Gets or sets a collection of images to be inserted into the form's caption using HTML tags. This property is in effect when the Form Title Bar Skinning feature is enabled.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ImageCollection"/> object that stores a collection of images.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.HtmlText">
            <summary>
                <para>Allows you to specify the form's caption and format it using HTML tags. The property is in effect when the Form Title Bar Skinning feature is applied.
</para>
            </summary>
            <value>A string that specifies the form's caption, formatted using HTML tags.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.InactiveGlowColor">
            <summary>
                <para>Gets or sets the color of the glow adorning effect applied to the form's borders when the form is not active.
</para>
            </summary>
            <value>The color of the glow adorning effect applied to the form's borders when the form is not active.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraForm.IsAllowSmartMouseWheel(System.Windows.Forms.Control)">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="control">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraForm.IsAllowSmartMouseWheel(System.Windows.Forms.Control,System.Windows.Forms.MouseEventArgs)">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="control">
		 

            </param>
            <param name="e">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.IsSuspendRedraw">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.LookAndFeel">
            <summary>
                <para>Contains settings that specify the look and feel of the current form and all DevExpress controls placed on the form. 
</para>
            </summary>
            <value>A <see cref="FormUserLookAndFeel"/> object that stores look&amp;feel settings for this XtraForm.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.MaximumClientSize">
            <summary>
                <para>Gets or sets the maximum allowed client size for a form.

</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Size"/> value.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.MaximumSize">
            <summary>
                <para>Gets or sets the form's maximum size.
</para>
            </summary>
            <value>A Size structure that specifies the form's maximum size.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.MdiChildCaptionFormatString">
            <summary>
                <para>Gets or sets the composite format string used to format the merged MDI parent and child captions.
</para>
            </summary>
            <value>A string value that represents the composite format string used to format the merged MDI parent and child captions.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.MinimumClientSize">
            <summary>
                <para>Gets or sets the minimum allowed client size for a form.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Size"/> value.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.MinimumSize">
            <summary>
                <para>Gets or sets the form's minimum size.
</para>
            </summary>
            <value>A Size structure that specifies the form's minimum size.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraForm.ProcessSmartMouseWheel(System.Windows.Forms.Control,System.Windows.Forms.MouseEventArgs)">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="control">
		 

            </param>
            <param name="e">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraForm.ResetBackColor">
            <summary>
                <para>Resets the <see cref="P:DevExpress.XtraEditors.XtraForm.BackColor"/> property back to its default value.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraForm.ResetForeColor">
            <summary>
                <para>Resets the <see cref="P:DevExpress.XtraEditors.XtraForm.ForeColor"/> property back to its default value.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraForm.ResumeLayout(System.Boolean)">
            <summary>
                <para>Resumes the usual layout logic, optionally forcing an immediate layout of pending layout requests.

</para>
            </summary>
            <param name="performLayout">
		<b>true</b> to execute pending layout requests; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraForm.ResumeLayout">
            <summary>
                <para>Resumes the usual layout logic.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraForm.ResumeRedraw">
            <summary>
                <para>Resumes painting the form whose painting had been suspended.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraForm.ShowDialog(System.Windows.Forms.IWin32Window)">
            <summary>
                <para>Shows the form as a modal dialog box with the specified owner.
</para>
            </summary>
            <param name="owner">
		Any object implementing <see cref="T:System.Windows.Forms.IWin32Window"/> that represents the top-level window that will own the modal dialog box.


            </param>
            <returns>One of the <see cref="T:System.Windows.Forms.DialogResult"/> values.
</returns>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.ShowMdiChildCaptionInParentTitle">
            <summary>
                <para>Gets or sets whether the caption of the currently active multiple-document interface (MDI) child is merged with the MDI parent caption, and shown in the form's title bar.
</para>
            </summary>
            <value><b>true</b>, if the MDI child caption is merged with the MDI parent caption; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.Site">
            <summary>
                <para>Gets or sets the site of the XtraForm.
</para>
            </summary>
            <value>The <b>ISite</b> associated with the XtraForm, if any.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.SuppressDeactivation">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraForm.SuspendLayout">
            <summary>
                <para>Temporarily suspends the layout logic for the control.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraForm.SuspendRedraw">
            <summary>
                <para>Suspends painting the form.

</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.Text">
            <summary>
                <para>Gets or sets the form's caption.

</para>
            </summary>
            <value>A string that specifies the form's caption.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.TextMdiTab">
            <summary>
                <para>Gets or sets the text displayed within a tab corresponding to the current form. This property is in effect when the current form represents an MDI child within an <see cref="T:DevExpress.XtraTabbedMdi.XtraTabbedMdiManager"/> container.
</para>
            </summary>
            <value>A string value.
</value>


        </member>
        <member name="T:DevExpress.XtraEditors.SplitterControl">

            <summary>
                <para>Allows end-users to resize controls that are docked to the splitter's edges.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.SplitterControl.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.SplitterControl"/> class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitterControl.Appearance">
            <summary>
                <para>Gets the appearance settings used to paint the splitter.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which contains the splitter's appearance settings.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitterControl.BackColor">
            <summary>
                <para>Gets or sets the splitter's background color.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> structure which specifies the splitter's background color.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitterControl.LookAndFeel">
            <summary>
                <para>Provides access to the settings which control the splitter's look and feel. 
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object whose properties specify the splitter's look and feel.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.SplitterControl.OnEndDeserializing(System.String)">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="restoredVersion">
		 

            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.SplitterControl.OnEndSerializing">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.SplitterControl.OnStartDeserializing(DevExpress.Utils.LayoutAllowEventArgs)">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="e">
		 

            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.SplitterControl.OnStartSerializing">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.SplitContainerControl">

            <summary>
                <para>The control that consists of two panels separated by a splitter, which can be dragged by an end-user to resize the panels.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.SplitContainerControl.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.SplitContainerControl"/> class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.AllowSuspendRedraw">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value>A Boolean value.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.AllowTouchScroll">
            <summary>
                <para>Gets or sets if end-users can scroll the SplitContainerControl by dragging its content.
</para>
            </summary>
            <value><b>true</b>, if end-users can scroll the SplitContainerControl by dragging its content; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.AutoSize">
            <summary>
                <para>This member is not supported by the SplitContainerControl class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.AutoSizeMode">
            <summary>
                <para>This member is not supported by the SplitContainerControl class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.SplitContainerControl.BeginInit">
            <summary>
                <para>Starts the split container's initialization. Initialization occurs at runtime.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.XtraEditors.SplitContainerControl.BeginSplitterMoving">
            <summary>
                <para>Occurs after an end-user clicks the SplitContainerControl's splitter.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.Collapsed">
            <summary>
                <para>Gets or sets a value indicating whether the panel referred to by the <see cref="P:DevExpress.XtraEditors.SplitContainerControl.CollapsePanel"/> property is collapsed.
</para>
            </summary>
            <value><b>true</b> if the panel is collapsed; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.CollapsePanel">
            <summary>
                <para>Gets or sets the panel that is automatically collapsed when clicking on a splitter.
</para>
            </summary>
            <value>A SplitCollapsePanel enumeration value that specifies the panel automatically collapsed when clicking on a splitter.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.Controls">
            <summary>
                <para>Gets the collection of controls contained within the split container control.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Control.ControlCollection"/> object which represents the collection of controls contained within the split container control.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.Cursor">
            <summary>
                <para>Gets or sets the cursor that is displayed when the mouse pointer is over the current SplitContainerControl.
</para>
            </summary>
            <value>A  <b>System.Windows.Forms.Cursor</b> object that represents the cursor to display when the mouse pointer is over the control.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.SplitContainerControl.EndInit">
            <summary>
                <para>Ends the split container's initialization. 
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.FixedPanel">
            <summary>
                <para>Gets or sets the fixed panel.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraEditors.SplitFixedPanel"/> enumeration value which specifies the fixed panel.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.Horizontal">
            <summary>
                <para>Gets or sets whether the panels are arranged horizontally or vertically.
</para>
            </summary>
            <value><b>true</b> if the panels are arranged horizontally; <b>false</b> if the panels are vertically.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.IsPanelCollapsed">
            <summary>
                <para>Gets whether the panel specified by the <see cref="P:DevExpress.XtraEditors.SplitContainerControl.CollapsePanel"/> property is collapsed.
</para>
            </summary>
            <value><b>true</b> if this panel is collapsed; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.IsSplitterFixed">
            <summary>
                <para>Gets or sets whether the SplitContainerControl's splitter is locked at the current position.
</para>
            </summary>
            <value><b>true</b>, if the SplitContainerControl's splitter is locked at the current position; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.Panel1">
            <summary>
                <para>Gets the left (or top) panel.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraEditors.SplitGroupPanel"/> object which represents the left (or top) panel.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.Panel2">
            <summary>
                <para>Gets the right (or bottom) panel.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraEditors.SplitGroupPanel"/> object which represents the right (or bottom) panel.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.PanelVisibility">
            <summary>
                <para>Gets or sets the visibility of the panels.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraEditors.SplitPanelVisibility"/> enumeration value which specifies the visibility of panels.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.SplitContainerControl.RestoreLayoutFromRegistry(System.String)">
            <summary>
                <para>Loads the current SplitContainerControl's layout from the system registry.
</para>
            </summary>
            <param name="path">
		A String value which specifies the system registry path. If the specified path doesn't exist, this method does nothing.

            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.SplitContainerControl.RestoreLayoutFromStream(System.IO.Stream)">
            <summary>
                <para>Loads the current SplitContainerControl's layout from the specific stream.
</para>
            </summary>
            <param name="stream">
		The Stream from which the  the current SplitContainerControl's layout should be restored.

            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.SplitContainerControl.RestoreLayoutFromXml(System.String)">
            <summary>
                <para>Loads the current SplitContainerControl's layout from the specific XML file.
</para>
            </summary>
            <param name="xmlFile">
		A String value that is the path to an XML file where the current SplitContainerControl's layout should be restored from.

            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.SplitContainerControl.SaveLayoutToRegistry(System.String)">
            <summary>
                <para>Saves the current SplitContainerControl's layout to the system registry.
</para>
            </summary>
            <param name="path">
		A String value that is the system registry path to which  the current SplitContainerControl's layout should be saved.

            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.SplitContainerControl.SaveLayoutToStream(System.IO.Stream)">
            <summary>
                <para>Saves the current SplitContainerControl's layout to a stream.
</para>
            </summary>
            <param name="stream">
		A stream where the layout should be stored.

            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.SplitContainerControl.SaveLayoutToXml(System.String)">
            <summary>
                <para>Saves the current SplitContainerControl's layout to the specific XML file.
</para>
            </summary>
            <param name="xmlFile">
		A String value that is the path to an XML file where the current SplitContainerControl's layout should be saved.

            </param>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.SerializableRatio">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.SplitContainerControl.SetPanelBorderStyle(DevExpress.XtraEditors.Controls.BorderStyles)">
            <summary>
                <para>Specifies the border style of the panels.
</para>
            </summary>
            <param name="border">
		A <see cref="T:DevExpress.XtraEditors.Controls.BorderStyles"/> enumeration value specifying the border style of the panels.

            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.SplitContainerControl.SetPanelCollapsed(System.Boolean)">
            <summary>
                <para>Collapses or restores the panel referred to by the <see cref="P:DevExpress.XtraEditors.SplitContainerControl.CollapsePanel"/> property.
</para>
            </summary>
            <param name="collapsed">
		<b>true</b> to collapse the panel; <b>false</b> to restore the panel.

            </param>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.ShowCaption">
            <summary>
                <para>Gets or sets whether the split container's caption is displayed.
</para>
            </summary>
            <value><b>true</b> to display the split container's caption; otherwise, <b>false</b>.
</value>


        </member>
        <member name="E:DevExpress.XtraEditors.SplitContainerControl.SplitGroupPanelCollapsed">
            <summary>
                <para>Allows you to respond to collapsing/restoring a panel.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.XtraEditors.SplitContainerControl.SplitGroupPanelCollapsing">
            <summary>
                <para>Allows you to prevent a panel from being collapsed/restored.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.SplitterBounds">
            <summary>
                <para>Gets the splitter's size and location.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Rectangle"/> structure which represents the size and location of the splitter.
</value>


        </member>
        <member name="E:DevExpress.XtraEditors.SplitContainerControl.SplitterMoved">
            <summary>
                <para>Occurs after the splitter's position has been changed.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.XtraEditors.SplitContainerControl.SplitterMoving">
            <summary>
                <para>Occurs when the splitter's position is being changed.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.SplitterPosition">
            <summary>
                <para>Gets or sets the splitter's location.
</para>
            </summary>
            <value>An integer value specifying the splitter's current location in pixels, from the side of the fixed panel. 
</value>


        </member>
        <member name="E:DevExpress.XtraEditors.SplitContainerControl.SplitterPositionChanged">
            <summary>
                <para>Occurs after the splitter's position has been changed. 
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.SplitContainerControl.SwapPanels">
            <summary>
                <para>Swaps the contents of the first and second panels.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.PanelControl">

            <summary>
                <para>The panel with or without a border.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.PanelControl.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.PanelControl"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.Appearance">
            <summary>
                <para>Gets the appearance settings used to paint the panel.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which contains the panel's appearance settings.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.AutoScroll">
            <summary>
                <para>Not supported.
</para>
            </summary>
            <value>A Boolean value.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.AutoScrollMargin">
            <summary>
                <para>Not supported.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Size"/> object that represents the height and width of the auto-scroll margin, in pixels.

</value>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.AutoScrollMinSize">
            <summary>
                <para>Not supported.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Size"/> object that represents the minimum height and width of the control's scrollbars, in pixels.

</value>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.BackColor">
            <summary>
                <para>Gets or sets the panel's background color.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> structure which specifies the panel's background color. 
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.BackgroundImage">
            <summary>
                <para>Gets or sets the control's background image. This member is not supported by the PanelControl class. Use the <b>Appearance.Image</b> property instead.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Image"/> object.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.BackgroundImageLayout">
            <summary>
                <para>This member is not supported by the PanelControl class. 

</para>
            </summary>
            <value>An <see cref="T:System.Windows.Forms.ImageLayout"/> value that specifies the position of an image on the control.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.PanelControl.BeginInit">
            <summary>
                <para>Starts the panel's initialization. Initialization occurs at runtime.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.BorderStyle">
            <summary>
                <para>Gets or sets the panel's border style.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraEditors.Controls.BorderStyles"/> enumeration value specifying the panel's border style.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.PanelControl.CalcBoundsByClient(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
                <para>Returns the panel's bounding rectangle, calculated from the bounds of its client region.
</para>
            </summary>
            <param name="graphics">
		A <see cref="T:System.Drawing.Graphics"/> object.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure which represents the bounding rectangle of the panel's client region.

            </param>
            <returns>A <see cref="T:System.Drawing.Rectangle"/> structure which represents the panel's bounding rectangle, calculated from the bounds of its client region.
</returns>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.ContentImage">
            <summary>
                <para>Gets or sets the group's background image that is displayed "as is", and can be aligned to any panel's edge.
</para>
            </summary>
            <value>An <see cref="T:System.Drawing.Image"/> object.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.ContentImageAlignement">
            <summary>
                <para>Gets or sets the content image's alignment within the panel.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.ContentAlignment"/> value that specifies the content image's alignment.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.ContentImageAlignment">
            <summary>
                <para>Gets or sets the content image's alignment within the panel.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.ContentAlignment"/> value that specifies the content image's alignment.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.DisplayRectangle">
            <summary>
                <para>Gets the bounds of the panel's client region.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Rectangle"/> structure which represents the bounding rectangle of the panel's client region.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.PanelControl.EndInit">
            <summary>
                <para>Ends the PanelControl's initialization.

</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.Font">
            <summary>
                <para>Gets or sets the panel's font.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Font"/> object which specifies the panel's font.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.ForeColor">
            <summary>
                <para>Gets or sets the panel's foreground color.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> structure which specifies the panel's foreground color.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.PanelControl.ResetBackColor">
            <summary>
                <para>Resets the <see cref="P:DevExpress.XtraEditors.PanelControl.BackColor"/> property back to its default value.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.PanelControl.ResetForeColor">
            <summary>
                <para>Resets the <see cref="P:DevExpress.XtraEditors.PanelControl.ForeColor"/> property back to its default value.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.Text">
            <summary>
                <para>Gets or sets the text associated with the panel control.
</para>
            </summary>
            <value>A string value specifying the text associated with the panel.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.UseCompatibleDrawingMode">
            <summary>
                <para>Gets or sets whether the PanelControl should use the non-default painting mode.

</para>
            </summary>
            <value><b>true</b> if the PanelControl control uses the non-default painting mode; otherwise, <b>false</b>.

</value>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.UseDisabledStatePainter">
            <summary>
                <para>Gets or sets whether the control is painted grayed out, when it's in the disabled state.
</para>
            </summary>
            <value><b>true</b> if the control is painted grayed out, when it's in the disabled state; otherwise, <b>false</b>
</value>


        </member>
        <member name="T:DevExpress.XtraEditors.GroupControl">

            <summary>
                <para>The panel with a title which can be aligned along the top, bottom, left or right edge.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.GroupControl.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.GroupControl"/> class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.GroupControl.AllowBorderColorBlending">
            <summary>
                <para>Gets or sets whether to colorize the group caption and border according to the <b>BorderColor</b> setting in skinning paint schemes.

</para>
            </summary>
            <value><b>true</b>, if the group caption and border should be colorized according to its <b>BorderColor</b> settings in skinning paint schemes; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.GroupControl.AllowGlyphSkinning">
            <summary>
                <para>Gets or sets whether an image within the GroupControl's caption should be painted using the control's foreground color.
</para>
            </summary>
            <value><b>true</b>, if an image within the GroupControl's caption should be painted using the control's foreground color; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.GroupControl.AllowHtmlText">
            <summary>
                <para>Gets or sets whether HTML tags can be used to format the control's <see cref="P:DevExpress.XtraEditors.GroupControl.Text"/>.
</para>
            </summary>
            <value><b>true</b> if HTML tags can be used to format the control's <see cref="P:DevExpress.XtraEditors.GroupControl.Text"/>; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.GroupControl.AppearanceCaption">
            <summary>
                <para>Gets the appearance settings used to paint the group's caption.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which contains the caption's appearance settings.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.GroupControl.ButtonInterval">
            <summary>
                <para>Gets or sets the distance, in pixels, between <see cref="P:DevExpress.XtraEditors.GroupControl.CustomHeaderButtons"/>.
</para>
            </summary>
            <value>An integer value that specifies the distance, in pixels, between <see cref="P:DevExpress.XtraEditors.GroupControl.CustomHeaderButtons"/>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.GroupControl.CaptionImage">
            <summary>
                <para>Gets or sets the image to display within the group's caption area.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Image"/> object that specifies the group's caption image.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.GroupControl.CaptionImageLocation">
            <summary>
                <para>Gets or sets the relative position of an image within the group caption.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.GroupElementLocation"/> value that specifies the image's position. 
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.GroupControl.CaptionImageOptions">
            <summary>
                <para>Provides access to properties that affect this GroupControl's caption image.
</para>
            </summary>
            <value>A <see cref="GroupCaptionImageOptions"/> object that stores properties that affect this GroupControl's caption image.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.GroupControl.CaptionImagePadding">
            <summary>
                <para>Gets or sets the outer indents for the image within the group caption, in pixels.
</para>
            </summary>
            <value>A System.Windows.Forms.Padding object that specifies padding information for the image.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.GroupControl.CaptionImageUri">
            <summary>
                <para>Gets or sets the uniform resource identifier (URI) that specifies the image assigned for this GroupControl.
</para>
            </summary>
            <value>A <see cref="DxImageUri"/> object that is the uniform resource identifier (URI) for this GroupControl.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.GroupControl.CaptionLocation">
            <summary>
                <para>Gets or sets the location of the group control's caption.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.Locations"/> enumeration member which specifies the group caption's location.
</value>


        </member>
        <member name="E:DevExpress.XtraEditors.GroupControl.CustomButtonChecked">
            <summary>
                <para>Occurs whenever a check button from the <see cref="P:DevExpress.XtraEditors.GroupControl.CustomHeaderButtons"/> collection is checked.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.XtraEditors.GroupControl.CustomButtonClick">
            <summary>
                <para>Occurs whenever a push button from the <see cref="P:DevExpress.XtraEditors.GroupControl.CustomHeaderButtons"/> collection is clicked.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.XtraEditors.GroupControl.CustomButtonUnchecked">
            <summary>
                <para>Occurs whenever a check button from the <see cref="P:DevExpress.XtraEditors.GroupControl.CustomHeaderButtons"/> collection is unchecked.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.XtraEditors.GroupControl.CustomDrawCaption">
            <summary>
                <para>Enables group caption to be custom painted.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.GroupControl.CustomHeaderButtons">
            <summary>
                <para>Provides access to the custom header buttons' collection. 
</para>
            </summary>
            <value>A <see cref="BaseButtonCollection"/> object that stores custom header buttons for this GroupControl.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.GroupControl.CustomHeaderButtonsLocation">
            <summary>
                <para>Gets or sets the position of <see cref="P:DevExpress.XtraEditors.GroupControl.CustomHeaderButtons"/>. 

</para>
            </summary>
            <value>A <see cref="GroupElementLocation"/> enumerator value that specifies the position of <see cref="P:DevExpress.XtraEditors.GroupControl.CustomHeaderButtons"/> within this GroupControl.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.GroupControl.DisplayRectangle">
            <summary>
                <para>Gets the bounds of the control's client region. 
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Rectangle"/> structure which represents the bounding rectangle of the control's client region. 
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.GroupControl.GetObjectInfo(System.Drawing.Point)">
            <summary>
                <para>Retrieves detailed information about a tool-tip located at the specific position.
</para>
            </summary>
            <param name="point">
		A Point structure to check whether it belongs to a tool-tip. Coordinates are referenced from the GroupControl's top left corner.


            </param>
            <returns>A ToolTipControlInfo object that stores the tool-tip's information.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.GroupControl.GetTextBottomLine">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.GroupControl.GetTextLeftLine">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.GroupControl.GetTextRightLine">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.GroupControl.GetTextTopLine">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="P:DevExpress.XtraEditors.GroupControl.GroupStyle">
            <summary>
                <para>Gets or sets the style of this GroupControl's borders and header.
</para>
            </summary>
            <value>A <see cref="GroupStyle"/> object enumeration value that specifies the style of this GroupControl's borders and header.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.GroupControl.HtmlImages">
            <summary>
                <para>Gets or sets a collection of images to be inserted into the control's caption (<see cref="P:DevExpress.XtraEditors.GroupControl.Text"/>) using HTML tags.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ImageCollection"/> object that stores a collection of images.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.GroupControl.Images">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="M:DevExpress.XtraEditors.GroupControl.LayoutChanged">
            <summary>
                <para>Invalidates the entire surface of the control and causes the control to be redrawn.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.GroupControl.ShowCaption">
            <summary>
                <para>Gets or sets whether the group's caption is displayed.
</para>
            </summary>
            <value><b>true</b> to display the group's caption; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.GroupControl.Text">
            <summary>
                <para>Gets or sets the GroupControl's text.
</para>
            </summary>
            <value>A string that specifies the control's text.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.GroupControl.ToolTipController">
            <summary>
                <para>Gets or sets the tooltip controller component that controls the appearance, position and content of tooltips displayed by custom header buttons.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipController"/> object which controls the appearance and behavior of tooltips displayed by custom header buttons.
</value>


        </member>
        <member name="T:DevExpress.XtraEditors.GroupCaptionCustomDrawEventHandler">

            <summary>
                <para>A method that will handle the <see cref="E:DevExpress.XtraEditors.GroupControl.CustomDrawCaption"/> event.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.GroupCaptionCustomDrawEventHandler.Invoke(System.Object,DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.XtraEditors.GroupControl.CustomDrawCaption"/> event.
</para>
            </summary>
            <param name="sender">
		The event source. This parameter identifies the group control which raised the event.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs"/> object that contains event data.

            </param>


        </member>
        <member name="T:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.XtraEditors.GroupControl.CustomDrawCaption"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs.#ctor(DevExpress.Utils.Drawing.GraphicsCache,DevExpress.Utils.Drawing.ObjectPainter,DevExpress.Utils.Drawing.ObjectInfoArgs)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs"/> class.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which specifies the storage for the most  used pens, fonts and brushes. This value is assigned to the <b>Cache</b> property.

            </param>
            <param name="painter">
		An <see cref="T:DevExpress.Utils.Drawing.ObjectPainter"/> object that provides facilities for painting an element using the default mechanism. This value is assigned to the <b>Painter</b> property.

            </param>
            <param name="info">
		A <see cref="T:DevExpress.Utils.Drawing.ObjectInfoArgs"/> object that contains information about the element being painted. This value is assigned to the <see cref="P:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs.Info"/> property.

            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs.#ctor(DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs)">
            <summary>
                <para>Initializes a new instance of the GroupCaptionCustomDrawEventArgs class with the specified settings.
</para>
            </summary>
            <param name="args">
		A GroupCaptionCustomDrawEventArgs object whose settings should be copied.

            </param>


        </member>
        <member name="P:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs.CaptionBounds">
            <summary>
                <para>Gets the painted caption's bounding rectangle.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Rectangle"/> structure which represents the painted caption's bounding rectangle.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs.DefaultDraw">
            <summary>
                <para>Performs default painting of this element.

</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs.Info">
            <summary>
                <para>Gets information on the painted group.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.Drawing.GroupObjectInfoArgs"/> object which provides information about the painted group.
</value>


        </member>
        <member name="T:DevExpress.XtraEditors.SplitPanelVisibility">

            <summary>
                <para>Lists values that specify the visibility of the panels within a split container.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.SplitPanelVisibility.Both">
            <summary>
                <para>Both <b>Panel1</b> and <b>Panel2</b> are visible.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.SplitPanelVisibility.Panel1">
            <summary>
                <para><b>Panel2</b> is hidden.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.SplitPanelVisibility.Panel2">
            <summary>
                <para><b>Panel1</b> is hidden.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.SplitFixedPanel">

            <summary>
                <para>Lists values that specify which panel within the split container is fixed.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.SplitFixedPanel.None">
            <summary>
                <para>The panels' widths (or heights) are proportionally changed when a split container is being resized.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.SplitFixedPanel.Panel1">
            <summary>
                <para>The width (height if the panels are displayed one above another) of the <see cref="P:DevExpress.XtraEditors.SplitContainerControl.Panel1"/> isn't changed when the split container is resized.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.SplitFixedPanel.Panel2">
            <summary>
                <para>The width (height if the panels are displayed one above another) of the <see cref="P:DevExpress.XtraEditors.SplitContainerControl.Panel2"/> isn't changed when the split container is resized.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.DXMouseEventArgs">

            <summary>
                <para>Provides data for mouse events.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.DXMouseEventArgs.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.DXMouseEventArgs"/> class with the specified parameters.
</para>
            </summary>
            <param name="buttons">
		A <see cref="T:System.Windows.Forms.MouseButtons"/> enumeration value that defines which mouse button was pressed. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.Button"/> property.

            </param>
            <param name="clicks">
		An integer value which specifies the number of times the mouse button was pressed and released. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.Clicks"/> property.

            </param>
            <param name="x">
		An integer value which specifies the x-coordinate of a mouse click, in pixels. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.X"/> property.

            </param>
            <param name="y">
		An integer value which specifies the y-coordinate of a mouse click, in pixels. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.Y"/> property.

            </param>
            <param name="delta">
		An integer value which specifies a signed count of the number of detents the mouse wheel has rotated. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.Delta"/> property.


            </param>


        </member>
        <member name="M:DevExpress.Utils.DXMouseEventArgs.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.DXMouseEventArgs"/> class.
</para>
            </summary>
            <param name="buttons">
		A <see cref="T:System.Windows.Forms.MouseButtons"/> enumeration value that defines which mouse button was pressed. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.Button"/> property.

            </param>
            <param name="clicks">
		An integer value which specifies the number of times the mouse button was pressed and released. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.Clicks"/> property.

            </param>
            <param name="x">
		An integer value which specifies the x-coordinate of a mouse click, in pixels. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.X"/> property.

            </param>
            <param name="y">
		An integer value which specifies the y-coordinate of a mouse click, in pixels. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.Y"/> property.

            </param>
            <param name="delta">
		An integer value which specifies a signed count of the number of detents the mouse wheel has rotated. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.Delta"/> property.

            </param>
            <param name="handled">
		<b>true</b> if the event hasn't been handled by a control; otherwise, <b>false</b>. This value is assigned to the <see cref="P:DevExpress.Utils.DXMouseEventArgs.Handled"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.DXMouseEventArgs.GetMouseArgs(System.Windows.Forms.MouseEventArgs)">
            <summary>
                <para>Converts the <see cref="T:System.Windows.Forms.MouseEventArgs"/> object passed as a parameter to a <see cref="T:DevExpress.Utils.DXMouseEventArgs"/> object.
</para>
            </summary>
            <param name="eventArgs">
		A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object which contains data for the <b>MouseUp</b>, <b>MouseDown</b>, and <b>MouseMove</b> events.

            </param>
            <returns>A <see cref="T:DevExpress.Utils.DXMouseEventArgs"/> object which provides data for the mouse events.
</returns>


        </member>
        <member name="M:DevExpress.Utils.DXMouseEventArgs.GetMouseArgs(System.Windows.Forms.Control,System.EventArgs)">
            <summary>
                <para>Converts the <see cref="T:System.Windows.Forms.MouseEventArgs"/> object passed as a parameter to a <see cref="T:DevExpress.Utils.DXMouseEventArgs"/> object.
</para>
            </summary>
            <param name="control">
		A <see cref="T:System.Windows.Forms.Control"/> descendant.

            </param>
            <param name="eventArgs">
		A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object which contains data for the mouse events.

            </param>
            <returns>A <see cref="T:DevExpress.Utils.DXMouseEventArgs"/> object which provides data for the mouse events.
</returns>


        </member>
        <member name="P:DevExpress.Utils.DXMouseEventArgs.Handled">
            <summary>
                <para>Gets or sets a value specifying whether an event has been handled.
</para>
            </summary>
            <value><b>true</b> if the event hasn't been handled by a control; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.DXMouseEventArgs.IsHMouseWheel">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Utils.DXMouseEventArgs.IsMouseEvent">
            <summary>
                <para>Gets whether these event arguments provide data for the MouseUp, MouseDown, and MouseMove events.

</para>
            </summary>
            <value><b>true</b> if this object is of the MouseEventArgs type; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Utils.DXMouseEventArgs.Sync">
            <summary>
                <para>For internal use.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.BaseAppearanceCollection">

            <summary>
                <para>Serves as a base for the classes that provide the appearance settings used to paint DevExpress .NET controls.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.BaseAppearanceCollection"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.Assign(DevExpress.Utils.BaseAppearanceCollection)">
            <summary>
                <para>Copies the settings from the object passed as the parameter.
</para>
            </summary>
            <param name="source">
		A <see cref="T:DevExpress.Utils.BaseAppearanceCollection"/> descendant representing the source of the operation. If <b>null</b> (<b>Nothing</b> in Visual Basic) this method does nothing.

            </param>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.AssignInternal(DevExpress.Utils.BaseAppearanceCollection)">
            <summary>
                <para>Copies the settings from the object passed as the parameter without raising the <see cref="E:DevExpress.Utils.BaseAppearanceCollection.Changed"/> event.
</para>
            </summary>
            <param name="source">
		A <see cref="T:DevExpress.Utils.BaseAppearanceCollection"/> descendant representing the source of the operation. If <b>null</b> (<b>Nothing</b> in Visual Basic) this method does nothing.

            </param>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.BeginUpdate">
            <summary>
                <para>Locks the BaseAppearanceCollection, preventing change notifications (and visual updates) from being raised by the object until the <b>EndUpdate</b> or <b>CancelUpdate</b> method is called.


</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.CancelUpdate">
            <summary>
                <para>Unlocks the BaseAppearanceCollection object after it has been locked by the <b>BeginUpdate</b> method, without causing an immediate visual update.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.BaseAppearanceCollection.Changed">
            <summary>
                <para>Fires when the collection is changed.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.Combine(DevExpress.Utils.BaseAppearanceCollection,DevExpress.Utils.AppearanceDefaultInfo[])">
            <summary>
                <para>Copies the activated appearance settings of the object passed as the parameter to the current object, any properties that aren't activated are set to the value in the default appearance object.
</para>
            </summary>
            <param name="appearances">
		A <see cref="T:DevExpress.Utils.BaseAppearanceCollection"/> descendant representing the source of the operation.

            </param>
            <param name="defaults">
		An array of DevExpress.Utils.AppearanceDefaultInfo objects which represent the default appearance settings.

            </param>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.Combine(DevExpress.Utils.BaseAppearanceCollection,DevExpress.Utils.AppearanceDefaultInfo[],System.Boolean)">
            <summary>
                <para>Copies the activated appearance settings of the object passed as the parameter and activates their corresponding options, any properties not activated are set to the value in the default appearance object.
</para>
            </summary>
            <param name="appearances">
		A <see cref="T:DevExpress.Utils.BaseAppearanceCollection"/> descendant representing the source of the operation.

            </param>
            <param name="defaults">
		An array of DevExpress.Utils.AppearanceDefaultInfo objects which represent the default appearance settings.

            </param>
            <param name="setDefaultUseFlag">
		<b>true</b> to enable options which correspond to the activated appearance settings; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.Dispose">
            <summary>
                <para>Releases all the resources used by the current object. 
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.EndUpdate">
            <summary>
                <para>Unlocks the BaseAppearanceCollection object after a call to the <b>BeginUpdate</b> method and causes an immediate visual update.


</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.GetAppearance(System.String)">
            <summary>
                <para>Gets an appearance object contained within the collection by its name.
</para>
            </summary>
            <param name="name">
		A <see cref="T:System.String"/> value specifying the name of the required appearance object.

            </param>
            <returns>The <see cref="T:DevExpress.Utils.AppearanceObject"/> object within the collection which has the specified name.
</returns>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.GetEnumerator">
            <summary>
                <para>Returns an <see cref="T:System.Collections.IDictionaryEnumerator"/> that can iterate through the hashtable. 
</para>
            </summary>
            <returns>An <see cref="T:System.Collections.IDictionaryEnumerator"/> for the hashtable.
</returns>


        </member>
        <member name="P:DevExpress.Utils.BaseAppearanceCollection.IsDisposed">
            <summary>
                <para>Gets whether the current object has been disposed of.
</para>
            </summary>
            <value><b>true</b> if the current object has been disposed of; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.BaseAppearanceCollection.IsLoading">
            <summary>
                <para>Indicates whether the collection's owner is currently being initialized.
</para>
            </summary>
            <value><b>false</b> always.
</value>


        </member>
        <member name="E:DevExpress.Utils.BaseAppearanceCollection.PaintChanged">
            <summary>
                <para>Occurs when specific settings that control the text appearance are changed.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.Reset">
            <summary>
                <para>Resets the properties of all the appearance objects within the collection to their default values. 
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.RestoreLayoutFromRegistry(System.String)">
            <summary>
                <para>Restores the appearance settings stored at the specified system registry path. 
</para>
            </summary>
            <param name="path">
		A string value specifying the system registry path. If the specified path doesn't exist, calling this method has no effect.

            </param>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.RestoreLayoutFromStream(System.IO.Stream)">
            <summary>
                <para>Restores the appearance settings from the specified stream.
</para>
            </summary>
            <param name="stream">
		A <see cref="T:System.IO.Stream"/> descendant from which the appearance settings are read.

            </param>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.RestoreLayoutFromXml(System.String)">
            <summary>
                <para>Loads the appearance settings stored in the specified XML file.
</para>
            </summary>
            <param name="xmlFile">
		A string value specifying the path to the XML file which contains the appearance settings to be loaded. If the specified file doesn't exist, an exception is raised.

            </param>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.SaveLayoutToRegistry(System.String)">
            <summary>
                <para>Saves the appearance settings to a system registry path.
</para>
            </summary>
            <param name="path">
		A string value specifying the system registry path to which the appearance settings are saved.

            </param>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.SaveLayoutToStream(System.IO.Stream)">
            <summary>
                <para>Saves the appearance settings to a specific stream.
</para>
            </summary>
            <param name="stream">
		A <see cref="T:System.IO.Stream"/> descendant to which the appearance settings are written.

            </param>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.SaveLayoutToXml(System.String)">
            <summary>
                <para>Saves the appearance settings to a specific XML file. 
</para>
            </summary>
            <param name="xmlFile">
		A string value specifying the path to the file in which the appearance settings should be stored. If an empty string is specified, an exception is raised.

            </param>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.ShouldSerialize">
            <summary>
                <para>Tests whether the <see cref="T:DevExpress.Utils.BaseAppearanceCollection"/> should be persisted.
</para>
            </summary>
            <returns><b>true</b> if the object should be persisted; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="E:DevExpress.Utils.BaseAppearanceCollection.SizeChanged">
            <summary>
                <para>Occurs when specific settings that control text size  are changed.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.UpdateRightToLeft(System.Boolean)">
            <summary>
                <para>Updates the right-to-left text direction option.
</para>
            </summary>
            <param name="rightToLeft">
		<b>true</b>, if the text is directed from right to left; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="T:DevExpress.Utils.AppearanceOptionsEx">

            <summary>
                <para>Provides appearance options.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.AppearanceOptionsEx.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceOptionsEx"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.AppearanceOptionsEx.Assign(DevExpress.Utils.Controls.BaseOptions)">
            <summary>
                <para>Copies all the settings from the options object passed as the parameter and assigns them to the current object.
</para>
            </summary>
            <param name="options">
		A <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant whose settings are assigned to the current object.

            </param>


        </member>
        <member name="P:DevExpress.Utils.AppearanceOptionsEx.HighPriority">
            <summary>
                <para>Gets or sets whether the settings specified by the current appearance object have the highest priority.
</para>
            </summary>
            <value><b>true</b> to set the current appearance settings to the highest priority; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Utils.AppearanceObjectEx">

            <summary>
                <para>Represents an appearance object with extended settings.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.AppearanceObjectEx.#ctor(DevExpress.Utils.IAppearanceOwner)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObjectEx"/> class with the specified owner.
</para>
            </summary>
            <param name="owner">
		An object implementing the <b>IAppearanceOwner</b> interface.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObjectEx.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObjectEx"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObjectEx.#ctor(DevExpress.Utils.IAppearanceOwner,DevExpress.Utils.AppearanceObject,System.String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObjectEx"/> class with the specified settings.
</para>
            </summary>
            <param name="owner">
		An object implementing the <b>IAppearanceOwner</b> interface.

            </param>
            <param name="parentAppearance">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which represents the parent appearance object. This value is assigned to the <see cref="P:DevExpress.Utils.AppearanceObject.ParentAppearance"/> property.

            </param>
            <param name="name">
		A <see cref="T:System.String"/> value specifying the name of the created object. This value is assigned to the <see cref="P:DevExpress.Utils.AppearanceObject.Name"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObjectEx.Assign(DevExpress.Utils.AppearanceDefault)">
            <summary>
                <para>Sets the appearance object's settings to default values.
</para>
            </summary>
            <param name="appearanceDefault">
		An <b>AppearanceDefault</b> object containing default appearance settings.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObjectEx.Clone">
            <summary>
                <para>Creates a copy of the current <see cref="T:DevExpress.Utils.AppearanceObjectEx"/> instance.
</para>
            </summary>
            <returns>An <see cref="T:DevExpress.Utils.AppearanceObjectEx"/> object which represents an exact copy of the current object.
</returns>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObjectEx.Options">
            <summary>
                <para>Provides access to the appearance object's options.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceOptionsEx"/> object containing the appearance options.
</value>


        </member>
        <member name="T:DevExpress.Utils.Trimming">

            <summary>
                <para>List values that specify how the characters in a string that do not completely fit into a layout shape are trimmed.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.Trimming.Character">
            <summary>
                <para>Specifies that the text is trimmed to the nearest character.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Trimming.Default">
            <summary>
                <para>Trimming is determined by a control's current settings. The default value is automatically set for a control if an end-user doesn't specify a value.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Trimming.EllipsisCharacter">
            <summary>
                <para>Specifies that the text is trimmed to the nearest character, and an ellipsis is inserted at the end of a trimmed line.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Trimming.EllipsisPath">
            <summary>
                <para>The center is removed from trimmed lines and replaced by an ellipsis. The algorithm keeps as much of the last slash-delimited segment of the line as possible.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Trimming.EllipsisWord">
            <summary>
                <para>Specifies that text is trimmed to the nearest word, and an ellipsis is inserted at the end of a trimmed line.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Trimming.None">
            <summary>
                <para>Specifies no trimming.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Trimming.Word">
            <summary>
                <para>Specifies that text is trimmed to the nearest word.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.MagnifierDialogResult">

            <summary>
                <para>An object that stores colors chosen by a user in the <see cref="T:DevExpress.Utils.MagnifierDialog"/> and the Magnifier's last remembered zoom level.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Utils.MagnifierDialogResult.HoverColor">
            <summary>
                <para>Retrieves the last color under the Magnifier crosshair.
</para>
            </summary>
            <value>A Color that was the last color under the Magnifier crosshair before the Magnifier closed.

</value>


        </member>
        <member name="P:DevExpress.Utils.MagnifierDialogResult.SelectedColor">
            <summary>
                <para>Retrieves the last color picked by a user. A user must click the left mouse button to select a color.
</para>
            </summary>
            <value>A nullable Color value that is the last color picked by a user.
</value>


        </member>
        <member name="P:DevExpress.Utils.MagnifierDialogResult.ZoomFactor">
            <summary>
                <para>Retrieves the last remembered Magnifier zoom level.
</para>
            </summary>
            <value>A Single value that is the last remembered Magnifier zoom level.
</value>


        </member>
        <member name="T:DevExpress.Utils.AppearanceOptions">

            <summary>
                <para>Provides appearance options.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.AppearanceOptions.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceOptions"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.AppearanceOptions.Assign(DevExpress.Utils.Controls.BaseOptions)">
            <summary>
                <para>Copies all settings from the options object passed as the parameter and assigns them to the current object.
</para>
            </summary>
            <param name="options">
		A <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant whose settings are assigned to the current object.

            </param>


        </member>
        <member name="P:DevExpress.Utils.AppearanceOptions.Empty">
            <summary>
                <para>Returns an AppearanceOptions object whose settings are not initialized.
</para>
            </summary>
            <value>An AppearanceOptions object whose settings are not initialized.
</value>


        </member>
        <member name="M:DevExpress.Utils.AppearanceOptions.IsEqual(DevExpress.Utils.AppearanceOptions)">
            <summary>
                <para>Tests whether two objects have the same property values.
</para>
            </summary>
            <param name="options">
		The AppearanceOptions object to which the current object is compared.

            </param>
            <returns><b>true</b> if the current object has the same property values as the specified object; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.Utils.AppearanceOptions.UseBackColor">
            <summary>
                <para>Gets or sets whether to use the <see cref="P:DevExpress.Utils.AppearanceObject.BackColor"/> property value.
</para>
            </summary>
            <value><b>true</b> to use the <see cref="P:DevExpress.Utils.AppearanceObject.BackColor"/> property value; <b>false</b> to use the background color specified by the parent appearance object.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceOptions.UseBorderColor">
            <summary>
                <para>Gets or sets whether to use the <see cref="P:DevExpress.Utils.AppearanceObject.BorderColor"/> property value.
</para>
            </summary>
            <value><b>true</b> to use the <see cref="P:DevExpress.Utils.AppearanceObject.BorderColor"/> property value; <b>false</b> to use the border color specified by the parent appearance object.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceOptions.UseFont">
            <summary>
                <para>Gets or sets whether to use the <see cref="P:DevExpress.Utils.AppearanceObject.Font"/> property value.
</para>
            </summary>
            <value><b>true</b> to use the <see cref="P:DevExpress.Utils.AppearanceObject.Font"/> property value; <b>false</b> to use the font settings specified by the parent appearance object.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceOptions.UseForeColor">
            <summary>
                <para>Gets or sets whether to use the <see cref="P:DevExpress.Utils.AppearanceObject.ForeColor"/> property value.
</para>
            </summary>
            <value><b>true</b> to use the <see cref="P:DevExpress.Utils.AppearanceObject.ForeColor"/> property value; <b>false</b> to use the foreground color specified by the parent appearance object.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceOptions.UseImage">
            <summary>
                <para>Gets or sets whether to use the <see cref="P:DevExpress.Utils.AppearanceObject.Image"/> property value.
</para>
            </summary>
            <value><b>true</b> to use the <see cref="P:DevExpress.Utils.AppearanceObject.Image"/> property value; <b>false</b> to use the background image specified by the parent appearance object.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceOptions.UseTextOptions">
            <summary>
                <para>Gets or sets whether to use the <see cref="P:DevExpress.Utils.AppearanceObject.TextOptions"/> property value.
</para>
            </summary>
            <value><b>true</b> to use the <see cref="P:DevExpress.Utils.AppearanceObject.TextOptions"/> property value; <b>false</b> to use the text options specified by the parent appearance object.
</value>


        </member>
        <member name="T:DevExpress.Utils.AppearanceObject">

            <summary>
                <para>Represents an appearance object.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObject"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.#ctor(DevExpress.Utils.AppearanceObject)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObject"/> class with the specified parent.
</para>
            </summary>
            <param name="parentAppearance">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> object representing the parent appearance object. This value is assigned to the <see cref="P:DevExpress.Utils.AppearanceObject.ParentAppearance"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.#ctor(DevExpress.Utils.AppearanceObject,DevExpress.Utils.AppearanceObject)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObject"/> class.
</para>
            </summary>
            <param name="main">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> representing the appearance object whose settings are used to initialize the created object's properties.

            </param>
            <param name="defaultAppearance">
		A <b>DefaultAppearance</b> object representing default appearance settings.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.#ctor(DevExpress.Utils.AppearanceDefault)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObject"/> class with default settings.
</para>
            </summary>
            <param name="appearanceDefault">
		A <see cref="T:DevExpress.Utils.AppearanceDefault"/> object containing the default appearance settings.


            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.#ctor(DevExpress.Utils.IAppearanceOwner,DevExpress.Utils.AppearanceObject)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObject"/> class with the specified owner and parent appearance object.
</para>
            </summary>
            <param name="owner">
		An object implementing the <b>IAppearanceOwner</b> interface.

            </param>
            <param name="parentAppearance">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which represents the parent appearance object. This value is assigned to the <see cref="P:DevExpress.Utils.AppearanceObject.ParentAppearance"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.#ctor(DevExpress.Utils.AppearanceObject,DevExpress.Utils.AppearanceDefault)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObject"/> class with the specified settings.
</para>
            </summary>
            <param name="main">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> object whose settings are used to initialize the created object's properties.

            </param>
            <param name="appearanceDefault">
		A <see cref="T:DevExpress.Utils.AppearanceDefault"/> object.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObject"/> class with the specified name.
</para>
            </summary>
            <param name="name">
		A <see cref="T:System.String"/> value specifying the name of the created object. This value is assigned to the <see cref="P:DevExpress.Utils.AppearanceObject.Name"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.#ctor(DevExpress.Utils.IAppearanceOwner,DevExpress.Utils.AppearanceObject,System.String)">
            <summary>
                <para>Initializes a new instance of the AppearanceObject class with the specified owner, parent and name.
</para>
            </summary>
            <param name="owner">
		An object implementing the <b>IAppearanceOwner</b> interface.

            </param>
            <param name="parentAppearance">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which represents the parent of the created object. This value is assigned to the <see cref="P:DevExpress.Utils.AppearanceObject.ParentAppearance"/> property.

            </param>
            <param name="name">
		A <see cref="T:System.String"/> value specifying the name of the created object. This value is assigned to the <see cref="P:DevExpress.Utils.AppearanceObject.Name"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.#ctor(DevExpress.Utils.AppearanceObject,System.String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObject"/> class with the specified name and parent.
</para>
            </summary>
            <param name="parentAppearance">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which represents the parent of the created object. This value is assigned to the <see cref="P:DevExpress.Utils.AppearanceObject.ParentAppearance"/> property.

            </param>
            <param name="name">
		A <see cref="T:System.String"/> value specifying the name of the created object. This value is assigned to the <see cref="P:DevExpress.Utils.AppearanceObject.Name"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.#ctor(DevExpress.Utils.IAppearanceOwner,System.Boolean)">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="owner">
		 

            </param>
            <param name="reserved">
		 

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.Assign(DevExpress.Utils.AppearanceObject)">
            <summary>
                <para>Copies all settings from the appearance object passed as a parameter.
</para>
            </summary>
            <param name="source">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> object representing the source of the operation.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.Assign(DevExpress.Utils.AppearanceDefault)">
            <summary>
                <para>Sets the appearance object's settings to default values.
</para>
            </summary>
            <param name="appearanceDefault">
		An <b>AppearanceDefault</b> object containing default appearance settings.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.AssignInternal(DevExpress.Utils.AppearanceObject)">
            <summary>
                <para>Copies all the settings in the appearance object passed as the parameter to the current object without raising the <see cref="E:DevExpress.Utils.AppearanceObject.Changed"/> event.
</para>
            </summary>
            <param name="val">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> object representing the source of the operation.

            </param>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.BackColor">
            <summary>
                <para>Gets or sets the background color if the <see cref="P:DevExpress.Utils.AppearanceObject.BackColor2"/> property's value is <b>Color.Empty</b>. Otherwise, it specifies the gradient's starting color.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> object specifying the background color.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.BackColor2">
            <summary>
                <para>Gets or sets the end color of the  background's gradient brush.

</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> object specifying the end color of the linear gradient brush used to fill the background.

</value>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.BeginUpdate">
            <summary>
                <para>Locks the AppearanceObject object by disallowing visual updates until the <b>EndUpdate</b> or <b>CancelUpdate</b> method is called.


</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.BorderColor">
            <summary>
                <para>Gets or sets the border color.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> object specifying the border color.
</value>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CalcDefaultTextSize(DevExpress.Utils.Drawing.GraphicsCache)">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="cache">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CalcDefaultTextSize">
            <summary>
                <para>Calculates the size of a string painted with the default font.
</para>
            </summary>
            <returns>A System.Drawing.Size structure which represents the size (in pixels) of a string. 
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CalcDefaultTextSize(System.Drawing.Graphics)">
            <summary>
                <para>Calculates the size of a string painted with the font specified by the current object.

</para>
            </summary>
            <param name="g">
		A <see cref="T:System.Drawing.Graphics"/> object which provides painting facilities. 

            </param>
            <returns>A <see cref="T:System.Drawing.Size"/> structure which represents the size (in pixels) of a string. 
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.StringFormat,System.String,System.Int32)">
            <summary>
                <para>Calculates the size of the specified string drawn with the specified <see cref="T:System.Drawing.StringFormat"/> object.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides storage for pens, fonts and brushes.

            </param>
            <param name="sf">
		A <see cref="T:System.Drawing.StringFormat"/> object which represents formatting information, such as line spacing and alignment, for the string.

            </param>
            <param name="s">
		A <see cref="T:System.String"/> value which represents a string to measure.

            </param>
            <param name="width">
		An integer value specifying the maximum width of the string (in pixels).

            </param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> structure which represents the size, in pixels, of the string.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Int32)">
            <summary>
                <para>Calculates the size of the specified string.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides storage for pens, fonts and brushes.

            </param>
            <param name="s">
		The string to be measured.

            </param>
            <param name="width">
		An integer value specifying the maximum width of the string (in pixels).

            </param>
            <returns>The measured size of the string, in pixels.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.StringFormat,System.String,System.Int32,System.Int32)">
            <summary>
                <para>Calculates the string size.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides storage for pens, fonts and brushes.

            </param>
            <param name="sf">
		A StringFormat object that stores line spacing, alignment and other formatting setting for the string.

            </param>
            <param name="s">
		A String value that is the string, whose size is to be obtained.

            </param>
            <param name="width">
		An Int32 value that is the maximum allowed string width.

            </param>
            <param name="height">
		An Int32 value that is the maximum allowed string height.

            </param>
            <returns>A Size structure that is the string size.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.StringFormat,System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
                <para>Calculates the string size.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides storage for pens, fonts and brushes.

            </param>
            <param name="sf">
		A StringFormat object that stores line spacing, alignment and other formatting setting for the string.

            </param>
            <param name="s">
		A String value that is the string, whose size is to be obtained.

            </param>
            <param name="width">
		An Int32 value that is the maximum allowed string width.

            </param>
            <param name="height">
		An Int32 value that is the maximum allowed string height.

            </param>
            <param name="isCropped">
		A Boolean value that specifies whether or not the string is trimmed.

            </param>
            <returns>A Size structure that is the string size.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(System.Drawing.Graphics,System.String,System.Int32)">
            <summary>
                <para>Calculates the size of the specified string.
</para>
            </summary>
            <param name="g">
		A <see cref="T:System.Drawing.Graphics"/> object which provides painting facilities. 

            </param>
            <param name="s">
		The string to be measured.

            </param>
            <param name="width">
		An integer value specifying the maximum width of the string, in pixels.

            </param>
            <returns>The measured size of the string, in pixels. 
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(System.Drawing.Graphics,System.Drawing.StringFormat,System.String,System.Int32)">
            <summary>
                <para>Calculates the size of the specified string drawn with the specified <see cref="T:System.Drawing.StringFormat"/> object.
</para>
            </summary>
            <param name="g">
		A <see cref="T:System.Drawing.Graphics"/> object which provides painting facilities. 

            </param>
            <param name="sf">
		A <see cref="T:System.Drawing.StringFormat"/> object which represents formatting information, such as the line spacing for the string. 

            </param>
            <param name="s">
		A <see cref="T:System.String"/> value which represents the string to measure. 

            </param>
            <param name="width">
		An integer value specifying the maximum width of the string (in pixels). 

            </param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> structure which represents the size (in pixels) of the string. 
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(System.Drawing.Graphics,System.Drawing.StringFormat,System.String,System.Int32,System.Int32)">
            <summary>
                <para>Calculates the size of the specified string drawn with the specified format, fitting the string into a clipping rectangle.
</para>
            </summary>
            <param name="g">
		A System.Drawing.Graphics object which provides painting facilities. 

            </param>
            <param name="sf">
		A <see cref="T:System.Drawing.StringFormat"/> object that contains formatting information, such as the line spacing and alignment of the string. 

            </param>
            <param name="s">
		The string to be measured. 

            </param>
            <param name="width">
		The maximum width of the clipping rectangle that will fit the string (in pixels). 

            </param>
            <param name="height">
		The maximum height of the clipping rectangle that will fit the string (in pixels). 

            </param>
            <returns>The measured size of the string, in pixels. 
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(System.Drawing.Graphics,System.Drawing.StringFormat,System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
                <para>Calculates the size of the specified string when it's drawn with the specified font, fitting the string into a clipping rectangle. Allows you to determine whether the string does not fit the clipping rectangle.
</para>
            </summary>
            <param name="g">
		A System.Drawing.Graphics object which provides painting facilities. 

            </param>
            <param name="sf">
		Contains formatting information, such as the line spacing and alignment of the string. 

            </param>
            <param name="s">
		The string to be measured. 

            </param>
            <param name="width">
		The maximum width of the clipping rectangle that will fit the string (in pixels). 

            </param>
            <param name="height">
		The maximum height of the clipping rectangle that will fit the string (in pixels). 

            </param>
            <param name="isCropped">
		<b>true</b> if the text is trimmed (its size is larger than the clipping rectangle); otherwise, <b>false</b>.

            </param>
            <returns>The measured size of the string, in pixels. 
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(DevExpress.Utils.Drawing.GraphicsCache,DevExpress.Utils.StringFormatInfo,System.String,System.Int32)">
            <summary>
                <para>Calculates the string size.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides storage for pens, fonts and brushes.

            </param>
            <param name="sf">
		A StringFormatInfo object that stores line spacing, alignment and other formatting setting for the string.

            </param>
            <param name="s">
		A String value that is the string, whose size is to be obtained.

            </param>
            <param name="width">
		An Int32 value that is the maximum allowed string width.

            </param>
            <returns>A Size structure that is the string size.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(DevExpress.Utils.Drawing.GraphicsCache,DevExpress.Utils.StringFormatInfo,System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
                <para>Calculates the string size.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides storage for pens, fonts and brushes.

            </param>
            <param name="sf">
		A StringFormatInfo object that stores line spacing, alignment and other formatting setting for the string.

            </param>
            <param name="s">
		A String value that is the string, whose size is to be obtained.

            </param>
            <param name="width">
		An Int32 value that is the maximum allowed string width.

            </param>
            <param name="height">
		An Int32 value that is the maximum allowed string height.

            </param>
            <param name="isCropped">
		A Boolean value that specifies whether or not the string is trimmed.

            </param>
            <returns>A Size structure that is the string size.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(DevExpress.Utils.Drawing.GraphicsCache,DevExpress.Utils.StringFormatInfo,System.String,System.Int32,System.Int32)">
            <summary>
                <para>Calculates the string size.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides storage for pens, fonts and brushes.

            </param>
            <param name="sf">
		A StringFormatInfo object that stores line spacing, alignment and other formatting setting for the string.

            </param>
            <param name="s">
		A String value that is the string, whose size is to be obtained.

            </param>
            <param name="width">
		An Int32 value that is the maximum allowed string width.

            </param>
            <param name="height">
		An Int32 value that is the maximum allowed string height.

            </param>
            <returns>A Size structure that is the string size.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(System.Drawing.Graphics,DevExpress.Utils.StringFormatInfo,System.String,System.Int32)">
            <summary>
                <para>Calculates the size of the specified string drawn with the specified <see cref="T:System.Drawing.StringFormat"/> object.
</para>
            </summary>
            <param name="g">
		A <see cref="T:System.Drawing.Graphics"/> object which provides painting facilities. 

            </param>
            <param name="sf">
		A StringFormatInfo  object which represents formatting information, such as the line spacing for the string. 

            </param>
            <param name="s">
		A <see cref="T:System.String"/> value which represents the string to measure. 

            </param>
            <param name="width">
		An integer value specifying the maximum width of the string (in pixels). 

            </param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> structure which represents the size (in pixels) of the string. 
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSizeInt(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Int32)">
            <summary>
                <para>Calculates the length of the specified string.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides storage for pens, fonts and brushes.

            </param>
            <param name="s">
		The string to measure.

            </param>
            <param name="width">
		An integer value specifying the maximum width of the string (in pixels).

            </param>
            <returns>A <see cref="T:System.Drawing.Size"/> structure that is the size of the string (in pixels).
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSizeInt(DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.StringFormat,System.String,System.Int32)">
            <summary>
                <para>Calculates the length of the specified string drawn with the specified <see cref="T:System.Drawing.StringFormat"/> object.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides storage for pens, fonts and brushes.

            </param>
            <param name="sf">
		A <see cref="T:System.Drawing.StringFormat"/> object that contains formatting information, such as the line spacing and alignment of the string.

            </param>
            <param name="s">
		The string to measure.

            </param>
            <param name="width">
		An integer value specifying the maximum width of the string (in pixels).

            </param>
            <returns>A <see cref="T:System.Drawing.Size"/> structure that is the size of the string (in pixels).
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSizeInt(System.Drawing.Graphics,System.String,System.Int32)">
            <summary>
                <para>Calculates the length of the specified string.

</para>
            </summary>
            <param name="g">
		A <see cref="T:System.Drawing.Graphics"/> object which provides painting facilities. 

            </param>
            <param name="s">
		The string to measure. 

            </param>
            <param name="width">
		An integer value specifying the maximum width of the string (in pixels). 

            </param>
            <returns>A System.Drawing.Size structure that is the size of the string (in pixels). 
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSizeInt(System.Drawing.Graphics,System.Drawing.StringFormat,System.String,System.Int32)">
            <summary>
                <para>Calculates the length of the specified string drawn with the specified <see cref="T:System.Drawing.StringFormat"/> object.

</para>
            </summary>
            <param name="g">
		A <see cref="T:System.Drawing.Graphics"/> object that provides painting facilities. 

            </param>
            <param name="sf">
		A <see cref="T:System.Drawing.StringFormat"/> object that contains formatting information, such as the line spacing and alignment of the string. 

            </param>
            <param name="s">
		The string to measure. 

            </param>
            <param name="width">
		An integer value specifying the maximum width of the string (in pixels). 

            </param>
            <returns>A <see cref="T:System.Drawing.Size"/> structure that is the size of the string (in pixels). 
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSizeInt(System.Drawing.Graphics,DevExpress.Utils.StringFormatInfo,System.String,System.Int32)">
            <summary>
                <para>Calculates the length of the specified string drawn with the specified formatting.
</para>
            </summary>
            <param name="g">
		A <see cref="T:System.Drawing.Graphics"/> object which provides painting facilities. 

            </param>
            <param name="sf">
		A StringFormatInfo object that contains formatting information, such as the line spacing and alignment of the string.

            </param>
            <param name="s">
		The string to measure.

            </param>
            <param name="width">
		An integer value specifying the maximum width of the string (in pixels).

            </param>
            <returns>A <see cref="T:System.Drawing.Size"/> structure that is the size of the string (in pixels).
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSizeInt(DevExpress.Utils.Drawing.GraphicsCache,DevExpress.Utils.StringFormatInfo,System.String,System.Int32)">
            <summary>
                <para>Calculates the length of the specified string drawn with the specified formatting.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides storage for pens, fonts and brushes.

            </param>
            <param name="sf">
		A StringFormatInfo object that contains formatting information, such as the line spacing and alignment of the string.

            </param>
            <param name="s">
		The string to measure.

            </param>
            <param name="width">
		An integer value specifying the maximum width of the string (in pixels).

            </param>
            <returns>A <see cref="T:System.Drawing.Size"/> structure that is the size of the string (in pixels).
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CancelUpdate">
            <summary>
                <para>Unlocks the AppearanceObject object after it has been locked by the <b>BeginUpdate</b> method, without causing an immediate visual update.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.AppearanceObject.Changed">
            <summary>
                <para>Fires when the appearance object's properties are changed. 
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.Clone">
            <summary>
                <para>Creates a copy of the current <see cref="T:DevExpress.Utils.AppearanceObject"/> instance.
</para>
            </summary>
            <returns>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which represents an exact copy of the current appearance object.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.Combine(DevExpress.Utils.AppearanceObject)">
            <summary>
                <para>Copies the activated settings from the appearance object passed as the parameter.
</para>
            </summary>
            <param name="val">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> object whose settings are going to be copied.

            </param>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.ControlAppearance">
            <summary>
                <para>Gets the default appearance settings which are used to paint 3-D elements in Windows.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which represents the default appearance settings used to paint 3-D elements in Windows.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.DefaultFont">
            <summary>
                <para>Gets or sets the default font for controls.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Font"/> object which is the default font for controls. The default value is the <b>Tahoma</b> font.

</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.DefaultMenuFont">
            <summary>
                <para>Gets and sets the font used to display text on menus.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Font"/> object which is the default font for menu items. If not set, the property value is specified by the <b>System.Windows.Forms.SystemInformation.MenuFont</b> property.

</value>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.Dispose">
            <summary>
                <para>Releases all resources used by the current appearance object.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawBackground(System.Drawing.Graphics,DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.Rectangle)">
            <summary>
                <para>Draws the background.
</para>
            </summary>
            <param name="graphics">
		A <see cref="T:System.Drawing.Graphics"/> object that provides a means for painting.

            </param>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure specifying the drawing area.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawBackground(DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.Rectangle)">
            <summary>
                <para>Draws the background for the area contained within the specified boundary.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure specifying the drawing area.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawBackground(System.Drawing.Graphics,DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.Rectangle,System.Boolean)">
            <summary>
                <para>Draws the background for the area contained within the specified boundary.
</para>
            </summary>
            <param name="graphics">
		A <see cref="T:System.Drawing.Graphics"/> object that provides a means for painting.

            </param>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure specifying the drawing area.

            </param>
            <param name="useZeroOffset">
		A Boolean value.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawBackground(DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.Rectangle,System.Boolean)">
            <summary>
                <para>Draws the background for the area contained within the specified boundary.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure specifying the drawing area.

            </param>
            <param name="useZeroOffset">
		A Boolean value.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle)">
            <summary>
                <para>Draws a text string at the specified position.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="text">
		A <see cref="T:System.String"/> value representing the text to be drawn.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.Brush)">
            <summary>
                <para>Draws a text string at the specified position using the specified color.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="text">
		A <see cref="T:System.String"/> value representing the text to be drawn.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.

            </param>
            <param name="foreBrush">
		A <see cref="T:System.Drawing.Brush"/> object which determines the color and texture of the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.Brush,System.Drawing.StringFormat)">
            <summary>
                <para>Draws a text string at the specified position using the specified color and format.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="text">
		A <see cref="T:System.String"/> value representing the text to be drawn.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.

            </param>
            <param name="foreBrush">
		A <see cref="T:System.Drawing.Brush"/> object which determines the color and texture of the drawn text.

            </param>
            <param name="format">
		A <see cref="T:System.Drawing.StringFormat"/> object which specifies formatting attributes, such as the line spacing and alignment, that are applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.StringFormat)">
            <summary>
                <para>Draws a text string at the specified position using the specified format.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="text">
		A <see cref="T:System.String"/> value representing the text to be drawn.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.

            </param>
            <param name="format">
		A <see cref="T:System.Drawing.StringFormat"/> object which specifies formatting attributes, such as the line spacing and alignment, that are applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>
                <para>Draws a text string at the specified position using the specified font and format.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="text">
		A <see cref="T:System.String"/> value representing the text to be drawn.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.

            </param>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object which defines the font and associated settings of the text to be drawn.

            </param>
            <param name="format">
		A <see cref="T:System.Drawing.StringFormat"/> object which specifies formatting attributes, such as the line spacing and alignment, that are applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Brush,System.Drawing.StringFormat)">
            <summary>
                <para>Draws a text string at the specified position using the specified font, color and format.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides the storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="s">
		A <see cref="T:System.String"/> value which represents the text to be drawn.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure which represents the drawing area.

            </param>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object which defines the font and associated settings of the text to be drawn.

            </param>
            <param name="foreBrush">
		A <see cref="T:System.Drawing.Brush"/> object which specifies the color and texture of the drawn text.

            </param>
            <param name="strFormat">
		A <see cref="T:System.Drawing.StringFormat"/> object which specifies formatting attributes such as the line spacing and alignment that are applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.Color,DevExpress.Utils.TextOptions)">
            <summary>
                <para>Draws the specified text string in the specified rectangle with the specified Color using the specified TextOptions.
</para>
            </summary>
            <param name="cache">
		GraphicsCache object providing storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="text">
		String to draw.

            </param>
            <param name="bounds">
		Rectangle structure that specifies the location of the drawn text.

            </param>
            <param name="foreColor">
		Color of the drawn text.

            </param>
            <param name="defaultOptions">
		Settings applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Color,System.Drawing.StringFormat)">
            <summary>
                <para>Draws the specified text string at the specified location with the specified Color and Font objects using the formatting attributes of the specified StringFormat.
</para>
            </summary>
            <param name="cache">
		GraphicsCache object providing storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="s">
		String to draw.

            </param>
            <param name="bounds">
		Rectangle structure that specifies the location of the drawn text.

            </param>
            <param name="font">
		Font that defines the text format of the string.

            </param>
            <param name="foreColor">
		Color of the drawn text.

            </param>
            <param name="strFormat">
		StringFormat that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.StringFormat)">
            <summary>
                <para>Draws the specified text string in the specified rectangle with the specified Color using the formatting attributes of the specified StringFormat.
</para>
            </summary>
            <param name="cache">
		GraphicsCache object providing storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="s">
		String to draw.

            </param>
            <param name="bounds">
		Rectangle structure that specifies the location of the drawn text.

            </param>
            <param name="foreColor">
		Color of the drawn text.

            </param>
            <param name="strFormat">
		StringFormat that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.Color,DevExpress.Utils.StringFormatInfo)">
            <summary>
                <para>Draws the specified text string in the specified rectangle with the specified Color using the formatting attributes.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides the storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="s">
		A <see cref="T:System.String"/> value which represents the text to be drawn.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure which represents the drawing area.

            </param>
            <param name="foreColor">
		A <see cref="T:System.Drawing.Brush"/> object which specifies the color and texture of the drawn text.

            </param>
            <param name="strFormat">
		A StringFormatInfo object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Brush,DevExpress.Utils.StringFormatInfo)">
            <summary>
                <para>Draws the specified text string in the specified rectangle with the specified Font using the specified formatting attributes.
</para>
            </summary>
            <param name="cache">
		A GraphicsCache object providing storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="s">
		A String to draw.

            </param>
            <param name="bounds">
		A Rectangle structure that specifies the location of the drawn text.

            </param>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object which defines the font and associated settings of the text to be drawn.

            </param>
            <param name="foreBrush">
		A <see cref="T:System.Drawing.Brush"/> object which specifies the color and texture of the drawn text.

            </param>
            <param name="strFormat">
		A StringFormatInfo object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Color,DevExpress.Utils.StringFormatInfo)">
            <summary>
                <para>Draws the specified text string in the specified rectangle with the specified Font using the specified formatting attributes.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides the storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="s">
		A <see cref="T:System.String"/> value which represents the text to be drawn.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.

            </param>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object which defines the font and associated settings of the text to be drawn.

            </param>
            <param name="foreColor">
		A <see cref="T:System.Drawing.Brush"/> object which specifies the color and texture of the drawn text.

            </param>
            <param name="strFormat">
		A StringFormatInfo object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.Brush,DevExpress.Utils.StringFormatInfo)">
            <summary>
                <para>Draws the specified text string in the specified rectangle using the specified formatting attributes.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides the storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="text">
		A <see cref="T:System.String"/> value which represents the text to be drawn.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.

            </param>
            <param name="foreBrush">
		A <see cref="T:System.Drawing.Brush"/> object which specifies the color and texture of the drawn text.

            </param>
            <param name="format">
		A StringFormatInfo object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.Font,DevExpress.Utils.StringFormatInfo)">
            <summary>
                <para>Draws the specified text string in the specified rectangle with the specified Font using the specified formatting attributes.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides the storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="text">
		A <see cref="T:System.String"/> value which represents the text to be drawn.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.

            </param>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object which defines the font and associated settings of the text to be drawn.

            </param>
            <param name="format">
		A StringFormatInfo object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,DevExpress.Utils.StringFormatInfo)">
            <summary>
                <para>Draws the specified text string in the specified rectangle using the specified formatting attributes.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides the storage for the pens, fonts and brushes used during painting.


            </param>
            <param name="text">
		A <see cref="T:System.String"/> value which represents the text to be drawn.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.

            </param>
            <param name="format">
		A StringFormatInfo object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawVString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.Rectangle,System.Drawing.StringFormat,System.Int32)">
            <summary>
                <para>Draws a text string vertically with the specified angle and at the specified position using the specified font, color and format.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides the storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="text">
		A <see cref="T:System.String"/> value which represents the text to be drawn.

            </param>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object which defines the font and associated settings of the text to be drawn.

            </param>
            <param name="foreBrush">
		A <see cref="T:System.Drawing.Brush"/> object which specifies the color and texture of the drawn text.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure which represents the drawing area.

            </param>
            <param name="strFormat">
		A <see cref="T:System.Drawing.StringFormat"/> object which specifies formatting attributes such as the line spacing and alignment that are applied to the drawn text.

            </param>
            <param name="angle">
		An integer value specifying the angle in degrees at which the text should be drawn.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawVString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.Rectangle,DevExpress.Utils.StringFormatInfo,System.Int32)">
            <summary>
                <para>Draws the specified text string in the specified rectangle with the specified Font using the formatting attributes.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides the storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="text">
		A <see cref="T:System.String"/> value which represents the text to be drawn.

            </param>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object which defines the font and associated settings of the text to be drawn.

            </param>
            <param name="foreBrush">
		A <see cref="T:System.Drawing.Brush"/> object which specifies the color and texture of the drawn text.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.

            </param>
            <param name="strFormat">
		A StringFormatInfo object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.

            </param>
            <param name="angle">
		An integer value specifying the angle in degrees at which the text should be drawn.

            </param>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.EmptyAppearance">
            <summary>
                <para>Returns an empty appearance object.
</para>
            </summary>
            <value>An AppearanceObject object whose settings are not initialized.
</value>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.EndUpdate">
            <summary>
                <para>Unlocks the AppearanceObject object after a call to the <b>BeginUpdate</b> method and causes an immediate visual update.


</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.FillRectangle(DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.Rectangle)">
            <summary>
                <para>Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.Rectangle"/> structure.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.FillRectangle(DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.Rectangle,System.Boolean)">
            <summary>
                <para>Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.Rectangle"/> structure.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.

            </param>
            <param name="useZeroOffset">
		A Boolean value.

            </param>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.Font">
            <summary>
                <para>Gets or sets the font used to paint the text.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Font"/> object specifying the font used to display the contents of elements.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.FontHeight">
            <summary>
                <para>Gets the height of the font used by the appearance object.
</para>
            </summary>
            <value>An integer value which specifies the font's height. 
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.FontSizeDelta">
            <summary>
                <para>Gets or sets an integer value by which the font size is adjusted.
</para>
            </summary>
            <value>An integer value by which the font size is adjusted.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.FontStyleDelta">
            <summary>
                <para>Gets or sets an additional style to be applied to the font.
</para>
            </summary>
            <value>A <b>System.Drawing.FontStyle</b> enumeration value that specifies a style by which to modify the font.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.ForeColor">
            <summary>
                <para>Gets or sets the foreground color. 
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> structure specifying the foreground color.
</value>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetAppearanceByFont">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetAppearanceByOption(System.String)">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="option">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetBackBrush(DevExpress.Utils.Drawing.GraphicsCache)">
            <summary>
                <para>Gets the solid brush used to draw the element's background.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides access to the pens and brushes used for painting.

            </param>
            <returns>A <see cref="T:System.Drawing.Brush"/> descendant representing the brush specified by the appearance object's settings.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetBackBrush(DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.Rectangle)">
            <summary>
                <para>Gets the brush used to draw an element's background.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides access to the pens and brushes used for painting.

            </param>
            <param name="rect">
		A <see cref="T:System.Drawing.Rectangle"/> structure specifying the rectangle for which a brush is created.

            </param>
            <returns>A <see cref="T:System.Drawing.Brush"/> descendant representing the brush specified by the appearance object's settings.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetBackColor">
            <summary>
                <para>Gets the background color specified by the appearance object's settings.
</para>
            </summary>
            <returns>A <see cref="T:System.Drawing.Color"/> object representing the background color specified by the appearance object's settings.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetBackColor2">
            <summary>
                <para>Gets the ending color of the linear gradient brush, specified by the appearance object's settings.
</para>
            </summary>
            <returns>A <see cref="T:System.Drawing.Color"/> object representing the end color of the linear gradient brush as specified by the appearance object's settings.

</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetBackPen(DevExpress.Utils.Drawing.GraphicsCache)">
            <summary>
                <para>Gets the pen used to draw the element's background lines and curves.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides access to the pens and brushes used for painting.

            </param>
            <returns>A <see cref="T:System.Drawing.Pen"/> object representing a pen specified by the appearance object's settings.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetBackPen(DevExpress.Utils.Drawing.GraphicsCache,System.Int32)">
            <summary>
                <para>Gets the pen used to draw the element's background lines and curves.
</para>
            </summary>
            <param name="cache">
		A GraphicsCache object that provides access to the pens and brushes used for painting. 

            </param>
            <param name="width">
		An Int32 value that specifies the width of the returned Pen.

            </param>
            <returns>A <see cref="Pen"/> object representing a pen specified by the appearance object's settings. 
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetBorderBrush(DevExpress.Utils.Drawing.GraphicsCache)">
            <summary>
                <para>Gets the brush used to draw the element's border.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides access to the pens and brushes used for painting.

            </param>
            <returns>A <see cref="T:System.Drawing.Brush"/> descendant representing a brush specified by the appearance object's settings.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetBorderColor">
            <summary>
                <para>Gets the element's border color specified by the appearance object's settings.
</para>
            </summary>
            <returns>A <see cref="T:System.Drawing.Color"/> object representing the element's border color specified by the appearance object's settings.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetBorderPen(DevExpress.Utils.Drawing.GraphicsCache)">
            <summary>
                <para>Gets the pen used to draw the border's lines and curves. 
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides access to the pens and brushes used for painting.

            </param>
            <returns>A <see cref="T:System.Drawing.Pen"/> object representing a pen specified by the appearance object's settings.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetBorderPen(DevExpress.Utils.Drawing.GraphicsCache,System.Int32)">
            <summary>
                <para>Gets the pen used to draw the element's borders.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides access to the pens and brushes used for painting. 

            </param>
            <param name="width">
		An Int32 value that specifies the width of the returned Pen.

            </param>
            <returns>A <see cref="Pen"/> object that is the pen specified by the appearance object's settings. 
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetFont">
            <summary>
                <para>Gets the font settings specified by the appearance object's settings.
</para>
            </summary>
            <returns>A <see cref="T:System.Drawing.Font"/> object specifying the font used to display the contents of elements.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetFontHeight(DevExpress.Utils.Drawing.GraphicsCache)">
            <summary>
                <para>Returns the font height.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that stores graphics and font settings.

            </param>
            <returns>An Int32 value that is the font height.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetForeBrush(DevExpress.Utils.Drawing.GraphicsCache)">
            <summary>
                <para>Gets the solid brush whose color is specified by the <see cref="P:DevExpress.Utils.AppearanceObject.ForeColor"/> property.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides access to the pens and brushes used for painting.

            </param>
            <returns>A <see cref="T:System.Drawing.Brush"/> descendant representing a brush specified by the appearance object's settings.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetForeColor">
            <summary>
                <para>Gets the foreground color specified by the appearance object's settings.
</para>
            </summary>
            <returns>A <see cref="T:System.Drawing.Color"/> structure specifying the element content's foreground color.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetForePen(DevExpress.Utils.Drawing.GraphicsCache)">
            <summary>
                <para>Gets the pen whose color is specified by the <see cref="P:DevExpress.Utils.AppearanceObject.ForeColor"/> property.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides access to the pens and brushes used for painting.

            </param>
            <returns>A <see cref="T:System.Drawing.Pen"/> object representing a pen specified by the appearance object's settings.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetGradientMode">
            <summary>
                <para>Gets the background gradient's direction specified by the appearance object's settings.
</para>
            </summary>
            <returns>A <see cref="T:System.Drawing.Drawing2D.LinearGradientMode"/> enumeration value giving the gradient's direction as specified by the appearance object's settings.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetImage">
            <summary>
                <para>Gets the background image specified by the appearance object's settings.
</para>
            </summary>
            <returns>A <see cref="T:System.Drawing.Image"/> object representing the element's background image as specified by the appearance object's settings.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetStringFormat">
            <summary>
                <para>Gets the formatting attributes specified by the appearance object's settings.
</para>
            </summary>
            <returns>A <see cref="T:System.Drawing.StringFormat"/> object which specifies formatting attributes, such as the line spacing and alignment.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetStringFormat(DevExpress.Utils.TextOptions)">
            <summary>
                <para>Gets the formatting attributes specified by the <see cref="P:DevExpress.Utils.AppearanceObject.TextOptions"/> object passed as the parameter.
</para>
            </summary>
            <param name="defaultOptions">
		A <see cref="T:DevExpress.Utils.TextOptions"/> object which provides the text settings.

            </param>
            <returns>A <see cref="T:System.Drawing.StringFormat"/> object which specifies formatting attributes (such as the line spacing and alignment) based on the text settings specified.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetStringFormatInfo">
            <summary>
                <para>Gets the formatting attributes specified by the appearance object's settings.
</para>
            </summary>
            <returns>A StringFormatInfo object which specifies formatting attributes, such as the line spacing and alignment.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetTextOptions">
            <summary>
                <para>Gets the text options specified by the appearance object's settings.
</para>
            </summary>
            <returns>A <b>TextOptions</b> object containing the text options.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetTextureBrush">
            <summary>
                <para>Returns a TextureBrush object which uses the image specified by the <see cref="P:DevExpress.Utils.AppearanceObject.Image"/> property to fill the interior of a shape.
</para>
            </summary>
            <returns>A System.Drawing.TextureBrush object which represents the brush that fills the interior of a shape with the image specified by the <see cref="P:DevExpress.Utils.AppearanceObject.Image"/> property.
</returns>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.GradientMode">
            <summary>
                <para>Gets or sets the background gradient's direction.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Drawing2D.LinearGradientMode"/> enumeration value specifying the gradient's direction.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.HAlignment">
            <summary>
                <para>Gets the horizontal alignment of the appearance object's text.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.HorzAlignment"/> enumeration value specifying the horizontal alignment of the text.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.Image">
            <summary>
                <para>Gets or sets the background image.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Image"/> object specifying the background image.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.IsDisposed">
            <summary>
                <para>Gets whether the current object has been disposed of.
</para>
            </summary>
            <value><b>true</b> if the current object has been disposed of; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.IsEqual(DevExpress.Utils.AppearanceObject)">
            <summary>
                <para>Tests whether two objects have the same property values.
</para>
            </summary>
            <param name="val">
		The AppearanceObject object to which the current object is compared.

            </param>
            <returns><b>true</b> if the current object has the same property values as the specified object; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.Name">
            <summary>
                <para>Gets or sets the name of the current appearance object.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value which specifies the name of the current appearance object.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.Options">
            <summary>
                <para>Provides access to the appearance object's options.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceOptions"/> object containing the appearance options.
</value>


        </member>
        <member name="E:DevExpress.Utils.AppearanceObject.PaintChanged">
            <summary>
                <para>Occurs when specific settings that control the text appearance are changed.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.ParentAppearance">
            <summary>
                <para>Gets the parent appearance object.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object representing the parent appearance object. <b>null</b> (<b>Nothing</b> in Visual Basic) if no parent appearance object is assigned.
</value>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.Reset">
            <summary>
                <para>Reverts the appearance object's properties to their default values.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.ShouldSerialize">
            <summary>
                <para>Tests whether the <see cref="T:DevExpress.Utils.AppearanceObject"/> should be persisted.
</para>
            </summary>
            <returns><b>true</b>, if the object should be persisted; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="E:DevExpress.Utils.AppearanceObject.SizeChanged">
            <summary>
                <para>Occurs when specific settings that control the size of text are changed.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.TextOptions">
            <summary>
                <para>Provides access to text rendering options (horizontal and vertical alignment, word wrapping, trimming options, etc.).
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.TextOptions"/> object containing text options.
</value>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.ToString">
            <summary>
                <para>Returns a string representing the current appearance object.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> value which represents an appearance object.
</returns>


        </member>
        <member name="T:DevExpress.Utils.Drawing.StubGlyphOptions">

            <summary>
                <para>Provides appearance and behavior settings for stub glyphs.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Drawing.StubGlyphOptions.#ctor">
            <summary>
                <para>Initializes a new instance of the StubGlyphOptions class with the default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.Drawing.StubGlyphOptions.AllowStubGlyphs">
            <summary>
                <para>Gets or sets whether or not items that have no images should display stub glyphs.
</para>
            </summary>
            <value>A <see cref="DefaultBoolean"/> enumerator value that specifies whether or not items that have no images should display stub glyphs.
The <see cref="F:DevExpress.Utils.DefaultBoolean.Default"/> value is equal to <see cref="F:DevExpress.Utils.DefaultBoolean.False"/>.
</value>


        </member>
        <member name="M:DevExpress.Utils.Drawing.StubGlyphOptions.Assign(DevExpress.Utils.Drawing.StubGlyphOptions)">
            <summary>
                <para>Copies all settings of the target StubGlyphOptions object to this StubGlyphOptions object.
</para>
            </summary>
            <param name="options">
		A target StubGlyphOptions object whose settings are to be copied.

            </param>


        </member>
        <member name="P:DevExpress.Utils.Drawing.StubGlyphOptions.CaseMode">
            <summary>
                <para>Gets or sets the case mode for stub glyph captions.
</para>
            </summary>
            <value>A <see cref="GlyphTextCaseMode"/> enumerator value that specifies the case mode for stub glyph captions.
</value>


        </member>
        <member name="E:DevExpress.Utils.Drawing.StubGlyphOptions.Changed">
            <summary>
                <para>Occurs whenever the StubGlyphOptions object changes.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.Drawing.StubGlyphOptions.ColorMode">
            <summary>
                <para>Gets or sets the stub glyphs' color scheme.
</para>
            </summary>
            <value>A <see cref="GlyphColorMode"/> enumerator value that specifies the stub glyphs' color scheme.
</value>


        </member>
        <member name="P:DevExpress.Utils.Drawing.StubGlyphOptions.CornerRadius">
            <summary>
                <para>Gets or sets the corner radius for rectangular stub glyphs.
</para>
            </summary>
            <value>An Int32 value that is the corner radius for rectangular stub glyphs.
</value>


        </member>
        <member name="P:DevExpress.Utils.Drawing.StubGlyphOptions.DefaultFont">
            <summary>
                <para>Provides access to the default stub glyph caption font.
</para>
            </summary>
            <value>A Font object applied to stub glyph captions by default.
</value>


        </member>
        <member name="P:DevExpress.Utils.Drawing.StubGlyphOptions.Font">
            <summary>
                <para>Gets or sets the font that should be applied to stub glyph captions.
</para>
            </summary>
            <value>A Font object that should be applied to stub glyph captions.
</value>


        </member>
        <member name="P:DevExpress.Utils.Drawing.StubGlyphOptions.HorizontalAlignment">
            <summary>
                <para>Gets or sets the horizontal alignment of stub glyphs' captions.
</para>
            </summary>
            <value>A <see cref="StringAlignment"/> enumerator value that specifies the horizontal alignment of stub glyphs' captions.
</value>


        </member>
        <member name="P:DevExpress.Utils.Drawing.StubGlyphOptions.LetterCount">
            <summary>
                <para>Gets or sets the number of initial letters of a bar item caption that should be displayed by this item's stub glyph.
</para>
            </summary>
            <value>A <see cref="GlyphTextSymbolCount"/> enumerator value that allows you to choose between one and two characters. 
</value>


        </member>
        <member name="P:DevExpress.Utils.Drawing.StubGlyphOptions.Padding">
            <summary>
                <para>Gets or sets the distance between glyph borders and inner text content. 
</para>
            </summary>
            <value>A Padding structure that is the distance between glyph borders and inner text content. 
</value>


        </member>
        <member name="P:DevExpress.Utils.Drawing.StubGlyphOptions.RandomizeColors">
            <summary>
                <para>Gets or sets whether or not different hues of the same color are allowed.
</para>
            </summary>
            <value><b>true</b>, to allow different hues of the same color; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Utils.Drawing.StubGlyphOptions.ShouldSerializeOptions(System.ComponentModel.IComponent)">
            <summary>
                <para>Tests whether or not the StubGlyphOptions should be persisted. 
</para>
            </summary>
            <param name="owner">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="P:DevExpress.Utils.Drawing.StubGlyphOptions.Type">
            <summary>
                <para>Gets or sets the stub glyph shape.
</para>
            </summary>
            <value>A <see cref="GlyphBackgroundType"/> enumerator value that specifies the stub glyph shape.
</value>


        </member>
        <member name="P:DevExpress.Utils.Drawing.StubGlyphOptions.UseFont">
            <summary>
                <para>Gets or sets whether font settings stored in the <see cref="P:DevExpress.Utils.Drawing.StubGlyphOptions.Font"/> section should be applied to stub glyphs' captions.
</para>
            </summary>
            <value><b>true</b>, if font settings stored in the <see cref="P:DevExpress.Utils.Drawing.StubGlyphOptions.Font"/> section should be applied to stub glyphs' captions; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.Drawing.StubGlyphOptions.VerticalAlignment">
            <summary>
                <para>Gets or sets the vertical alignment of stub glyphs' captions.
</para>
            </summary>
            <value>A <see cref="StringAlignment"/> enumerator value that specifies the vertical alignment of stub glyphs' captions.
</value>


        </member>
        <member name="T:DevExpress.Utils.MagnifierDialogArgs">

            <summary>
                <para>Provides settings that allow you to invoke the <see cref="T:DevExpress.Utils.MagnifierDialog"/> with specific settings.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.MagnifierDialogArgs.#ctor">
            <summary>
                <para>Initializes a new instance of the MagnifierDialogArgs class with the default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.MagnifierDialogArgs.CloseOnMouseClick">
            <summary>
                <para>Specifies whether a Magnifier should automatically close immediately after a user clicks the left mouse button to select a color.

</para>
            </summary>
            <value><b>true</b> if the Magnifier should automatically close immediately after a user clicks a left mouse button to select a color; <b>false</b> if the Magnifier closes only when user presses <i>"Esc"</i> or clicks the right mouse button.
</value>


        </member>
        <member name="P:DevExpress.Utils.MagnifierDialogArgs.ColorFormat">
            <summary>
                <para>Gets or sets whether the Magnifier displays hovered and remembered colors in RGB or HEX format.

</para>
            </summary>
            <value>A ColorFormat enumeration value that specifies whether the Magnifier displays hovered and remembered colors in RGB or HEX formats.

</value>


        </member>
        <member name="P:DevExpress.Utils.MagnifierDialogArgs.InitialZoomFactor">
            <summary>
                <para>Gets or sets the Magnifier start-up zoom level. End-users can scroll in and out by using a mouse scroll wheel.
</para>
            </summary>
            <value>A Single value that specifies the Magnifier start-up zoom level.
</value>


        </member>
        <member name="P:DevExpress.Utils.MagnifierDialogArgs.PickColorToClipboard">
            <summary>
                <para>Gets or sets whether or not a color chosen by a user should be automatically copied to the clipboard.
</para>
            </summary>
            <value><b>true</b>, to copy a selected color to the clipboard; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.MagnifierDialogArgs.ShowPixelGrid">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="T:DevExpress.Utils.TrackBarContextButton">

            <summary>
                <para>A scrollable context item.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.TrackBarContextButton.#ctor">
            <summary>
                <para>Initializes a new instance of the TrackBarContextButton class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.TrackBarContextButton.AllowUseMiddleValue">
            <summary>
                <para>Gets or sets whether the tick is displayed in the middle of the track and enables using a custom middle tick value.
</para>
            </summary>
            <value><b>true</b>, if the tick is displayed in the middle of the track; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.TrackBarContextButton.Glyph">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code. This property is not relevant for this class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Utils.TrackBarContextButton.HoverGlyph">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code. This property is not relevant for this class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Utils.TrackBarContextButton.Maximum">
            <summary>
                <para>Gets the maximum track value.
</para>
            </summary>
            <value>An integer value that specifies the maximum track value.
</value>


        </member>
        <member name="P:DevExpress.Utils.TrackBarContextButton.Middle">
            <summary>
                <para>Gets or sets the value located in the middle of the track.
</para>
            </summary>
            <value>An integer value located in the middle of the track.
</value>


        </member>
        <member name="P:DevExpress.Utils.TrackBarContextButton.Minimum">
            <summary>
                <para>Gets the minimum track value.
</para>
            </summary>
            <value>An integer value that specifies the minimum track value.
</value>


        </member>
        <member name="P:DevExpress.Utils.TrackBarContextButton.ShowZoomButtons">
            <summary>
                <para>Gets or sets whether the zoom buttons are displayed.
</para>
            </summary>
            <value><b>true</b>, if the zoom buttons are displayed; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.TrackBarContextButton.SmallChange">
            <summary>
                <para>Gets or sets the value to be added to or subtracted from the <see cref="P:DevExpress.Utils.TrackBarContextButton.Value"/> property when one of the zoom buttons is clicked.
</para>
            </summary>
            <value>An integer value to be added to or subtracted from the <see cref="P:DevExpress.Utils.TrackBarContextButton.Value"/> property when a zoom button is clicked.
</value>


        </member>
        <member name="P:DevExpress.Utils.TrackBarContextButton.TrackWidth">
            <summary>
                <para>Gets or sets the length, in pixels, of the track.
</para>
            </summary>
            <value>An integer value that specifies the length, in pixels, of the track.
</value>


        </member>
        <member name="P:DevExpress.Utils.TrackBarContextButton.Value">
            <summary>
                <para>Gets or sets the track value.
</para>
            </summary>
            <value>An integer value that specifies the track value.
</value>


        </member>
        <member name="T:DevExpress.Utils.MagnifierDialog">

            <summary>
                <para>The Magnifier that allows users to pick colors from anywhere around the screen.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.MagnifierDialog.ShowDialog">
            <summary>
                <para>Initializes a new instance of the MagnifierDialog class with the default settings.
</para>
            </summary>
            <returns>A <see cref="MagnifierDialogResult"/> object that stores the last remembered Magnifier zoom level and colors selected by a user.
</returns>


        </member>
        <member name="M:DevExpress.Utils.MagnifierDialog.ShowDialog(System.Windows.Forms.IWin32Window)">
            <summary>
                <para>Initializes a new instance of the MagnifierDialog class with the specified settings.
</para>
            </summary>
            <param name="owner">
		An IWin32Window object that owns this Magnifier.

            </param>
            <returns>A <see cref="MagnifierDialogResult"/> object that stores the last remembered Magnifier zoom level and colors selected by a user.
</returns>


        </member>
        <member name="M:DevExpress.Utils.MagnifierDialog.ShowDialog(System.Windows.Forms.IWin32Window,System.Single)">
            <summary>
                <para>Initializes a new instance of the MagnifierDialog class with the specified settings.
</para>
            </summary>
            <param name="owner">
		An IWin32Window object that owns this Magnifier.

            </param>
            <param name="initialZoomFactor">
		A Single value that is the initial Magnifier zoom level. Users can zoom in and out using a mouse scroll wheel.

            </param>
            <returns>A <see cref="MagnifierDialogResult"/> object that stores the last remembered Magnifier zoom level and colors selected by a user.
</returns>


        </member>
        <member name="M:DevExpress.Utils.MagnifierDialog.ShowDialog(System.Windows.Forms.IWin32Window,System.Single,System.Boolean)">
            <summary>
                <para>Initializes a new instance of the MagnifierDialog class with the specified settings.
</para>
            </summary>
            <param name="owner">
		An IWin32Window object that owns this Magnifier.

            </param>
            <param name="initialZoomFactor">
		A Single value that is the initial Magnifier zoom level. Users can zoom in and out using a mouse scroll wheel.

            </param>
            <param name="closeOnMouseClick">
		<b>true</b> if the Magnifier should automatically close immediately after a user clicks the left mouse button to select a color; <b>false</b> if the Magnifier closes only when user presses <i>"Esc"</i> or clicks the right mouse button.


            </param>
            <returns>A <see cref="MagnifierDialogResult"/> object that stores the last remembered Magnifier zoom level and colors selected by a user.
</returns>


        </member>
        <member name="M:DevExpress.Utils.MagnifierDialog.ShowDialog(System.Windows.Forms.IWin32Window,System.Single,System.Boolean,System.Boolean,DevExpress.Utils.ColorFormat)">
            <summary>
                <para>Initializes a new instance of the MagnifierDialog class with the specified settings.
</para>
            </summary>
            <param name="owner">
		An IWin32Window object that owns this Magnifier.

            </param>
            <param name="initialZoomFactor">
		A Single value that is the initial Magnifier zoom level. Users can zoom in and out using a mouse scroll wheel.

            </param>
            <param name="closeOnMouseClick">
		<b>true</b> if the Magnifier should automatically close immediately after a user clicks the left mouse button to select a color; <b>false</b> if the Magnifier closes only when user presses <i>"Esc"</i> or clicks the right mouse button.


            </param>
            <param name="pickColorToClipboard">
		<b>true</b>, if the selected color should be copied to the clipboard; otherwise, <b>false</b>.

            </param>
            <param name="colorFormat">
		A ColorFormat that specifies whether the Magnifier displays remembered and hovered colors in RGB or HEX format.


            </param>
            <returns>A <see cref="MagnifierDialogResult"/> object that stores the last remembered Magnifier zoom level and colors selected by a user.
</returns>


        </member>
        <member name="M:DevExpress.Utils.MagnifierDialog.ShowDialog(System.Windows.Forms.IWin32Window,DevExpress.Utils.MagnifierDialogArgs)">
            <summary>
                <para>Initializes a new instance of the MagnifierDialog class with the specified settings.
</para>
            </summary>
            <param name="owner">
		An IWin32Window object that owns this Magnifier.

            </param>
            <param name="args">
		A <see cref="T:DevExpress.Utils.MagnifierDialogArgs"/> object that stores Magnifier settings.

            </param>
            <returns>A <see cref="MagnifierDialogResult"/> object that stores the last remembered Magnifier zoom level and colors selected by a user.
</returns>


        </member>
        <member name="M:DevExpress.Utils.MagnifierDialog.ShowDialog(System.Windows.Forms.IWin32Window,System.Single,System.Boolean,System.Boolean)">
            <summary>
                <para> </para>
            </summary>
            <param name="owner">
		 
            </param>
            <param name="initialZoomFactor">
		 
            </param>
            <param name="closeOnMouseClick">
		 
            </param>
            <param name="pickColorToClipboard">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Utils.MagnifierDialog.ShowDialog(System.Windows.Forms.IWin32Window,System.Single,System.Boolean,System.Boolean,DevExpress.Utils.ColorFormat,System.Boolean)">
            <summary>
                <para> </para>
            </summary>
            <param name="owner">
		 
            </param>
            <param name="initialZoomFactor">
		 
            </param>
            <param name="closeOnMouseClick">
		 
            </param>
            <param name="pickColorToClipboard">
		 
            </param>
            <param name="colorFormat">
		 
            </param>
            <param name="showPixelGrid">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="T:DevExpress.LookAndFeel.Helpers.ContainerUserLookAndFeel">

            <summary>
                <para>Contains settings that specify the look and feel of an XtraUserControl and all DevExpress controls placed on it. 
</para>
            </summary>

        </member>
        <member name="M:DevExpress.LookAndFeel.Helpers.ContainerUserLookAndFeel.#ctor(System.Object)">
            <summary>
                <para>Initializes a new instance of the ContainerUserLookAndFeel class with the specified owner.
</para>
            </summary>
            <param name="owner">
		The owner of the created ContainerUserLookAndFeel object.

            </param>


        </member>
        <member name="M:DevExpress.LookAndFeel.Helpers.ContainerUserLookAndFeel.Dispose">
            <summary>
                <para>Disposes of the current object.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.LookAndFeel.Helpers.ContainerUserLookAndFeel.FormTouchUIMode">
            <summary>
                <para>For internal use. 
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="M:DevExpress.LookAndFeel.Helpers.ContainerUserLookAndFeel.GetTouchScaleFactor">
            <summary>
                <para>Gets the actual touch UI scale factor for the current container.
</para>
            </summary>
            <returns>The actual touch UI scale factor for the current container.
</returns>


        </member>
        <member name="M:DevExpress.LookAndFeel.Helpers.ContainerUserLookAndFeel.GetTouchUI">
            <summary>
                <para>Gets the actual availability of touch UI mode for the current container.
</para>
            </summary>
            <returns>A Boolean value that specifies the actual availability of touch UI mode for the current container.
</returns>


        </member>
        <member name="P:DevExpress.LookAndFeel.Helpers.ContainerUserLookAndFeel.TouchScaleFactor">
            <summary>
                <para>Gets or sets the scale factor used to calculate the size and distance between specific control elements when touch UI mode is enabled.
</para>
            </summary>
            <value>The scale factor used to calculate the size and distance between specific control elements when touch UI mode is enabled. 
</value>


        </member>
        <member name="P:DevExpress.LookAndFeel.Helpers.ContainerUserLookAndFeel.TouchUIMode">
            <summary>
                <para>Gets or sets whether the current container and its child controls use touch UI mode, in which the controls automatically increase their size and the distance between some of their elements.
</para>
            </summary>
            <value>A value that specifies if touch UI mode is enabled for the current container and its child controls.
</value>


        </member>
        <member name="T:DevExpress.LookAndFeel.Helpers.FormUserLookAndFeel">

            <summary>
                <para>Contains settings that specify the look and feel of the current form and all DevExpress controls placed on the form. 
</para>
            </summary>

        </member>
        <member name="M:DevExpress.LookAndFeel.Helpers.FormUserLookAndFeel.#ctor(System.Windows.Forms.Form)">
            <summary>
                <para>Initializes a new instance of the FormUserLookAndFeel class with the specified settings.
</para>
            </summary>
            <param name="owner">
		A Form that owns the newly created FormUserLookAndFeel object.

            </param>


        </member>
        <member name="T:DevExpress.Utils.HideException">

            <summary>
                <para>Prevents default actions when handling specific events. 
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.HideException.#ctor">
            <summary>
                <para>Initializes a new <see cref="T:DevExpress.Utils.HideException"/> class instance.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraBars.Docking2010.ButtonStyle">

            <summary>
                <para>Provides members that specify whether a button is a regular (push button) or check-button.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraBars.Docking2010.ButtonStyle.CheckButton">
            <summary>
                <para>Specifies whether a custom header button is a check or a group radio button.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraBars.Docking2010.ButtonStyle.PushButton">
            <summary>
                <para>Specifies a custom header button is a regular (push) button.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.ToolTipLocation">

            <summary>
                <para>Specifies the location where a tooltip is displayed in relation to the mouse cursor position.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.BottomCenter">
            <summary>
                <para>A tooltip appears vertically aligned at the bottom, and horizontally centered relative to the mouse cursor position.
<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.BottomLeft">
            <summary>
                <para>A tooltip appears vertically aligned at the bottom, and horizontally aligned on the left relative to the mouse cursor position.
<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.BottomRight">
            <summary>
                <para>A tooltip appears vertically aligned at the bottom, and horizontally aligned on the right relative to the mouse cursor position.
<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.Default">
            <summary>
                <para>The default tooltip location.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.Fixed">
            <summary>
                <para>For internal use.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.LeftBottom">
            <summary>
                <para>A tooltip appears horizontally aligned on the left, and vertically aligned at the bottom relative to the mouse cursor position.
<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.LeftCenter">
            <summary>
                <para>A tooltip appears horizontally aligned on the left, and vertically centered relative to the mouse cursor position.
<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.LeftTop">
            <summary>
                <para>A tooltip appears horizontally aligned on the left, and vertically aligned at the top relative to the mouse cursor position.
<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.RightBottom">
            <summary>
                <para>A tooltip appears horizontally aligned on the right, and vertically aligned at the bottom relative to the mouse cursor position.
<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.RightCenter">
            <summary>
                <para>A tooltip appears horizontally aligned on the right, and vertically centered relative to the mouse cursor position.
<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.RightTop">
            <summary>
                <para>A tooltip appears horizontally aligned on the right, and vertically aligned at the top relative to the mouse cursor position.
<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.TopCenter">
            <summary>
                <para>A tooltip appears vertically aligned at the top, and horizontally centered relative to the mouse cursor position.
<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.TopLeft">
            <summary>
                <para>A tooltip appears vertically aligned at the top, and horizontally aligned on the left relative to the mouse cursor position.
<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.TopRight">
            <summary>
                <para>A tooltip appears vertically aligned at the top, and horizontally aligned on the right relative to the mouse cursor position.
<para></para>
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.ToolTipIconType">

            <summary>
                <para>Lists values specifying icon types to be displayed within tooltips.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.Application">
            <summary>
                <para>A tooltip contains the default application icon.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.Asterisk">
            <summary>
                <para>A tooltip contains the system asterisk icon.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.Error">
            <summary>
                <para>A tooltip contains the system error icon.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.Exclamation">
            <summary>
                <para>A tooltip contains the system exclamation icon.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.Hand">
            <summary>
                <para>A tooltip contains the system hand icon.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.Information">
            <summary>
                <para>A tooltip contains the system information icon.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.None">
            <summary>
                <para>A tooltip contains no predefined icon.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.Question">
            <summary>
                <para>A tooltip contains the system question icon.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.Warning">
            <summary>
                <para>A tooltip contains the system warning icon.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.WindLogo">
            <summary>
                <para>A tooltip contains the Windows logo icon.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.ToolTipIconSize">

            <summary>
                <para>Specifies the size of a predefined icon displayed within a tooltip.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipIconSize.Large">
            <summary>
                <para>An icon displayed within a tooltip is large. The icon type can be selected via the <see cref="P:DevExpress.Utils.ToolTipController.IconType"/> property or can be specified in a handler of the <see cref="E:DevExpress.Utils.ToolTipController.BeforeShow"/> event via <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.IconType"/> property.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipIconSize.Small">
            <summary>
                <para>An icon displayed within a tooltip is small. The icon type can be selected via the <see cref="P:DevExpress.Utils.ToolTipController.IconType"/> property or can be specified in a handler of the <see cref="E:DevExpress.Utils.ToolTipController.BeforeShow"/> event via <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.IconType"/> property.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.ToolTipControllerShowEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.Utils.ToolTipController.BeforeShow"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerShowEventArgs.#ctor(System.Windows.Forms.Control,System.Object)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> class and initializes the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl"/> and <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject"/> properties.
</para>
            </summary>
            <param name="control">
		The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl"/> property.

            </param>
            <param name="obj">
		The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerShowEventArgs.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> class and initializes properties with default values
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerShowEventArgs.#ctor(System.Windows.Forms.Control,System.Object,System.String,System.String,DevExpress.Utils.ToolTipLocation,System.Boolean,System.Boolean,System.Int32,DevExpress.Utils.ToolTipIconType,DevExpress.Utils.ToolTipIconSize,System.Object,System.Int32,DevExpress.Utils.AppearanceObject,DevExpress.Utils.AppearanceObject)">
            <summary>
                <para>Initializes a new instance of the ToolTipControllerShowEventArgs class with the specified settings.
</para>
            </summary>
            <param name="control">
		The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl"/> property.

            </param>
            <param name="obj">
		The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject"/> property.

            </param>
            <param name="toolTip">
		A <see cref="T:System.String"/> value that specifies the tooltip's text. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTip"/> property.

            </param>
            <param name="title">
		A <see cref="T:System.String"/> value that specifies the tooltip's title. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Title"/> property.

            </param>
            <param name="toolTipLocation">
		A <see cref="T:DevExpress.Utils.ToolTipLocation"/> value that specifies the relative position of the tooltip window. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTipLocation"/> property.

            </param>
            <param name="showBeak">
		<b>true</b> if the callout beak is displayed when a hint appears; otherwise, <b>false</b>. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ShowBeak"/> property.

            </param>
            <param name="rounded">
		<b>true</b> if tooltip window's corners are rounded; otherwise, <b>false</b>. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Rounded"/> property.

            </param>
            <param name="roundRadius">
		The radius of the rounded corners. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.RoundRadius"/> property.

            </param>
            <param name="iconType">
		A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value that specifies the kind of the predefined icon. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.IconType"/> property.

            </param>
            <param name="iconSize">
		A <see cref="T:DevExpress.Utils.ToolTipIconSize"/> value that specifies the icon's size. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.IconSize"/> property.

            </param>
            <param name="imageList">
		An object that represents the source of the images that can be displayed within tooltips. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ImageList"/> property.

            </param>
            <param name="imageIndex">
		The index of the image to display in the tooltip. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ImageIndex"/> property.

            </param>
            <param name="appearance">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that provides the tooltip's appearance settings. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Appearance"/> property.

            </param>
            <param name="appearanceTitle">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that provides the appearance settings used to paint the tooltip's title. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.AppearanceTitle"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerShowEventArgs.#ctor(System.Windows.Forms.Control,System.Object,System.String,System.String,DevExpress.Utils.ToolTipLocation,System.Boolean,System.Boolean,System.Int32,DevExpress.Utils.ToolTipStyle,DevExpress.Utils.ToolTipIconType,DevExpress.Utils.ToolTipIconSize,System.Object,System.Int32,DevExpress.Utils.AppearanceObject,DevExpress.Utils.AppearanceObject)">
            <summary>
                <para>Initializes a new instance of the ToolTipControllerShowEventArgs class with the specified settings.
</para>
            </summary>
            <param name="control">
		The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl"/> property.

            </param>
            <param name="obj">
		The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject"/> property.

            </param>
            <param name="toolTip">
		A <see cref="T:System.String"/> value that specifies the tooltip's text. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTip"/> property.

            </param>
            <param name="title">
		A <see cref="T:System.String"/> value that specifies the tooltip's title. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Title"/> property.

            </param>
            <param name="toolTipLocation">
		A <see cref="T:DevExpress.Utils.ToolTipLocation"/> value that specifies the relative position of the tooltip window. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTipLocation"/> property.

            </param>
            <param name="showBeak">
		<b>true</b> if the callout beak is displayed when a hint appears; otherwise, <b>false</b>. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ShowBeak"/> property.

            </param>
            <param name="rounded">
		<b>true</b> if tooltip window's corners are rounded; otherwise, <b>false</b>. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Rounded"/> property.

            </param>
            <param name="roundRadius">
		The radius of the rounded corners. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.RoundRadius"/> property.

            </param>
            <param name="style">
		The regular tooltip's style, which controls the look-and-feel settings. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTipStyle"/> property.

            </param>
            <param name="iconType">
		A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value that specifies the kind of the predefined icon. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.IconType"/> property.

            </param>
            <param name="iconSize">
		A <see cref="T:DevExpress.Utils.ToolTipIconSize"/> value that specifies the icon's size. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.IconSize"/> property.

            </param>
            <param name="imageList">
		An object that is the source of the images that can be displayed within tooltips. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ImageList"/> property.


            </param>
            <param name="imageIndex">
		The index of the image to display in the tooltip. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ImageIndex"/> property.

            </param>
            <param name="appearance">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that provides the tooltip's appearance settings. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Appearance"/> property.

            </param>
            <param name="appearanceTitle">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that provides the appearance settings used to paint the tooltip's title. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.AppearanceTitle"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.AllowHtmlText">
            <summary>
                <para>Gets or sets whether HTML formatting tags can be used to format the tooltip's text.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> value that specifies whether HTML formatting tags can be used to format the tooltip's text.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Appearance">
            <summary>
                <para>Gets the tooltip's appearance settings. This property is not in effect for <see cref="T:DevExpress.Utils.SuperToolTip"/> objects.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which provides the tooltip's appearance settings.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.AppearanceTitle">
            <summary>
                <para>Gets the appearance settings used to paint the tooltip's title. This property is not in effect for <see cref="T:DevExpress.Utils.SuperToolTip"/> objects.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which provides the appearance settings used to paint the tooltip's title.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.AutoHide">
            <summary>
                <para>Gets or sets whether the tooltip is hidden after a specific time ellapses.
</para>
            </summary>
            <value><b>true</b> if the tooltip is hidden after a specific time period ellapses; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerShowEventArgs.Equals(System.Object)">
            <summary>
                <para>Determines whether two objects are equal.
</para>
            </summary>
            <param name="obj">
		The object specifying a <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> instance to compare with the current object.

            </param>
            <returns><b>true</b> if the specified object is equal to the current <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> instance.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerShowEventArgs.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current object.
</para>
            </summary>
            <returns>The hash code for the current object.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerShowEventArgs.GetToolTipLocation">
            <summary>
                <para>Gets the actual location of the tooltip window relative to the position where the tooltip should appear.

</para>
            </summary>
            <returns>A <see cref="T:DevExpress.Utils.ToolTipLocation"/> value specifying the relative position of the tooltip window.
</returns>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.IconSize">
            <summary>
                <para>Gets the size of the predefined icon to display in the tooltip.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipIconSize"/> value specifying the icon size.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.IconType">
            <summary>
                <para>Gets or sets the kind of predefined icons to display in the tooltip.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value specifying the kind of predefined icon to display.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ImageIndex">
            <summary>
                <para>Gets or sets the index of an image from the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ImageList"/> to display in the tooltip.
</para>
            </summary>
            <value>The index of a custom image to display in the tooltip.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ImageList">
            <summary>
                <para>Gets or sets the source of images that can be displayed within tooltips.
</para>
            </summary>
            <value>An object that represents the source of images that can be displayed within tooltips.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ObjectBounds">
            <summary>
                <para>Gets or sets the bounds of the current object for which a tooltip is displayed.
</para>
            </summary>
            <value>The bounds of the object for which a tooltip is displayed.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.RightToLeft">
            <summary>
                <para>Gets or sets whether a tooltip's visual elements are aligned to support locales using right-to-left fonts.

</para>
            </summary>
            <value><b>true</b>, if tooltip's visual elements are aligned to support locales using right-to-left fonts; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Rounded">
            <summary>
                <para>Gets or sets whether the tooltip window has rounded corners.
</para>
            </summary>
            <value><b>true</b> if tooltip window's corners are rounded; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.RoundRadius">
            <summary>
                <para>Gets or sets the radius of the rounded corners of the tooltip window.
</para>
            </summary>
            <value>The radius of the rounded corners.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Show">
            <summary>
                <para>Gets or sets whether the tooltip should be displayed.
</para>
            </summary>
            <value><b>true</b> if the tooltip should be displayed; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ShowBeak">
            <summary>
                <para>Tests whether callout beaks are displayed for hints.
</para>
            </summary>
            <value><b>true</b> if the callout beak is displayed when a hint appears; otherwise, <b>false</b>
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.SuperTip">
            <summary>
                <para>Gets or sets a <see cref="T:DevExpress.Utils.SuperToolTip"/>.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.SuperToolTip"/> object.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Title">
            <summary>
                <para>Gets or sets the regular tooltip's title.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value which specifies the regular tooltip's title.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTip">
            <summary>
                <para>Gets or sets the text for the regular tooltip.
</para>
            </summary>
            <value>The string that is the text to display in the regular tooltip.

</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTipAnchor">
            <summary>
                <para>Gets or sets whether the tooltip is anchored relative to the mouse pointer or relative to the editor.
</para>
            </summary>
            <value>A <see cref="ToolTipAnchor"/> value that specifies whether the tooltip is anchored relative to the mouse pointer or relative to the owning control. By <b>Default</b>, the behavior depends on the <see cref="P:DevExpress.Utils.ToolTipController.ToolTipAnchor"/> property and the owning control's <b>ToolTipAnchor</b> setting.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTipImage">
            <summary>
                <para>Gets or sets the image to display within the current tooltip.
</para>
            </summary>
            <value>An <see cref="T:System.Drawing.Image"/> object that specifies the image to display within the current tooltip.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTipIndent">
            <summary>
                <para>Gets or sets the space, in pixels, between the tooltip and the associated visual element.
</para>
            </summary>
            <value>An integer value specifying the space, in pixels, between the tooltip and the associated visual element. The default is <b>16</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTipLocation">
            <summary>
                <para>Gets or sets the location of the tooltip window relative to the position where the tooltip should appear.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipLocation"/> value specifying the relative position of the tooltip window.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTipStyle">
            <summary>
                <para>Gets or sets the look-and-feel settings of the regular tooltip displayed.
 
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipStyle"/> value that specifies the look-and-feel of regular tooltips.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTipType">
            <summary>
                <para>Gets or sets the type of tooltip to be displayed.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipType"/> value that specifies the type of tooltip to be displayed.

</value>


        </member>
        <member name="T:DevExpress.Utils.ToolTipControllerEventArgsBase">

            <summary>
                <para>The base class for classes providing data for <see cref="T:DevExpress.Utils.ToolTipController"/>'s events.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerEventArgsBase.#ctor(System.Windows.Forms.Control,System.Object)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ToolTipControllerEventArgsBase"/> class.
</para>
            </summary>
            <param name="control">
		The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl"/> property.

            </param>
            <param name="obj">
		The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerEventArgsBase.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ToolTipControllerEventArgsBase"/> class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl">
            <summary>
                <para>Gets or sets the control for which a tooltip controller's event is fired.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Control"/> object for which the event is fired.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject">
            <summary>
                <para>Gets or sets the element of the control for which the tooltip should be displayed.
</para>
            </summary>
            <value>An object defining the element for which to display the tooltip.
</value>


        </member>
        <member name="T:DevExpress.Utils.ToolTipControllerCalcSizeEventHandler">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ToolTipController.CalcSize"/> event.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerCalcSizeEventHandler.Invoke(System.Object,DevExpress.Utils.ToolTipControllerCalcSizeEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ToolTipController.CalcSize"/> event.
</para>
            </summary>
            <param name="sender">
		The event source. This identifies the <see cref="T:DevExpress.Utils.ToolTipController"/> component which fires the event.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs"/> object containing data related to the event.

            </param>


        </member>
        <member name="T:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.Utils.ToolTipController.CalcSize"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.#ctor(System.Windows.Forms.Control,System.Object,System.String,System.String,System.Drawing.Size,System.Drawing.Point)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs"/> class with the specified settings.
</para>
            </summary>
            <param name="control">
		An object for which the event is fired. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl"/> property.

            </param>
            <param name="obj">
		An object which identifies the element which the tooltip is displayed for. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject"/> property.

            </param>
            <param name="toolTip">
		A <see cref="T:System.String"/> value which specifies the tooltip's contents. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.ToolTip"/> property.

            </param>
            <param name="title">
		A <see cref="T:System.String"/> value which specifies the tooltip's title. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.Title"/> property.

            </param>
            <param name="size">
		A <see cref="T:System.Drawing.Size"/> structure which specifies the tooltip's bounds. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.Size"/> property.

            </param>
            <param name="position">
		A <see cref="T:System.Drawing.Point"/> structure which specifies the screen coordinates of the top left tooltip corner. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.Position"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.#ctor(System.Windows.Forms.Control,System.Object,DevExpress.Utils.ToolTipControllerShowEventArgs)">
            <summary>
                <para>Initializes a new instance of the ToolTipControllerCalcSizeEventArgs class with the specified settings.
</para>
            </summary>
            <param name="control">
		An object for which the event is fired. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl"/> property.

            </param>
            <param name="obj">
		An object which identifies the element that the tooltip is displayed for. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject"/> property.

            </param>
            <param name="showArgs">
		A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object that provides additional event data. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.ShowInfo"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.#ctor(System.Windows.Forms.Control,System.Object,System.String,System.String)">
            <summary>
                <para>Initializes a new instance of the ToolTipControllerCalcSizeEventArgs class with the specified settings.
</para>
            </summary>
            <param name="control">
		An object for which the event is fired. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl"/> property.

            </param>
            <param name="obj">
		An object which identifies the element for which the tooltip is displayed. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject"/> property.


            </param>
            <param name="toolTip">
		A <see cref="T:System.String"/> value which specifies the tooltip's contents. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.ToolTip"/> property.

            </param>
            <param name="title">
		A <see cref="T:System.String"/> value which specifies the tooltip's title. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.Title"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.Position">
            <summary>
                <para>Gets or sets the coordinates of the top left tooltip corner.
</para>
            </summary>
            <value>The <see cref="T:System.Drawing.Point"/> object specifying the coordinates of the top left tooltip corner relative to the desktop.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.ShowInfo">
            <summary>
                <para>Gets the additional event data.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object that provides additional event data.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.Size">
            <summary>
                <para>Gets or sets the tooltip dimensions.
</para>
            </summary>
            <value>The <see cref="T:System.Drawing.Size"/> object specifying the width and height of a tooltip rectangle. 
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.Title">
            <summary>
                <para>Gets the tooltip's title.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value which specifies the tooltip's title.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.ToolTip">
            <summary>
                <para>Gets the text to be displayed within the tooltip.
</para>
            </summary>
            <value>The <see cref="T:System.String"/> object specifying the text to be displayed within the tooltip.
</value>


        </member>
        <member name="T:DevExpress.Utils.ToolTipControllerBeforeShowEventHandler">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ToolTipController.BeforeShow"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerBeforeShowEventHandler.Invoke(System.Object,DevExpress.Utils.ToolTipControllerShowEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ToolTipController.BeforeShow"/> event.
</para>
            </summary>
            <param name="sender">
		The event source. This identifies the <see cref="T:DevExpress.Utils.ToolTipController"/> component which fires the event.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object containing data related to the event.

            </param>


        </member>
        <member name="T:DevExpress.Utils.ToolTipController">

            <summary>
                <para>Provides tooltip management for individual controls.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipController.#ctor">
            <summary>
                <para>Creates a new instance of the <see cref="T:DevExpress.Utils.ToolTipController"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.#ctor(System.ComponentModel.IContainer)">
            <summary>
                <para>Initializes a new instance of the ToolTipController class with the specified container.
</para>
            </summary>
            <param name="container">
		A <see cref="T:System.ComponentModel.IContainer"/> that represents the container for the tooltip controller.

            </param>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.Active">
            <summary>
                <para>Gets or sets whether the component's functionality is enabled.
</para>
            </summary>
            <value><b>true</b> if displaying tooltips is allowed; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.ActiveControlClient">
            <summary>
                <para>Gets the active control, if it implements the IToolTipControlClient interface. 
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.IToolTipControlClient"/> object.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.ActiveObject">
            <summary>
                <para>Returns the object that identifies which of the bound control's elements the tooltip is displayed for.
</para>
            </summary>
            <value>A <see cref="T:System.Object"/> object representing the bound control's element that the tooltip is displayed for.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.ActiveObjectInfo">
            <summary>
                <para>An object containing tooltip information for the current element of a bound control.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipControlInfo"/> object containing tooltip information for the current element of a bound control.
</value>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.AddClientControl(System.Windows.Forms.Control)">
            <summary>
                <para>Enables the display of tooltips for the specified control implementing the <b>DevExpress.Utils.IToolTipControlClient</b> interface.
</para>
            </summary>
            <param name="control">
		The control, implementing the <b>DevExpress.Utils.IToolTipControlClient</b> interface, for which tooltips should be enabled.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.AddClientControl(System.Windows.Forms.Control,DevExpress.Utils.IToolTipControlClient)">
            <summary>
                <para>Enables the display of tooltips for the specified control implementing the <b>DevExpress.Utils.IToolTipControlClient</b> interface. 
</para>
            </summary>
            <param name="control">
		 

            </param>
            <param name="owner">
		 

            </param>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.AllowHtmlText">
            <summary>
                <para>Gets or sets whether HTML formatting tags can be used to format text in tooltips.
</para>
            </summary>
            <value>A Boolean value that specifies whether HTML formatting tags can be used to format text in tooltips.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.Appearance">
            <summary>
                <para>Gets or sets the settings that control the appearance of a tooltip's window and text.

</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that contains the appearance settings.

</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.AppearanceTitle">
            <summary>
                <para>Provide the settings that control the appearance of a tooltip's title.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that contains the appearance settings.

</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.AutoPopDelay">
            <summary>
                <para>Gets or sets the tooltip delay in milliseconds.
</para>
            </summary>
            <value>Integer value specifying tooltip delay.
</value>


        </member>
        <member name="E:DevExpress.Utils.ToolTipController.BeforeShow">
            <summary>
                <para>Enables you to customize the text and settings of the tooltip before displaying it onscreen.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.ToolTipController.CalcSize">
            <summary>
                <para>Enables you to specify the position  and size of the tooltip window.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.CloseOnClick">
            <summary>
                <para>Gets or sets whether a tooltip is closed on a click and on moving the mouse cursor outside the tooltip area (for tooltips associated with controls).
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> value that specifies whether a click on a tooltip closes this tooltip.
The <b>Default</b> value is equivalent to <b>False</b>.
</value>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.CreateShowArgs">
            <summary>
                <para>Returns a <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object containing settings of  the current tooltip controller.
</para>
            </summary>
            <returns>A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object with settings of the current tooltip controller.
</returns>


        </member>
        <member name="E:DevExpress.Utils.ToolTipController.CustomDraw">
            <summary>
                <para>Enables a tooltip's window to be custom painted.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.DefaultController">
            <summary>
                <para>Gets the default <see cref="T:DevExpress.Utils.ToolTipController"/> used for displaying tooltips.
</para>
            </summary>
            <value>A default <see cref="T:DevExpress.Utils.ToolTipController"/> object.
</value>


        </member>
        <member name="E:DevExpress.Utils.ToolTipController.GetActiveObjectInfo">
            <summary>
                <para>Allows you to provide custom tooltips for any element of a control that implements the <see cref="T:DevExpress.Utils.IToolTipControlClient"/> interface.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.GetAllowHtmlText(System.Windows.Forms.Control)">
            <summary>
                <para>Returns whether HTML formatting is enabled in tooltips for the specified control.
</para>
            </summary>
            <param name="control">
		A control for which this tooltip setting is to be obtained.

            </param>
            <returns>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> value that specifies whether HTML formatting is supported in tooltips for the specified control.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.GetSuperTip(System.Windows.Forms.Control)">
            <summary>
                <para>Gets a <see cref="T:DevExpress.Utils.SuperToolTip"/> object associated with the specified control.
</para>
            </summary>
            <param name="control">
		The control whose SuperToolTip object is to be obtained.

            </param>
            <returns>A <see cref="T:DevExpress.Utils.SuperToolTip"/> object associated with the control.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.GetTitle(System.Windows.Forms.Control)">
            <summary>
                <para>Gets a regular tooltip's title displayed within the specified control.

</para>
            </summary>
            <param name="control">
		A control whose regular tooltip's title is to be obtained.


            </param>
            <returns>A string representing a regular tooltip's title for the control.

</returns>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.GetToolTip(System.Windows.Forms.Control)">
            <summary>
                <para>Gets a regular tooltip for the specified control.
</para>
            </summary>
            <param name="control">
		A control whose tooltip should be obtained.


            </param>
            <returns>A string representing a regular tooltip for the control.

</returns>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.GetToolTipAnchor(System.Windows.Forms.Control)">
            <summary>
                <para>Gets whether the tooltip associated with the specified control is anchored relative to the mouse pointer or the owning control.
</para>
            </summary>
            <param name="control">
		The control from which to retrieve how the associated tooltip is anchored.


            </param>
            <returns>A <b>ToolTipAnchor</b> value that specifies how the tooltip associated with the specified <i>control</i> is anchored.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.GetToolTipIconType(System.Windows.Forms.Control)">
            <summary>
                <para>Gets the type of the icon displayed within the specified control's regular tooltip.
</para>
            </summary>
            <param name="control">
		A control whose tooltip's icon type is to be obtained.



            </param>
            <returns>A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value representing the type of the icon displayed within the specified control's regular tooltip.


</returns>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.HideHint">
            <summary>
                <para>Hides the hint if it is being displayed.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.HideHintCore">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.ToolTipController.HyperlinkClick">
            <summary>
                <para>Occurs when an end-user clicks a hyperlink within a control's tool-tip or super tool-tip.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.IconSize">
            <summary>
                <para>Gets or sets tooltip icon size.
</para>
            </summary>
            <value>The <see cref="T:DevExpress.Utils.ToolTipIconSize"/> enumerator.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.IconType">
            <summary>
                <para>Gets or sets tooltip icon type.
</para>
            </summary>
            <value>The <see cref="T:DevExpress.Utils.ToolTipIconType"/> enumerator.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.ImageIndex">
            <summary>
                <para>Gets or sets the index of an image to be displayed within tooltips.
</para>
            </summary>
            <value>The integer value specifying the index of an image to be displayed within tooltips.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.ImageList">
            <summary>
                <para>Gets or sets the source of the images that can be displayed within tooltips.
</para>
            </summary>
            <value>An object that is the source of images that can be displayed within tooltips.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.InitialDelay">
            <summary>
                <para>Gets or sets the initial tooltip delay in milliseconds.
</para>
            </summary>
            <value>Integer value, specifying initial tooltip delay.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.IsDefaultToolTipLocation">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.KeepWhileHovered">
            <summary>
                <para>Gets or sets whether a tooltip remains displayed while the mouse cursor keeps moving (without stopping) towards the invoked tooltip and while it hovers the tooltip. This option is in effect for tooltips associated with controls.

</para>
            </summary>
            <value><b>true</b> if a tooltip remains displayed while the mouse cursor keeps moving towards the invoked tooltip and while the tooltip is hovered over; otherwise, <b>false</b>.

</value>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ProccessNCMouseMove(System.Object,System.Drawing.Point)">
            <summary>
                <para>For internal use.</para>
            </summary>
            <param name="sender">
		 
            </param>
            <param name="p">
		 
            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ProcessNCMouseMove(System.Object,System.Drawing.Point)">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="sender">
		 

            </param>
            <param name="p">
		 

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.RemoveClientControl(System.Windows.Forms.Control)">
            <summary>
                <para>Disables displaying tooltips for the specified control implementing the <b>DevExpress.Utils.IToolTipControlClient</b> interface.
</para>
            </summary>
            <param name="control">
		The control, implementing the <b>DevExpress.Utils.IToolTipControlClient</b> interface, for which the <see cref="T:DevExpress.Utils.ToolTipController"/>'s functionality should be disabled.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ResetAutoPopupDelay">
            <summary>
                <para>Resets the timer which controls when a tooltip's window is hidden.

</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.ReshowDelay">
            <summary>
                <para>Gets or sets the time interval that must pass before another hint is displayed if another hint is currently visible.
</para>
            </summary>
            <value>An integer value specifying the time interval in milliseconds.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.Rounded">
            <summary>
                <para>Gets or sets whether the tooltip's corners are rounded.
</para>
            </summary>
            <value><b>true</b> to display hints with rounded corners; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.RoundRadius">
            <summary>
                <para>Gets or sets the radius of the rounded corners of the tooltip window.
</para>
            </summary>
            <value>The radius of the rounded corners.
</value>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.SetAllowHtmlText(System.Windows.Forms.Control,DevExpress.Utils.DefaultBoolean)">
            <summary>
                <para>Sets whether HTML formatting is enabled in tooltips for the specified control.
</para>
            </summary>
            <param name="control">
		A control for which the tooltip information is to be changed.

            </param>
            <param name="value">
		A <see cref="T:DevExpress.Utils.DefaultBoolean"/> value that specifies whether HTML formatting is enabled in tooltips for the specified control.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.SetSuperTip(System.Windows.Forms.Control,DevExpress.Utils.SuperToolTip)">
            <summary>
                <para>Associates a <see cref="T:DevExpress.Utils.SuperToolTip"/> object with the specified control. 
</para>
            </summary>
            <param name="control">
		A control for which to set the tooltip.


            </param>
            <param name="value">
		A <see cref="T:DevExpress.Utils.SuperToolTip"/> object to associate with the control.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.SetTitle(System.Windows.Forms.Control,System.String)">
            <summary>
                <para>Sets a regular tooltip's title for the specified control.
</para>
            </summary>
            <param name="control">
		A control for which to set a regular tooltip's title.


            </param>
            <param name="value">
		A string representing a regular tooltip's title.


            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.SetToolTip(System.Windows.Forms.Control,System.String)">
            <summary>
                <para>Sets a regular tooltip for the specified control.
</para>
            </summary>
            <param name="control">
		A control for which to set the tooltip.


            </param>
            <param name="value">
		A string representing a regular tooltip's text.


            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.SetToolTipAnchor(System.Windows.Forms.Control,DevExpress.Utils.ToolTipAnchor)">
            <summary>
                <para>Sets whether the tooltip associated with the specified control is anchored relative to the mouse pointer or the owning control.
</para>
            </summary>
            <param name="control">
		The control from which to set how the tooltip is anchored.


            </param>
            <param name="value">
		A value that specifies whether the tooltip is anchored relative to the mouse pointer or the owning <i>control</i>.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.SetToolTipIconType(System.Windows.Forms.Control,DevExpress.Utils.ToolTipIconType)">
            <summary>
                <para>Sets the type of the icon displayed within the specified control's regular tooltip.

</para>
            </summary>
            <param name="control">
		A control for which the icon type is set.



            </param>
            <param name="value">
		A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value representing the type of the icon that should be displayed within the specified control's regular tooltip.

            </param>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.ShowBeak">
            <summary>
                <para>Tests whether callout beaks are displayed for hints.
</para>
            </summary>
            <value><b>true</b> if the callout beak is displayed when a hint appears; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(DevExpress.Utils.ToolTipControllerShowEventArgs,System.Windows.Forms.Control)">
            <summary>
                <para>Displays a hint for a control using specified settings.
</para>
            </summary>
            <param name="eShow">
		A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object specifying the settings used to display tooltips.

            </param>
            <param name="control">
		The control for which to display the tooltip.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(System.String,System.Windows.Forms.Control,DevExpress.Utils.ToolTipLocation)">
            <summary>
                <para>Displays a hint relative to a specific control.
</para>
            </summary>
            <param name="toolTip">
		The text to display as a tooltip.

            </param>
            <param name="control">
		The control for which to display the tooltip.

            </param>
            <param name="toolTipLocation">
		The position relative to the specified control at which the tooltip should be displayed.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(System.String)">
            <summary>
                <para>Displays a hint relative to the mouse cursor using current <see cref="T:DevExpress.Utils.ToolTipController"/> settings.
</para>
            </summary>
            <param name="toolTip">
		The text to display as a tooltip.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(System.String,DevExpress.Utils.ToolTipLocation)">
            <summary>
                <para>Displays a hint at the specified position relative to the mouse cursor.
</para>
            </summary>
            <param name="toolTip">
		The text to display as a tooltip.

            </param>
            <param name="toolTipLocation">
		The position relative to the mouse cursor at which the hint should be displayed.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(System.String,System.Drawing.Point)">
            <summary>
                <para>Displays a hint relative to the specified point using current <see cref="T:DevExpress.Utils.ToolTipController"/> settings

</para>
            </summary>
            <param name="toolTip">
		The text to display as a tooltip.

            </param>
            <param name="cursorPosition">
		The point relative to which the tooltip should be displayed.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(System.String,DevExpress.Utils.ToolTipLocation,System.Drawing.Point)">
            <summary>
                <para>Displays a hint at a specified position relative to a specific point.
</para>
            </summary>
            <param name="toolTip">
		The text to display as a tooltip.

            </param>
            <param name="toolTipLocation">
		The position relative to the specified point at which the hint should be displayed.

            </param>
            <param name="cursorPosition">
		The point relative to which the hint should be displayed.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(DevExpress.Utils.ToolTipControllerShowEventArgs,System.Drawing.Point)">
            <summary>
                <para>Displays a hint relative to a specific point using specified settings.
</para>
            </summary>
            <param name="eShow">
		A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object specifying settings for displaying tooltips.


            </param>
            <param name="cursorPosition">
		A point relative to which the hint should be displayed.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(DevExpress.Utils.ToolTipControllerShowEventArgs)">
            <summary>
                <para>Displays a hint relative to the mouse cursor using specified settings.
</para>
            </summary>
            <param name="eShow">
		A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object specifying settings for displaying tooltips.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(DevExpress.Utils.ToolTipControlInfo)">
            <summary>
                <para>Displays a hint using the specified tooltip information.
</para>
            </summary>
            <param name="info">
		A <see cref="T:DevExpress.Utils.ToolTipControlInfo"/> object containing information for displaying a hint.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(System.String,System.String,System.Windows.Forms.Control,DevExpress.Utils.ToolTipLocation)">
            <summary>
                <para>Displays a hint with the specified text and title relative to the specified control.
</para>
            </summary>
            <param name="toolTip">
		A string which represents the tooltip's text.

            </param>
            <param name="title">
		A string which represents the tooltip's title.

            </param>
            <param name="control">
		The control to display the tooltip for. 


            </param>
            <param name="toolTipLocation">
		The position relative to the specified control at which the tooltip should be displayed. 

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(System.String,System.String)">
            <summary>
                <para>Displays a hint with the specified text and title relative to the mouse cursor using the current ToolTipController settings. 

</para>
            </summary>
            <param name="toolTip">
		A string that represents a tooltip's text.

            </param>
            <param name="title">
		A string that represents a tooltip's title.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(System.String,System.String,DevExpress.Utils.ToolTipLocation,System.Drawing.Point)">
            <summary>
                <para>Displays a hint with the specified text and title relative to the specified point.

</para>
            </summary>
            <param name="toolTip">
		A string that represents a tooltip's text.

            </param>
            <param name="title">
		A string that represents a tooltip's title.

            </param>
            <param name="toolTipLocation">
		The position relative to the specified control at which the tooltip should be displayed. 

            </param>
            <param name="cursorPosition">
		A point relative to which the hint should be displayed.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(System.String,System.String,System.Drawing.Point)">
            <summary>
                <para>Displays a hint with the specified text and title at the specified point using the current ToolTipController settings 

</para>
            </summary>
            <param name="toolTip">
		A string that represents a tooltip's text.

            </param>
            <param name="title">
		A string that represents a tooltip's title.

            </param>
            <param name="cursorPosition">
		A point relative to which the hint should be displayed.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(System.String,System.String,DevExpress.Utils.ToolTipLocation)">
            <summary>
                <para>Displays a hint with the specified text and title relative to the mouse cursor's position.

</para>
            </summary>
            <param name="toolTip">
		A string that represents a tooltip's text.

            </param>
            <param name="title">
		A string that represents a tooltip's title.

            </param>
            <param name="toolTipLocation">
		The position relative to the specified control at which the tooltip should be displayed. 

            </param>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.ShowShadow">
            <summary>
                <para>Gets or sets whether the tooltips are shown shadowed.
</para>
            </summary>
            <value><b>true</b> if the tooltips are shown shadowed; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.Style">
            <summary>
                <para>Gets the appearance settings used to paint the hints of bound controls.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which provides the appearance settings used to paint the hints of bound controls.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.ToolTipAnchor">
            <summary>
                <para>Gets or sets whether tooltips are anchored relative to the mouse pointer or relative to the owning control.
</para>
            </summary>
            <value>A <see cref="ToolTipAnchor"/> value that specifies whether tooltips are anchored relative to the mouse pointer or relative to the owning control. By <b>Default</b>, tooltips are anchored relative to the mouse pointer.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.ToolTipLocation">
            <summary>
                <para>Gets or sets the tooltip location.
</para>
            </summary>
            <value>The <see cref="T:DevExpress.Utils.ToolTipLocation"/> enumerator.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.ToolTipStyle">
            <summary>
                <para>Gets or sets the look-and-feel of regular tooltips.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipStyle"/> value that specifies the look-and-feel of regular tooltips.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.ToolTipType">
            <summary>
                <para>Gets or sets the type of tooltips displayed by the controller.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipType"/> value that specifies the type of tooltips to be displayed.

</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.UseWindowStyle">
            <summary>
                <para>Obsolete. Gets or sets whether the default style should be used for the hint.
</para>
            </summary>
            <value><b>true</b> if the default style is applied to the hint; <b>false</b> if the <see cref="P:DevExpress.Utils.ToolTipController.Style"/> is used
</value>


        </member>
        <member name="T:DevExpress.LookAndFeel.DefaultLookAndFeel">

            <summary>
                <para>Provides centralized access to global look-and-feel settings that affect all DevExpress controls in your application.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.LookAndFeel.DefaultLookAndFeel.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.LookAndFeel.DefaultLookAndFeel"/> object.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.LookAndFeel.DefaultLookAndFeel.#ctor(System.ComponentModel.IContainer)">
            <summary>
                <para>Initializes a new instance of the DefaultLookAndFeel class with the specified container.
</para>
            </summary>
            <param name="container">
		A <see cref="T:System.ComponentModel.IContainer"/> that represents the container for the Default LookAndFeel object.

            </param>


        </member>
        <member name="P:DevExpress.LookAndFeel.DefaultLookAndFeel.EnableBonusSkins">
            <summary>
                <para>Registers the Bonus Skins for runtime use.
</para>
            </summary>
            <value><b>true</b> to register the Bonus Skins.
</value>


        </member>
        <member name="P:DevExpress.LookAndFeel.DefaultLookAndFeel.LookAndFeel">
            <summary>
                <para>Gets the <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object defining Default LookAndFeel settings.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object defining Default LookAndFeel settings.
</value>


        </member>
        <member name="T:DevExpress.Utils.SharedImageCollectionImageSizeMode">

            <summary>
                <para>The enumeration specifies the size of images being displayed within an object, when images are obtained from a <see cref="T:DevExpress.Utils.SharedImageCollection"/>.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.SharedImageCollectionImageSizeMode.UseCollectionImageSize">
            <summary>
                <para>The size of an image being displayed by an object is determined by the <b>ImageSize</b> property of the bound <see cref="T:DevExpress.Utils.SharedImageCollection"/>.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.SharedImageCollectionImageSizeMode.UseImageSize">
            <summary>
                <para>The size of an image being displayed by an object is determined by the size of the corresponding Image item in the bound <see cref="T:DevExpress.Utils.SharedImageCollection"/>.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.VScrollBarBase">

            <summary>
                <para>Serves as the base for <see cref="T:DevExpress.XtraEditors.VScrollBar"/> class.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.XtraEditors.VScrollBarBase.ScrollBarType">
            <summary>
                <para>Gets the value indicating whether the scroll bar is horizontal or vertical.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraEditors.ScrollBarType"/> enumeration member specifying scroll bar orientation.
</value>


        </member>
        <member name="T:DevExpress.XtraEditors.VScrollBar">

            <summary>
                <para>The vertical scrollbar.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.VScrollBar.#ctor">
            <summary>
                <para>Creates a new <see cref="T:DevExpress.XtraEditors.VScrollBar"/> object.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.VScrollBar.RightToLeft">
            <summary>
                <para>This member overrides <b>Control.RightToLeft</b>.
</para>
            </summary>
            <value>One of the <b>System.Windows.Forms.RightToLeft</b> values.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.VScrollBar.SetVisibility(System.Boolean)">
            <summary>
                <para>Sets the visibility of the current VScrollBar control.
</para>
            </summary>
            <param name="visible">
		<b>true</b> to display the control; <b>false</b> to hide the control.

            </param>


        </member>
        <member name="T:DevExpress.XtraEditors.ScrollBarBase">

            <summary>
                <para>Serves as the base for <see cref="T:DevExpress.XtraEditors.HScrollBarBase"/>, <see cref="T:DevExpress.XtraEditors.HScrollBar"/>, <see cref="T:DevExpress.XtraEditors.VScrollBarBase"/> and <see cref="T:DevExpress.XtraEditors.VScrollBar"/> classes.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.#ctor">
            <summary>
                <para>Creates a new <see cref="T:DevExpress.XtraEditors.ScrollBarBase"/> object.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.ActualVisible">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.ApplyUIMode(DevExpress.XtraEditors.ScrollBarBase,DevExpress.XtraEditors.ScrollUIMode)">
            <summary>
                <para>Applies the specified UI mode to the specified scroll bar.
</para>
            </summary>
            <param name="scroll">
		A <see cref="T:DevExpress.XtraEditors.ScrollBarBase"/> control to which the specified UI mode should be applied.

            </param>
            <param name="controlMode">
		A <see cref="T:DevExpress.XtraEditors.ScrollUIMode"/> enumeration value specifying the UI mode to be applied.

            </param>
            <returns>A <see cref="T:DevExpress.XtraEditors.ScrollBarBase"/> control whose UI mode has been set.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.ApplyUIMode(DevExpress.XtraEditors.ScrollBarBase)">
            <summary>
                <para>Applies the default scroll mode to the specified scroll bar.
</para>
            </summary>
            <param name="scroll">
		A <see cref="T:DevExpress.XtraEditors.ScrollBarBase"/> control to which the default UI mode should be applied.

            </param>
            <returns>A <see cref="T:DevExpress.XtraEditors.ScrollBarBase"/> control whose UI mode has been set.
</returns>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.AutoSize">
            <summary>
                <para>Gets or sets a value specifying whether the scroll bar is autosized.
</para>
            </summary>
            <value><b>true</b> if auto size is applied; otherwise <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.BackColor">
            <summary>
                <para>Overrides the base class <b>BackColor</b> property.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> object representing the control's background color.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.BackgroundImage">
            <summary>
                <para>Overrides the base class <b>BackgroundImage</b> property.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Image"/> object representing the image to display in the control's background.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.BeginUpdate">
            <summary>
                <para>Locks the ScrollBarBase object by disallowing visual updates until the <b>EndUpdate</b> or <b>CancelUpdate</b> method is called.


<para> </para>
<para> </para>
Prevents the control from being updated until the <see cref="M:DevExpress.XtraEditors.ScrollBarBase.EndUpdate"/> or <see cref="M:DevExpress.XtraEditors.ScrollBarBase.CancelUpdate"/> method is called.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.CancelUpdate">
            <summary>
                <para>Unlocks the control after a <see cref="M:DevExpress.XtraEditors.ScrollBarBase.BeginUpdate"/> method call without causing immediate repainting.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.DrawMode">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.EndUpdate">
            <summary>
                <para>Unlocks the control after a <see cref="M:DevExpress.XtraEditors.ScrollBarBase.BeginUpdate"/> method call and causes its immediate repainting.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.Font">
            <summary>
                <para>Overrides the base class <b>Font</b> property.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Font"/> object to apply to the text displayed by the control.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.ForeColor">
            <summary>
                <para>Overrides the base class <b>ForeColor</b> property.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> object representing the control's foreground color.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetAccessible">
            <summary>
                <para>Returns an object which implements the accessibility information.
</para>
            </summary>
            <returns>A BaseAccessibility object.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetDefaultHorizontalScrollBarHeight">
            <summary>
                <para>Returns the default height, in pixels, of horizontal scroll bars displayed in the current scroll UI mode.
</para>
            </summary>
            <returns>A <see cref="T:System.Int32"/> value that indicates the default height, in pixels, of a horizontal scroll bar.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetDefaultVerticalScrollBarWidth">
            <summary>
                <para>Returns the default width, in pixels, of vertical scroll bars displayed in the current scroll UI mode.
</para>
            </summary>
            <returns>A <see cref="T:System.Int32"/> value that indicates the default width, in pixels, of a vertical scroll bar.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetEnabled">
            <summary>
                <para>Returns the value of the control's <b>Enabled</b> property.
</para>
            </summary>
            <returns>The value of the <b>Enabled</b> property.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetHeight">
            <summary>
                <para>Returns the value of the control's <b>Height</b> property.
</para>
            </summary>
            <returns>The value of the <b>Height</b> property.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetHorizontalScrollBarHeight(DevExpress.XtraEditors.ScrollUIMode)">
            <summary>
                <para>Returns the default height, in pixels, of horizontal scroll bars displayed in the specified UI mode.
</para>
            </summary>
            <param name="controlMode">
		A <b>ScrollUIMode</b> enumeration value that specifies the UI mode in which a scroll bar is displayed.

            </param>
            <returns>A <see cref="T:System.Int32"/> value that indicates the default height, in pixels, of a horizontal scroll bar.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetHorizontalScrollBarHeight">
            <summary>
                <para>Returns the default height, in pixels, of horizontal scroll bars.
</para>
            </summary>
            <returns>A <see cref="T:System.Int32"/> value that indicates the default height, in pixels, of horizontal scroll bars.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetUIMode(DevExpress.XtraEditors.ScrollUIMode)">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="controlMode">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetUIMode(DevExpress.XtraEditors.ScrollBarBase)">
            <summary>
                <para>Returns the UI mode in which the specified scroll bar is displayed.
</para>
            </summary>
            <param name="scroll">
		A <see cref="T:DevExpress.XtraEditors.ScrollBarBase"/> object whose UI mode should be returned.

            </param>
            <returns>The scroll bar's UI mode.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetVerticalScrollBarWidth(DevExpress.XtraEditors.ScrollUIMode)">
            <summary>
                <para>Returns the default width, in pixels, of vertical scroll bars displayed in the specified UI mode.
</para>
            </summary>
            <param name="controlMode">
		A <b>ScrollUIMode</b> enumeration value that specifies the UI mode in which a scroll bar is displayed.

            </param>
            <returns>A <see cref="T:System.Int32"/> value that indicates the default width, in pixels, of a vertical scroll bar.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetVerticalScrollBarWidth">
            <summary>
                <para>Returns the default width, in pixels, of vertical scroll bars.
</para>
            </summary>
            <returns>A <see cref="T:System.Int32"/> value that indicates the default width, in pixels, of vertical scroll bars.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetWidth">
            <summary>
                <para>Returns the value of the control's <b>Width</b> property.
</para>
            </summary>
            <returns>The value of the <b>Width</b> property.
</returns>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.ImeMode">
            <summary>
                <para>Gets or sets the Input Method Editor(IME) mode supported by this control.
</para>
            </summary>
            <value>A <b>ImeMode</b> enumeration member specifying the Input Method Editor (IME) status of an object when the object is selected.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.IsOverlapScrollBar">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.LargeChange">
            <summary>
                <para>Gets or sets the increment applied to the <see cref="P:DevExpress.XtraEditors.ScrollBarBase.Value"/> property when the scroll box is moved by a 'page'.
</para>
            </summary>
            <value>An integer value representing the increment applied when the scroll box is moved by a 'page'.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.LookAndFeel">
            <summary>
                <para>Gets a value providing access to settings controlling the control's look and feel.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object whose properties specify the control's look and feel.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.Maximum">
            <summary>
                <para>Gets or sets the upper limit of values of the scrollable range.
</para>
            </summary>
            <value>An integer value representing the value's upper limit.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.Minimum">
            <summary>
                <para>Gets or sets the lower limit of the scrollable range.
</para>
            </summary>
            <value>An integer value representing a lower limit.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.OnAction(DevExpress.XtraEditors.ScrollNotifyAction)">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="action">
		A <b>ScrollNotifyAction</b> enumeration value.

            </param>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.Opacity">
            <summary>
                <para>Gets or sets the opacity level of the control.
</para>
            </summary>
            <value>A <see cref="Single"/> value that specifies the opacity level of the control. The default is <b>1</b>.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="e">
		 

            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.ProcessMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="e">
		 

            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="e">
		 

            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.ProcessPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="e">
		 

            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.ProcessPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="e">
		 

            </param>


        </member>
        <member name="E:DevExpress.XtraEditors.ScrollBarBase.Scroll">
            <summary>
                <para>Fires when the scroll thumb has been moved either by a mouse or keyboard action.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.ScrollBarAutoSize">
            <summary>
                <para>Gets or sets a value specifying whether the scroll bar is automatically sized.
</para>
            </summary>
            <value><b>true</b> if the auto sizing feature is enabled; otherwise <b>false</b>.
</value>


        </member>
        <member name="E:DevExpress.XtraEditors.ScrollBarBase.ScrollBarAutoSizeChanged">
            <summary>
                <para>Fires after the <see cref="P:DevExpress.XtraEditors.ScrollBarBase.ScrollBarAutoSize"/> property's value has been changed.

</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.ScrollBarType">
            <summary>
                <para>Gets the value indicating whether the scroll bar is horizontal or vertical.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraEditors.ScrollBarType"/> enumeration member specifying the scroll bar type.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.SecondScrollInterval">
            <summary>
                <para>Gets or sets the time interval, in milliseconds, between scroll box steps while a scroll bar button or scroll bar track is clicked and held.
</para>
            </summary>
            <value>An integer value that specifies the time interval, in milliseconds, between scroll box steps while the scroll bar button or scroll bar track is clicked and held.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.SetVisibility(System.Boolean)">
            <summary>
                <para>Sets the visibility of the current ScrollBarBase control. This method is not in effect if the scroll bar is displayed in the touch UI mode.
</para>
            </summary>
            <param name="visible">
		<b>true</b> to display the control; <b>false</b> to hide the control.

            </param>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.SmallChange">
            <summary>
                <para>Gets or sets the value by which the <see cref="P:DevExpress.XtraEditors.ScrollBarBase.Value"/> property changes when the user presses one of the arrow keys or clicks one of the scroll-bar buttons.
</para>
            </summary>
            <value>An integer value by which the <see cref="P:DevExpress.XtraEditors.ScrollBarBase.Value"/> property changes.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.State">
            <summary>
                <para>Gets whether the scroll bar is in normal state, or the increase/decrease/thumb button/area is pressed/hot-tracked.
</para>
            </summary>
            <value>A <see cref="ScrollBarState"/> enumeration value that specifies the scroll bar state. 
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.TabStop">
            <summary>
                <para>Gets or sets a value indicating whether a user can focus the scroll bar control using the TAB key.
</para>
            </summary>
            <value><b>true</b> if a user can  focus the scroll bar using the TAB key; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.Text">
            <summary>
                <para>Overrides the base class <b>Text</b> property.
</para>
            </summary>
            <value>A string value representing the text associated with this control.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.UIMode">
            <summary>
                <para>Gets or sets the UI mode in which scroll bars are displayed.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraEditors.ScrollUIMode"/> enumeration value that specifies the UI mode in which scroll bars are displayed.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.Value">
            <summary>
                <para>Gets or sets a value specifying the scroll box's current position.
</para>
            </summary>
            <value>An integer value representing the scroll box's current position.
</value>


        </member>
        <member name="E:DevExpress.XtraEditors.ScrollBarBase.ValueChanged">
            <summary>
                <para>Fires immediately after the <see cref="P:DevExpress.XtraEditors.ScrollBarBase.Value"/> property has been changed.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.HScrollBarBase">

            <summary>
                <para>Serves as the base for <see cref="T:DevExpress.XtraEditors.HScrollBar"/> class.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.XtraEditors.HScrollBarBase.ScrollBarType">
            <summary>
                <para>Gets the value indicating whether the scroll bar is horizontal or vertical.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraEditors.ScrollBarType"/> enumeration member specifying the scroll bar's orientation.
</value>


        </member>
        <member name="T:DevExpress.XtraEditors.HScrollBar">

            <summary>
                <para>The horizontal scrollbar.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.HScrollBar.#ctor">
            <summary>
                <para>Creates a new <see cref="T:DevExpress.XtraEditors.HScrollBar"/> object.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.ScrollBarType">

            <summary>
                <para>Contains values specifying the type of <b>ScrollBar</b> control.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.ScrollBarType.Horizontal">
            <summary>
                <para><para>Corresponds to the horizontal orientation of the scroll bar.</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.ScrollBarType.Vertical">
            <summary>
                <para><para>Corresponds to the vertical orientation of the scroll bar.</para>

</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.KeyShortcut">

            <summary>
                <para>A class used by various controls to provide shortcut keys.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.KeyShortcut.#ctor(System.Windows.Forms.Shortcut)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.KeyShortcut"/> class with the specified shortcut.
</para>
            </summary>
            <param name="shortcut">
		The key combination to initialize the <see cref="P:DevExpress.Utils.KeyShortcut.Key"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.KeyShortcut.#ctor(System.Windows.Forms.Keys)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.KeyShortcut"/> class with the specified shortcut.
</para>
            </summary>
            <param name="key">
		The key combination to initialize the <see cref="P:DevExpress.Utils.KeyShortcut.Key"/> property. Values of the <see cref="T:System.Windows.Forms.Keys"/> type can be combined using the OR operator.

            </param>


        </member>
        <member name="M:DevExpress.Utils.KeyShortcut.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.KeyShortcut"/> class and sets the shortcut to the <see cref="F:System.Windows.Forms.Keys.None"/> value.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.KeyShortcut.AltKeyName">
            <summary>
                <para>Gets the name of the ALT key which is dependent upon the end-user's regional settings.

</para>
            </summary>
            <value>A string which specifies the name of the ALT key.
</value>


        </member>
        <member name="P:DevExpress.Utils.KeyShortcut.ControlKeyName">
            <summary>
                <para>Gets the name of the CONTROL key which is dependent upon the end-user's regional settings.

</para>
            </summary>
            <value>A string which specifies the name of the CONTROL key.
</value>


        </member>
        <member name="F:DevExpress.Utils.KeyShortcut.Empty">
            <summary>
                <para>Gets the static <see cref="T:DevExpress.Utils.KeyShortcut"/> object whose <see cref="P:DevExpress.Utils.KeyShortcut.Key"/> property is set to <see cref="F:System.Windows.Forms.Keys.None"/>. 

</para>
            </summary>
            <returns>The static <see cref="T:DevExpress.Utils.KeyShortcut"/> object with no valid shortcut assigned.
</returns>


        </member>
        <member name="M:DevExpress.Utils.KeyShortcut.Equals(System.Object)">
            <summary>
                <para>Tests whether the shortcuts of the current and specified <see cref="T:DevExpress.Utils.KeyShortcut"/> objects are identical.
</para>
            </summary>
            <param name="value">
		The object representing the <see cref="T:DevExpress.Utils.KeyShortcut"/> object.

            </param>
            <returns><b>true</b> if the function parameter represents a <see cref="T:DevExpress.Utils.KeyShortcut"/> object and its shortcut is equal to the shortcut of the current object; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.KeyShortcut.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current object.
</para>
            </summary>
            <returns>The hash code for the current object.
</returns>


        </member>
        <member name="M:DevExpress.Utils.KeyShortcut.GetKeyDisplayText(System.Windows.Forms.Keys)">
            <summary>
                <para>Returns the text representation of the specified <b>System.Windows.Forms.Keys</b> object.
</para>
            </summary>
            <param name="key">
		The object whose text representation is to be obtained.

            </param>
            <returns>The text representation of the specified Keys object.
</returns>


        </member>
        <member name="P:DevExpress.Utils.KeyShortcut.IsExist">
            <summary>
                <para>Tests whether the current shortcut specifies a valid key combination.
</para>
            </summary>
            <value><b>true</b> if the current shortcut specifies a valid key combination; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.KeyShortcut.Key">
            <summary>
                <para>Gets the shortcut used to activate particular functionality.
</para>
            </summary>
            <value>The <see cref="T:System.Windows.Forms.Keys"/> value representing the shortcut.
</value>


        </member>
        <member name="P:DevExpress.Utils.KeyShortcut.ShiftKeyName">
            <summary>
                <para>Gets the name of the SHIFT key which is dependent upon the end-user's regional settings.

</para>
            </summary>
            <value>A string which specifies the name of the SHIFT key.
</value>


        </member>
        <member name="M:DevExpress.Utils.KeyShortcut.ToString">
            <summary>
                <para>Gets the text representation of the current shortcut.
</para>
            </summary>
            <returns>The text representation of the current shortcut.
</returns>


        </member>
        <member name="T:DevExpress.LookAndFeel.UserLookAndFeel">

            <summary>
                <para>Represents look and feel settings for controls provided by DevExpress.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.#ctor(System.Object)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> class.
</para>
            </summary>
            <param name="ownerControl">
		An object which represents the control that will own the created <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.OwnerControl"/> property.

            </param>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.ActiveLookAndFeel">
            <summary>
                <para>Gets the actual <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object currently applied.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object currently applied.
</value>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.ActiveSkinName">
            <summary>
                <para>Gets the name of the currently applied skin. 
</para>
            </summary>
            <value>A string which specifies the name of the currently applied skin.
</value>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.ActiveStyle">
            <summary>
                <para>Gets the style currently applied.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.ActiveLookAndFeelStyle"/> value specifying the currently applied style.
</value>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.ActiveSvgPaletteName">
            <summary>
                <para>Returns the name of the currently applied swatch.
</para>
            </summary>
            <value>A String value that is the swatch name.
</value>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.Assign(DevExpress.LookAndFeel.UserLookAndFeel)">
            <summary>
                <para>Copies properties of the specified <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object to the current object.
</para>
            </summary>
            <param name="source">
		The source <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.

            </param>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.Default">
            <summary>
                <para>Gets the Default LookAndFeel object which should be used for painting controls when the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.UseDefaultLookAndFeel"/> property is set to <b>true</b>.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object referring to the Default LookAndFeel object.
</value>


        </member>
        <member name="F:DevExpress.LookAndFeel.UserLookAndFeel.DefaultSkinName">
            <summary>
                <para>Gets the name of the default skin style.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.DestroyDefaultLookAndFeel">
            <summary>
                <para>Explicitly disposes of the<see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object currently utilized.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.Dispose">
            <summary>
                <para>Releases all resources used by the current object.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.GetMaskColor">
            <summary>
                <para>Gets the actual value of the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinMaskColor"/> setting for the current UserLookAndFeel object.

</para>
            </summary>
            <returns>The actual value of the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinMaskColor"/> setting for the current UserLookAndFeel object.
</returns>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.GetMaskColor2">
            <summary>
                <para>Gets the actual value of the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinMaskColor2"/> setting for the current UserLookAndFeel object.

</para>
            </summary>
            <returns>The actual value of the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinMaskColor2"/> setting for the current UserLookAndFeel object.
</returns>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.GetTouchScaleFactor">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code. Use the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.TouchScaleFactor"/> property instead.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.GetTouchUI">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code. Use the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.TouchUIMode"/> property instead.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.IsColorized">
            <summary>
                <para>Gets whether the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinMaskColor"/> or <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinMaskColor2"/> property is specified for the current UserLookAndFeel object.
</para>
            </summary>
            <value><b>true</b>, if the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinMaskColor"/> or <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinMaskColor2"/> setting is specified; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.IsEquals(DevExpress.LookAndFeel.UserLookAndFeel)">
            <summary>
                <para>Tests whether two objects have the same property values.
</para>
            </summary>
            <param name="source">
		The <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object to which the current object is compared.

            </param>
            <returns><b>true</b> if the current object has the same property values as the specified object; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.IsLookAndFeelHierarchyRoot">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.OwnerControl">
            <summary>
                <para>Gets the control that owns the current <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.
</para>
            </summary>
            <value>An object which represents the control that owns the current <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.
</value>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.Painter">
            <summary>
                <para>Gets the painter based on the style currently applied for drawing control's elements.
</para>
            </summary>
            <value>A <b>BaseLookAndFeelPainters</b> class descendant specifying the painter corresponding to the current style which is defined by <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.ActiveStyle"/>.
</value>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.ParentLookAndFeel">
            <summary>
                <para>Gets or sets the parent LookAndFeel.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object specifying the parent LookAndFeel; <b>null</b> if the parent LookAndFeel is not assigned.
</value>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.Reset">
            <summary>
                <para>Reverts the look and feel settings to their default values.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.ResetParentLookAndFeel">
            <summary>
                <para>Sets the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.ParentLookAndFeel"/> property to its default value.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.ResetSkinMaskColors">
            <summary>
                <para>Sets the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinMaskColor"/> and <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinMaskColor2"/> properties to an empty color (System.Drawing.Color.Empty).
</para>
            </summary>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetDefaultStyle">
            <summary>
                <para>Applies the default look and feel settings to a control.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetFlatStyle">
            <summary>
                <para>Applies the <b>Flat</b> style to a control.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetOffice2003Style">
            <summary>
                <para>Applies the <b>Office2003</b> style to a control.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetSkinMaskColors(System.Drawing.Color,System.Drawing.Color)">
            <summary>
                <para>Sets the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinMaskColor"/> and <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinMaskColor2"/> properties to the specified values.
</para>
            </summary>
            <param name="skinMaskColor">
		A new value for the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinMaskColor"/> property.

            </param>
            <param name="skinMaskColor2">
		A new value for the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinMaskColor2"/> property.

            </param>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetSkinStyle(System.String)">
            <summary>
                <para>Applies the specified skin.
</para>
            </summary>
            <param name="skinName">
		A string value specifying the skin name to apply.

            </param>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetSkinStyle(System.String,System.Boolean)">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="skinName">
		 

            </param>
            <param name="touchUI">
		 

            </param>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetSkinStyle(System.String,DevExpress.LookAndFeel.TouchUIMode)">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="skinName">
		 

            </param>
            <param name="touchUI">
		 

            </param>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetSkinStyle(DevExpress.LookAndFeel.SkinStyle)">
            <summary>
                <para>Applies the desired DevExpress skin to the application.
</para>
            </summary>
            <param name="skinStyle">
		A  enumerator value that specifies the skin name.

            </param>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetSkinStyle(System.String,System.String)">
            <summary>
                <para>Applies the specified skin and palette.
</para>
            </summary>
            <param name="skinName">
		A string value specifying the name of the skin to apply.

            </param>
            <param name="paletteName">
		The name of the palette used to color vector images to apply.

            </param>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetSkinStyle(DevExpress.LookAndFeel.SkinSvgPalette)">
            <summary>
                <para>Applies the specified skin and palette.
</para>
            </summary>
            <param name="palette">
		A <b>SkinSvgPalette</b> object specifying the skin and palette to apply.

            </param>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetStyle(DevExpress.LookAndFeel.LookAndFeelStyle,System.Boolean,System.Boolean,System.String)">
            <summary>
                <para>Sets the look and feel settings of the current object to the specified values.
</para>
            </summary>
            <param name="style">
		A <see cref="T:DevExpress.LookAndFeel.LookAndFeelStyle"/> enumeration value which specifies the style of the current object.

            </param>
            <param name="useWindowsXPTheme">
		<b>true</b> if a control should be painted using the WindowsXP theme; otherwise, <b>false</b>.

            </param>
            <param name="useDefaultLookAndFeel">
		<b>true</b> to use the look and feel settings provided by the parent object or default look and feel object; <b>false</b> to apply the current object's settings.

            </param>
            <param name="skinName">
		A string value specifying the skin name.

            </param>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetStyle(DevExpress.LookAndFeel.LookAndFeelStyle,System.Boolean,System.Boolean)">
            <summary>
                <para>Sets the look and feel settings of the current object.
</para>
            </summary>
            <param name="style">
		A <see cref="T:DevExpress.LookAndFeel.LookAndFeelStyle"/> enumeration value which specifies the style of the current object.

            </param>
            <param name="useWindowsXPTheme">
		<b>true</b> if a control should be painted using the WindowsXP theme; otherwise, <b>false</b>.

            </param>
            <param name="useDefaultLookAndFeel">
		<b>true</b> to use the look and feel settings provided by the parent object or default look and feel object; <b>false</b> to apply the current object's settings.

            </param>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetStyle(DevExpress.LookAndFeel.LookAndFeelStyle,System.Boolean,System.Boolean,System.String,System.Boolean)">
            <summary>
                <para>Sets the look and feel settings of the current object to the specified values.
</para>
            </summary>
            <param name="style">
		A <see cref="T:DevExpress.LookAndFeel.LookAndFeelStyle"/> enumeration value which specifies the style of the current object. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.Style"/> property.


            </param>
            <param name="useWindowsXPTheme">
		<b>true</b>, if a control should be painted using the WindowsXP theme; otherwise, <b>false</b>. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.UseWindowsXPTheme"/> property.


            </param>
            <param name="useDefaultLookAndFeel">
		<b>true</b> to use the look and feel settings provided by the parent object or default look and feel object; <b>false</b> to apply the current object's settings. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.UseDefaultLookAndFeel"/> property.


            </param>
            <param name="skinName">
		A string value specifying the skin name. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinName"/> property.


            </param>
            <param name="touchUI">
		<b>true</b>, to enable the touch-aware mode; otherwise, <b>false</b>. This value is assigned to the <see cref="T:DevExpress.LookAndFeel.TouchUIMode"/> property.


            </param>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetStyle(DevExpress.LookAndFeel.LookAndFeelStyle,System.Boolean,System.Boolean,System.String,System.Boolean,System.Single)">
            <summary>
                <para>Sets the look and feel settings of the current object to the specified values.
</para>
            </summary>
            <param name="style">
		A <see cref="T:DevExpress.LookAndFeel.LookAndFeelStyle"/> enumeration value which specifies the style of the current object. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.Style"/> property.

            </param>
            <param name="useWindowsXPTheme">
		<b>true</b>, if a control should be painted using the WindowsXP theme; otherwise, <b>false</b>. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.UseWindowsXPTheme"/> property.

            </param>
            <param name="useDefaultLookAndFeel">
		<b>true</b> to use the look and feel settings provided by the parent object or default look and feel object; <b>false</b> to apply the current object's settings. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.UseDefaultLookAndFeel"/> property.

            </param>
            <param name="skinName">
		A string value specifying the skin name. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinName"/> property.

            </param>
            <param name="touchUI">
		<b>true</b>, to enable the touch-aware mode; otherwise, <b>false</b>. This value is assigned to the <see cref="T:DevExpress.LookAndFeel.TouchUIMode"/> property.

            </param>
            <param name="touchScaleFactor">
		The scale factor applied when touch-aware mode is enabled. This value is assigned to the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.TouchScaleFactor"/> property.

            </param>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetStyle(DevExpress.LookAndFeel.LookAndFeelStyle,System.Boolean,System.Boolean,System.String,DevExpress.LookAndFeel.TouchUIMode)">
            <summary>
                <para>Sets the look and feel settings of the current object to the specified values. 
</para>
            </summary>
            <param name="style">
		A value which specifies the style of the current object. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.Style"/> property. 

            </param>
            <param name="useWindowsXPTheme">
		<b>true</b>, if a control should be painted using the WindowsXP theme; otherwise, <b>false</b>. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.UseWindowsXPTheme"/> property. 

            </param>
            <param name="useDefaultLookAndFeel">
		<b>true</b>, to use the look and feel settings provided by the parent object or default look and feel object; <b>false</b>, to apply the current object's settings. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.UseDefaultLookAndFeel"/> property. 

            </param>
            <param name="skinName">
		A string value specifying the skin name. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinName"/> property. 

            </param>
            <param name="touchUIMode">
		A value that specifies whether touch-aware mode needs to be enabled or disabled. This value is assigned to the <see cref="T:DevExpress.LookAndFeel.TouchUIMode"/> property.

            </param>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetStyle(DevExpress.LookAndFeel.LookAndFeelStyle,System.Boolean,System.Boolean,System.String,DevExpress.LookAndFeel.TouchUIMode,System.Single)">
            <summary>
                <para>Sets the look and feel settings of the current object to the specified values. 
</para>
            </summary>
            <param name="style">
		A value which specifies the style of the current object. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.Style"/> property. 

            </param>
            <param name="useWindowsXPTheme">
		<b>true</b>, if a control should be painted using the WindowsXP theme; otherwise, <b>false</b>. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.UseWindowsXPTheme"/> property. 

            </param>
            <param name="useDefaultLookAndFeel">
		<b>true</b>, to use the look and feel settings provided by the parent object or default look and feel object; <b>false</b>, to apply the current object's settings. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.UseDefaultLookAndFeel"/> property. 

            </param>
            <param name="skinName">
		A string value specifying the skin name. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinName"/> property. 

            </param>
            <param name="touchUIMode">
		A value that specifies whether touch-aware mode needs to be enabled or disabled. This value is assigned to the <see cref="T:DevExpress.LookAndFeel.TouchUIMode"/> property.

            </param>
            <param name="touchScaleFactor">
		The scale factor applied when touch-aware mode is enabled. This value is assigned to the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.TouchScaleFactor"/> property. 

            </param>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetStyle(DevExpress.LookAndFeel.LookAndFeelStyle,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
                <para>Sets the look and feel settings of the current object to the specified values.
</para>
            </summary>
            <param name="style">
		A <see cref="T:DevExpress.LookAndFeel.LookAndFeelStyle"/> enumeration value which specifies the style of the current object. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.Style"/> property.

            </param>
            <param name="useWindowsXPTheme">
		<b>true</b>, if a control should be painted using the WindowsXP theme; otherwise, <b>false</b>. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.UseWindowsXPTheme"/> property.

            </param>
            <param name="useDefaultLookAndFeel">
		<b>true</b> to use the look and feel settings provided by the parent object or default look and feel object; <b>false</b> to apply the current object's settings. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.UseDefaultLookAndFeel"/> property.

            </param>
            <param name="skinName">
		A string value specifying the skin name. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinName"/> property.

            </param>
            <param name="paletteName">
		A string value specifying the name of the palette used to color vector images.

            </param>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetStyle3D">
            <summary>
                <para>Applies the <b>Style3D</b> style to a control.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetUltraFlatStyle">
            <summary>
                <para>Applies the <b>UltraFlat</b> style to a control.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetWindowsXPStyle">
            <summary>
                <para>Applies the <b>WindowsXP</b> style to a control.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.ShouldSerialize">
            <summary>
                <para>Tests whether the <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object should be persisted.
</para>
            </summary>
            <returns><b>true</b> if the object should be persisted; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinMaskColor">
            <summary>
                <para>Gets or sets a custom hue applied to some skin elements.
</para>
            </summary>
            <value>A custom hue applied to skin elements.
</value>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinMaskColor2">
            <summary>
                <para>Gets or sets the second custom hue, typically applied to some skin elements when they are highlighted/hovered.
</para>
            </summary>
            <value>The second custom hue applied to some skin elements.
</value>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinName">
            <summary>
                <para>Gets or sets the name of a skin style.
</para>
            </summary>
            <value>A string value specifying the skin style's name.
</value>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.Style">
            <summary>
                <para>Gets or sets the style of the current <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.
</para>
            </summary>
            <value>The style of the current <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.
</value>


        </member>
        <member name="E:DevExpress.LookAndFeel.UserLookAndFeel.StyleChanged">
            <summary>
                <para>Occurs on changing properties of the current <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object or the parent LookAndFeel specified by the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.ParentLookAndFeel"/> member.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.ToString">
            <summary>
                <para>Returns the text representation of the current object.
</para>
            </summary>
            <returns>The text representation of the current object.
</returns>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.TouchUIParent">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.UpdateStyleSettings">
            <summary>
                <para>Notifies controls that look-and-feel settings have been changed and the controls need to be refreshed.

</para>
            </summary>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.UseDefaultLookAndFeel">
            <summary>
                <para>Gets or sets whether the current object's settings are in effect.
</para>
            </summary>
            <value><b>true</b> to use look and feel settings provided by the parent object or default look and feel object; <b>false</b> to enable this object's settings.
</value>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.UseWindows7Border">
            <summary>
                <para>Gets or sets whether borders of <see cref="T:DevExpress.XtraEditors.TextEdit"/> controls are painted in the same manner as borders of standard text editors built into Microsoft Windows 7. This property is in effect if the current OS is Windows 7 and the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.UseWindowsXPTheme"/> property is set to <b>true</b>.
</para>
            </summary>
            <value><b>true</b> if borders of <see cref="T:DevExpress.XtraEditors.TextEdit"/> controls are painted in the same manner as borders of standard text editors; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.UseWindowsXPTheme">
            <summary>
                <para>Gets or sets whether controls should be painted using the native Windows theme.
</para>
            </summary>
            <value><b>true</b> if controls should be painted using the native Windows theme; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.LookAndFeel.LookAndFeelStyle">

            <summary>
                <para>Enumerates values for the 
<see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.Style"/> property.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.LookAndFeel.LookAndFeelStyle.Flat">
            <summary>
                <para>Control borders are flat. The following screenshot shows the <b>Flat</b> style applied to a button edit control.
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.LookAndFeel.LookAndFeelStyle.Office2003">
            <summary>
                <para>Borders and buttons have an Office 2003 style. The borders and client area are highlighted when the mouse pointer is positioned over them or they are focused. 
The following screenshot shows the <b>Office2003</b> style applied to a button edit control.
<para>

</para>
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.LookAndFeel.LookAndFeelStyle.Skin">
            <summary>
                <para><para>Control elements are painted using the skin specified by the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinName"/> property. The following screenshot shows a button editor painted using the default <b>Caramel</b> skin. </para>


</para>
            </summary>


        </member>
        <member name="F:DevExpress.LookAndFeel.LookAndFeelStyle.Style3D">
            <summary>
                <para>Control borders are three-dimensional. The following screenshot shows the <b>Style3D</b> style applied to a button edit control.
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.LookAndFeel.LookAndFeelStyle.UltraFlat">
            <summary>
                <para>Borders have an Office XP style. Borders and the client area are highlighted when the mouse pointer is positioned over them or they are focused. 
The following screenshot shows the <b>UltraFlat</b> style applied to a button edit control.
<para>

</para>
<para>

</para>
</para>
            </summary>


        </member>
        <member name="T:DevExpress.LookAndFeel.ActiveLookAndFeelStyle">

            <summary>
                <para>Enumerates values for the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.ActiveStyle"/> property.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.LookAndFeel.ActiveLookAndFeelStyle.Flat">
            <summary>
                <para>Control borders are flat. The following screenshot shows the <b>Flat</b> style applied to a button edit control.
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.LookAndFeel.ActiveLookAndFeelStyle.Office2003">
            <summary>
                <para>Borders and buttons have an Office 2003 style. The borders and client area are highlighted when the mouse pointer is positioned over them or they are focused. 
The following screenshot shows the <b>Office2003</b> style applied to a button edit control.
<para>

</para>
<para>

</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.LookAndFeel.ActiveLookAndFeelStyle.Skin">
            <summary>
                <para><para>Control elements are painted using the skin determined by the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinName"/> property. The following screenshot shows a button editor painted using the default <b>Caramel</b> skin. </para>


</para>
            </summary>


        </member>
        <member name="F:DevExpress.LookAndFeel.ActiveLookAndFeelStyle.Style3D">
            <summary>
                <para>Control borders are three-dimensional. The following screenshot shows the <b>Style3D</b> style applied to a button edit control.
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.LookAndFeel.ActiveLookAndFeelStyle.UltraFlat">
            <summary>
                <para>Borders have an Office XP style. Borders and the client area are highlighted when the mouse pointer is positioned over them or they are focused. 
The following screenshot shows the <b>UltraFlat</b> style applied to a button edit control.
<para>

</para>
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.LookAndFeel.ActiveLookAndFeelStyle.WindowsXP">
            <summary>
                <para>Control elements are painted using the XP theme.  The following screenshot shows the <b>WindowsXP</b> style applied to a button edit control.
<para>

</para>
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.SharedImageCollection">

            <summary>
                <para>The image collection that allows you to share images between controls within multiple forms.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.SharedImageCollection.#ctor">
            <summary>
                <para>Initializes a new instance of the SharedImageCollection class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.SharedImageCollection.#ctor(System.ComponentModel.IContainer)">
            <summary>
                <para>Initializes a new instance of the SharedImageCollection class with the specified container.
</para>
            </summary>
            <param name="container">
		An object that implements the <see cref="T:System.ComponentModel.IContainer"/> interface.

            </param>


        </member>
        <member name="P:DevExpress.Utils.SharedImageCollection.AllowModifyingResources">
            <summary>
                <para>Gets or sets whether or not SharedImageCollections are allowed to modify the project resource file.
</para>
            </summary>
            <value><b>true</b>, if SharedImageCollections are allowed to modify the project resource file; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Utils.SharedImageCollection.BeginInit">
            <summary>
                <para>Notifies the image collection that initialization has started
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.SharedImageCollection.EndInit">
            <summary>
                <para>Notifies the image collection that initialization is complete.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.SharedImageCollection.HasChanges">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.Utils.SharedImageCollection.ImageSizeResourceName">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Utils.SharedImageCollection.ImageSource">
            <summary>
                <para>Gets or sets the inner collection of images for the SharedImageCollection.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ImageCollection"/> object that is the inner collection of images.
</value>


        </member>
        <member name="P:DevExpress.Utils.SharedImageCollection.InstanceCount">
            <summary>
                <para>Gets the number of existing SharedImageCollection instances.
</para>
            </summary>
            <value>An integer value that is the number of existing SharedImageCollection instances.
</value>


        </member>
        <member name="P:DevExpress.Utils.SharedImageCollection.ParentControl">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="F:DevExpress.Utils.SharedImageCollection.TimestampResourceName">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="T:DevExpress.XtraEditors.Controls.BorderSide">

            <summary>
                <para>Contains values specifying border sides.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderSide.All">
            <summary>
                <para>All border sides are painted. Enabling this flag results in enabling the <b>Left</b>, <b>Top</b>, <b>Right</b> and <b>Bottom</b> flags and disabling the <b>None</b> flag.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderSide.Bottom">
            <summary>
                <para>Bottom border side is painted.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderSide.Left">
            <summary>
                <para>Left border side is painted.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderSide.None">
            <summary>
                <para>None of border sides is painted. Enabling this option results in disabling all other options.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderSide.Right">
            <summary>
                <para>Right border side is painted.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderSide.Top">
            <summary>
                <para>Top border side is painted.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.Drawing.GraphicsCache">

            <summary>
                <para>Provides methods to paint on drawing surfaces in GDI+ and DirectX modes (see DirectX hardware acceleration).
Provides storage for pens, fonts and brushes.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.#ctor(System.Windows.Forms.PaintEventArgs,DevExpress.Utils.Paint.XPaint)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> class.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.PaintEventArgs"/> object that contains data used for painting. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.PaintArgs"/> property.

            </param>
            <param name="paint">
		A <b>DevExpress.Utils.Paint.XPaint</b> object providing painting methods used in the <see cref="T:DevExpress.XtraNavBar.NavBarControl"/> control. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.Paint"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.#ctor(System.Windows.Forms.PaintEventArgs)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> class.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.PaintEventArgs"/> object that contains data used to paint.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.#ctor(System.Drawing.Graphics)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> class.
</para>
            </summary>
            <param name="g">
		The <see cref="T:System.Drawing.Graphics"/> object to initialize the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.Graphics"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.#ctor(DevExpress.Utils.Drawing.DXPaintEventArgs)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> class.
</para>
            </summary>
            <param name="e">
		A <see cref="T:DevExpress.Utils.Drawing.DXPaintEventArgs"/> object that contains data used to perform painting. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.PaintArgs"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.#ctor(DevExpress.Utils.Drawing.DXPaintEventArgs,DevExpress.Utils.Paint.XPaint)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> class
</para>
            </summary>
            <param name="e">
		A <see cref="T:DevExpress.Utils.Drawing.DXPaintEventArgs"/> object that contains data used to perform painting. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.PaintArgs"/> property.

            </param>
            <param name="paint">
		A <b>DevExpress.Utils.Paint.XPaint</b>  object that provides methods used for drawing objects. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.Paint"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.#ctor(System.Windows.Forms.PaintEventArgs,DevExpress.Utils.DPI.ScaleHelper)">
            <summary>
                <para>Initializes a new instance of the GraphicsCache class with the specified settings.
</para>
            </summary>
            <param name="e">
		A PaintEventArgs object that contains data used for painting. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.PaintArgs"/> property.

            </param>
            <param name="scaleDPI">
		A ScaleHelper object used to appropriately adjust the values for font and drawing APIs. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.ScaleDPI"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.#ctor(DevExpress.Utils.Drawing.DXPaintEventArgs,DevExpress.Utils.Paint.XPaint,DevExpress.Utils.DPI.ScaleHelper)">
            <summary>
                <para>This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.PaintArgs"/> property.
</para>
            </summary>
            <param name="e">
		A PaintEventArgs object that contains data used for painting. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.PaintArgs"/> property.

            </param>
            <param name="paint">
		A DevExpress.Utils.Paint.XPaint object associated with this GraphicsCache object. 

            </param>
            <param name="scaleDPI">
		A ScaleHelper object used to appropriately adjust the values for font and drawing APIs. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.ScaleDPI"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.#ctor(DevExpress.Utils.Drawing.DXPaintEventArgs,DevExpress.Utils.DPI.ScaleHelper)">
            <summary>
                <para>This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.PaintArgs"/> property.
</para>
            </summary>
            <param name="e">
		A PaintEventArgs object that contains data used for painting. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.PaintArgs"/> property.

            </param>
            <param name="scaleDPI">
		A ScaleHelper object used to appropriately adjust the values for font and drawing APIs. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.ScaleDPI"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.#ctor(System.Drawing.Graphics,DevExpress.Utils.DPI.ScaleHelper)">
            <summary>
                <para>This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.PaintArgs"/> property.
</para>
            </summary>
            <param name="g">
		A Graphics object that serves as the painting surface and provides painting facilities. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.Graphics"/> property.

            </param>
            <param name="scaleDPI">
		A ScaleHelper object used to appropriately adjust the values for font and drawing APIs. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.ScaleDPI"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.AllowDrawInvisibleRect">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.Cache">
            <summary>
                <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.Drawing.ResourceCache"/> object.
</value>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcClipRectangle(System.Drawing.Rectangle)">
            <summary>
                <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="r">
		A <see cref="T:System.Drawing.Rectangle"/> structure.

            </param>
            <returns>A <see cref="T:System.Drawing.Rectangle"/> structure.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcDefaultTextSize(System.Drawing.Font)">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="font">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcRectangle(System.Drawing.Rectangle)">
            <summary>
                <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="r">
		A <see cref="T:System.Drawing.Rectangle"/> structure.

            </param>
            <returns>A <see cref="T:System.Drawing.Rectangle"/> structure.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcTextSize(System.String,System.Drawing.Font,System.Drawing.StringFormat,System.Int32)">
            <summary>
                <para>Calculates the size of the specified string when it's drawn with the specified font and using the specified formatting.
</para>
            </summary>
            <param name="text">
		A <see cref="T:System.String"/> value which represents a string to measure.

            </param>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object which defines the font and the associated settings of the text.

            </param>
            <param name="strFormat">
		A <see cref="T:System.Drawing.StringFormat"/> object which represents formatting information, such as the line spacing and alignment of the string.

            </param>
            <param name="maxWidth">
		An integer value specifying the maximum width of the string (in pixels).

            </param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> structure which represents the size (in pixels) of the string.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcTextSize(System.String,System.Drawing.Font,System.Drawing.StringFormat,System.Int32,System.Int32,System.Boolean@)">
            <summary>
                <para>Calculates the size of the specified string when it's drawn with the specified font and using the specified formatting, fitting the string into a clipping rectangle. Allows you to determine whether the string does not fit the clipping rectangle.

</para>
            </summary>
            <param name="text">
		The string to be measured.

            </param>
            <param name="font">
		The font in which to paint the string.


            </param>
            <param name="strFormat">
		Contains formatting information, such as the line spacing and alignment of the string.

            </param>
            <param name="maxWidth">
		The maximum width of the clipping rectangle that will fit the string (in pixels).

            </param>
            <param name="maxHeight">
		The maximum height of the clipping rectangle that will fit the string (in pixels).

            </param>
            <param name="isCropped">
		Returns whether the text is trimmed (its size is larger than the clipping rectangle).

            </param>
            <returns>The measured size of the string, in pixels.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcTextSize(System.String,System.Drawing.Font,System.Drawing.StringFormat,System.Int32,System.Int32)">
            <summary>
                <para>Calculates the size of the specified string when it's drawn with the specified font and formatting, fitting the string into a clipping rectangle.

</para>
            </summary>
            <param name="text">
		The string to be measured.

            </param>
            <param name="font">
		The font in which to paint the string.


            </param>
            <param name="strFormat">
		Contains formatting information, such as the line spacing and alignment of the string.

            </param>
            <param name="maxWidth">
		The maximum width of the clipping rectangle that will fit the string (in pixels).

            </param>
            <param name="maxHeight">
		The maximum height of the clipping rectangle that will fit the string (in pixels).

            </param>
            <returns>The measured size of the string, in pixels.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcTextSize(System.String,System.Drawing.Font,System.Drawing.SizeF)">
            <summary>
                <para>Calculates the size of the specified string when it's drawn with the specified font.
</para>
            </summary>
            <param name="text">
		A <see cref="T:System.String"/> value which represents a string to measure.

            </param>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object which defines the font and the associated settings of the text.

            </param>
            <param name="layoutArea">
		A <see cref="T:System.Drawing.SizeF"/> structure that specifies the maximum layout area for the text.

            </param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> structure which represents the size (in pixels) of the string.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcTextSize(System.String,System.Drawing.Font,System.Drawing.StringFormat,System.Drawing.SizeF)">
            <summary>
                <para>Calculates the size of the specified string when it's drawn with the specified font and using the specified formatting.
</para>
            </summary>
            <param name="text">
		A <see cref="T:System.String"/> value which represents a string to measure.

            </param>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object which defines the font and the associated settings of the text.

            </param>
            <param name="format">
		A <see cref="T:System.Drawing.StringFormat"/> object which represents formatting information, such as the line spacing and alignment, of the string.

            </param>
            <param name="layoutArea">
		A <see cref="T:System.Drawing.SizeF"/> structure that specifies the maximum layout area for the text.

            </param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> structure which represents the size (in pixels) of the string.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcTextSize(System.String,System.Drawing.Font,System.Int32)">
            <summary>
                <para>Calculates the size of the specified string when it's drawn with the specified font.
</para>
            </summary>
            <param name="text">
		A <see cref="T:System.String"/> value which represents a string to measure.

            </param>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object which defines the font and the associated settings of the text.

            </param>
            <param name="maxWidth">
		An integer value specifying the maximum width of the string (in pixels).

            </param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> structure which represents the size (in pixels) of the string.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcTextSize(System.String,System.Drawing.Font)">
            <summary>
                <para>Calculates the size of the specified string when it's drawn with the specified font.
</para>
            </summary>
            <param name="text">
		A <see cref="T:System.String"/> value which represents a string to measure.

            </param>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object which defines the font and the associated settings of the text.

            </param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> structure which represents the size (in pixels) of the string.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.Clear">
            <summary>
                <para>Clears the internal hash tables that store the pens, fonts and, solid and linear gradient brushes that have recently been used.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.Clear(System.Drawing.Color)">
            <summary>
                <para>Clears the entire drawing surface and fills it with the specified background color.
</para>
            </summary>
            <param name="color">
		A Color structure that represents the background color of the drawing surface.

            </param>


        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.ClipInfo">
            <summary>
                <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.Drawing.GraphicsClip"/> object.
</value>


        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.CompositingMode">
            <summary>
                <para>Gets a value that specifies how composited images are drawn to the cached <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.Graphics"/>.
</para>
            </summary>
            <value>One of the <see cref="T:System.Drawing.Drawing2D.CompositingMode"/> values.
</value>


        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.CompositingQuality">
            <summary>
                <para>Gets or sets the rendering quality of composited images drawn to the cached <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.Graphics"/>.
</para>
            </summary>
            <value>One of the <see cref="T:System.Drawing.Drawing2D.CompositingQuality"/> values.
</value>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.Dispose">
            <summary>
                <para>Releases all resources used by this <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
            <summary>
                <para>Draws an arc representing a portion of an ellipse specified by a <see cref="T:System.Drawing.Rectangle"/> structure.
</para>
            </summary>
            <param name="pen">
		<see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the arc.

            </param>
            <param name="rect">
		<see cref="T:System.Drawing.Rectangle"/> structure that defines the boundaries of the ellipse.

            </param>
            <param name="startAngle">
		Angle in degrees measured clockwise from the x-axis to the starting point of the arc.

            </param>
            <param name="sweepAngle">
		Angle in degrees measured clockwise from the <i>startAngle</i> parameter to ending point of the arc.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
                <para>Draws an arc representing a portion of an ellipse specified by a <see cref="T:System.Drawing.RectangleF"/> structure.
</para>
            </summary>
            <param name="pen">
		<see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the arc.

            </param>
            <param name="rect">
		<see cref="T:System.Drawing.RectangleF"/> structure that defines the boundaries of the ellipse.

            </param>
            <param name="startAngle">
		Angle in degrees measured clockwise from the x-axis to the starting point of the arc.

            </param>
            <param name="sweepAngle">
		Angle in degrees measured clockwise from the <i>startAngle</i> parameter to ending point of the arc.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                <para>Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.
</para>
            </summary>
            <param name="pen">
		<see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the arc.

            </param>
            <param name="x">
		The x-coordinate of the upper-left corner of the rectangle that defines the ellipse.

            </param>
            <param name="y">
		The y-coordinate of the upper-left corner of the rectangle that defines the ellipse.

            </param>
            <param name="width">
		Width of the rectangle that defines the ellipse.

            </param>
            <param name="height">
		Height of the rectangle that defines the ellipse.

            </param>
            <param name="startAngle">
		Angle in degrees measured clockwise from the x-axis to the starting point of the arc.

            </param>
            <param name="sweepAngle">
		Angle in degrees measured clockwise from the <i>startAngle</i> parameter to ending point of the arc.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                <para>Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.
</para>
            </summary>
            <param name="pen">
		<see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the arc.

            </param>
            <param name="x">
		The x-coordinate of the upper-left corner of the rectangle that defines the ellipse.

            </param>
            <param name="y">
		The y-coordinate of the upper-left corner of the rectangle that defines the ellipse.

            </param>
            <param name="width">
		Width of the rectangle that defines the ellipse.

            </param>
            <param name="height">
		Height of the rectangle that defines the ellipse.

            </param>
            <param name="startAngle">
		Angle in degrees measured clockwise from the x-axis to the starting point of the arc.

            </param>
            <param name="sweepAngle">
		Angle in degrees measured clockwise from the <i>startAngle</i> parameter to ending point of the arc.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
                <para>Draws a Bezier spline defined by four <see cref="T:System.Drawing.PointF"/> structures.
</para>
            </summary>
            <param name="pen">
		<see cref="T:System.Drawing.Pen"/> structure that determines the color, width, and style of the curve.

            </param>
            <param name="pt1">
		<see cref="T:System.Drawing.PointF"/> structure that represents the starting point of the curve.

            </param>
            <param name="pt2">
		<see cref="T:System.Drawing.PointF"/> structure that represents the first control point for the curve.

            </param>
            <param name="pt3">
		<see cref="T:System.Drawing.PointF"/> structure that represents the second control point for the curve.

            </param>
            <param name="pt4">
		<see cref="T:System.Drawing.PointF"/> structure that represents the ending point of the curve.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                <para>Draws a Bezier spline defined by four ordered pairs of coordinates that represent points.
</para>
            </summary>
            <param name="pen">
		<see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the curve.

            </param>
            <param name="x1">
		The x-coordinate of the starting point of the curve.

            </param>
            <param name="y1">
		The y-coordinate of the starting point of the curve.

            </param>
            <param name="x2">
		The x-coordinate of the first control point of the curve.

            </param>
            <param name="y2">
		The y-coordinate of the first control point of the curve.

            </param>
            <param name="x3">
		The x-coordinate of the second control point of the curve.

            </param>
            <param name="y3">
		The y-coordinate of the second control point of the curve.

            </param>
            <param name="x4">
		The x-coordinate of the ending point of the curve.

            </param>
            <param name="y4">
		The y-coordinate of the ending point of the curve.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
            <summary>
                <para>Draws a Bezier spline defined by four <see cref="T:System.Drawing.Point"/> structures.
</para>
            </summary>
            <param name="pen">
		<see cref="T:System.Drawing.Pen"/> structure that determines the color, width, and style of the curve.

            </param>
            <param name="pt1">
		<see cref="T:System.Drawing.Point"/> structure that represents the starting point of the curve.

            </param>
            <param name="pt2">
		<see cref="T:System.Drawing.Point"/> structure that represents the first control point for the curve.

            </param>
            <param name="pt3">
		<see cref="T:System.Drawing.Point"/> structure that represents the second control point for the curve.

            </param>
            <param name="pt4">
		<see cref="T:System.Drawing.Point"/> structure that represents the ending point of the curve.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
                <para>Draws a series of Bezier splines from an array of <see cref="T:System.Drawing.PointF"/> structures.
</para>
            </summary>
            <param name="pen">
		<see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the curve.

            </param>
            <param name="points">
		Array of <see cref="T:System.Drawing.PointF"/> structures that represent the points that determine the curve. The number of points in the array should be a multiple of 3 plus 1, such as 4, 7, or 10.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
            <summary>
                <para>Draws a series of Bezier splines from an array of <see cref="T:System.Drawing.Point"/> structures.
</para>
            </summary>
            <param name="pen">
		<see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the curve.

            </param>
            <param name="points">
		Array of <see cref="T:System.Drawing.Point"/> structures that represent the points that determine the curve. The number of points in the array should be a multiple of 3 plus 1, such as 4, 7, or 10.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawEllipse(System.Single,System.Single,System.Single,System.Single,System.Drawing.Color,System.Int32)">
            <summary>
                <para>Draws an ellipse defined by a bounding rectangle specified by a coordinate pair, a height, and a width.
</para>
            </summary>
            <param name="x">
		A Single value that is the x-coordinate of the bounding rectangle's upper-left corner.

            </param>
            <param name="y">
		A Single value that is the y-coordinate of the bounding rectangle's upper-left corner.

            </param>
            <param name="width">
		A Single value that is the bounding rectangle width.

            </param>
            <param name="height">
		A Single value that is the bounding rectangle height.

            </param>
            <param name="color">
		An ellipse color.

            </param>
            <param name="penWidth">
		An Int32 value that specifies the ellipse line thickness.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
            <summary>
                <para>Draws an ellipse specified by a bounding RectangleF structure.
</para>
            </summary>
            <param name="pen">
		A Pen object that specifies the ellipse color, style and line thickness.

            </param>
            <param name="rect">
		A Rectangle structure that defines the ellipse boundaries.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawEllipse(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Int32)">
            <summary>
                <para>Draws an ellipse defined by a bounding rectangle specified by the rectangle upper-left corner coordinates, a height, and a width.
</para>
            </summary>
            <param name="x">
		An Int32 value that is the x-coordinate of the bounding rectangle's upper-left corner.

            </param>
            <param name="y">
		An Int32 value that is the y-coordinate of the bounding rectangle's upper-left corner.

            </param>
            <param name="width">
		An Int32 value that is the bounding rectangle width.

            </param>
            <param name="height">
		An Int32 value that is the bounding rectangle height.


            </param>
            <param name="color">
		An ellipse color.

            </param>
            <param name="penWidth">
		An Int32 value that specifies the ellipse line thickness.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)">
            <summary>
                <para>Draws an ellipse specified by a bounding Rectangle structure.
</para>
            </summary>
            <param name="pen">
		A Pen object that specifies the ellipse color, style and line thickness.

            </param>
            <param name="rect">
		A Rectangle structure that defines the ellipse boundaries.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)">
            <summary>
                <para>Draws the image represented by the specified <see cref="T:System.Drawing.Icon"/> at the specified coordinates.
</para>
            </summary>
            <param name="icon">
		<see cref="T:System.Drawing.Icon"/> to draw.

            </param>
            <param name="x">
		The x-coordinate of the upper-left corner of the drawn image.

            </param>
            <param name="y">
		The y-coordinate of the upper-left corner of the drawn image.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)">
            <summary>
                <para>Draws the image represented by the specified <see cref="T:System.Drawing.Icon"/> within the area specified by a <see cref="T:System.Drawing.Rectangle"/> structure.
</para>
            </summary>
            <param name="icon">
		<see cref="T:System.Drawing.Icon"/> to draw.

            </param>
            <param name="targetRect">
		<see cref="T:System.Drawing.Rectangle"/> structure that specifies the location and size of the resulting image on the display surface. The image contained in the <i>icon</i> parameter is scaled to the dimensions of this rectangular area.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)">
            <summary>
                <para>Draws the image represented by the specified <see cref="T:System.Drawing.Icon"/> without scaling the image.
</para>
            </summary>
            <param name="icon">
		<see cref="T:System.Drawing.Icon"/> to draw.

            </param>
            <param name="targetRect">
		<see cref="T:System.Drawing.Rectangle"/> structure that specifies the location and size of the resulting image. The image is not scaled to fit this rectangle, but retains its original size. If the image is larger than the rectangle, it is clipped to fit inside it.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
                <para>Draws the specified Image at the specified location and with the specified size.
</para>
            </summary>
            <param name="image">
		An Image to draw.

            </param>
            <param name="rect">
		A Rectangle structure that specifies the image location and size.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
            <summary>
                <para>Draws the portion of the specified Image at the specified location and with the specified size.
</para>
            </summary>
            <param name="image">
		An Image to draw.

            </param>
            <param name="destRect">
		A Rectangle structure that specifies the drawn image's location and size. The image is scaled to fit the rectangle.

            </param>
            <param name="srcRect">
		A Rectangle structure that specifies the image portion to be drawn.

            </param>
            <param name="srcUnit">
		A GraphicsUnit enumeration value that specifies the measure units for the <i>srcRect</i> parameter.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.PointF[])">
            <summary>
                <para>Draws the specified Image at the specified location and with the specified shape and size.
</para>
            </summary>
            <param name="image">
		An Image to draw.

            </param>
            <param name="destPoints">
		An array of three PointF structures that define a parallelogram.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
            <summary>
                <para>Draws the specified Image portion at the specified location and with the specified size.
</para>
            </summary>
            <param name="image">
		An Image to draw.

            </param>
            <param name="destPoints">
		An array of three Point structures that define a parallelogram.

            </param>
            <param name="srcRect">
		A Rectangle structure that specifies the image portion to be drawn.

            </param>
            <param name="srcUnit">
		A GraphicsUnit enumeration value that specifies the measure units for the <i>srcRect</i> parameter.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.Point[])">
            <summary>
                <para>Draws the specified Image at the specified location and with the specified shape and size.
</para>
            </summary>
            <param name="image">
		An Image to draw.

            </param>
            <param name="destPoints">
		An array of three Point structures that define a parallelogram.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
                <para>Draws the specified Image with its original physical size, at the location specified by a coordinate pair.
</para>
            </summary>
            <param name="image">
		An Image to draw.

            </param>
            <param name="x">
		An Int32 value that is the x-coordinate of the image upper-left corner.

            </param>
            <param name="y">
		An Int32 value that is the y-coordinate of the image upper-left corner.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                <para> </para>
            </summary>
            <param name="image">
		An Image to draw.

            </param>
            <param name="x">
		An Int32 value that is the x-coordinate of the image upper-left corner.

            </param>
            <param name="y">
		An Int32 value that is the y-coordinate of the image upper-left corner.

            </param>
            <param name="width">
		An Int32 value that is the image width.

            </param>
            <param name="height">
		An Int32 value that is the image height.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.Point)">
            <summary>
                <para>Draws the Image at the specified location and with the specified size.
</para>
            </summary>
            <param name="image">
		An Image to draw.

            </param>
            <param name="point">
		A Point structure that specifies the image upper-left corner's location.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
            <summary>
                <para>Draws the Image portion at the specified location and with the specified size.
</para>
            </summary>
            <param name="image">
		An Image to draw.

            </param>
            <param name="destPoints">
		An array of three PointF structures that define a parallelogram.

            </param>
            <param name="srcRect">
		A RectangleF structure that specifies the image portion to be drawn.

            </param>
            <param name="srcUnit">
		A GraphicsUnit enumeration value that specifies the measure units for the <i>srcRect</i> parameter.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
            <summary>
                <para>Draws an image portion at the specified location.
</para>
            </summary>
            <param name="image">
		An Image to draw.

            </param>
            <param name="x">
		An Single value that is the x-coordinate of the image upper-left corner.

            </param>
            <param name="y">
		An Single value that is the y-coordinate of the image upper-left corner.

            </param>
            <param name="srcRect">
		A RectangleF structure that specifies the image portion to be drawn.

            </param>
            <param name="srcUnit">
		A GraphicsUnit enumeration value that specifies the measure units for the <i>srcRect</i> parameter.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
            <summary>
                <para>Draws the Image with its original physical size and at the specified location.
</para>
            </summary>
            <param name="image">
		An Image to draw.

            </param>
            <param name="point">
		A PointF structure that specifies the image upper-left corner's location.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
            <summary>
                <para>Draws the Image at the specified location and with the specified size.
</para>
            </summary>
            <param name="image">
		An Image to draw.

            </param>
            <param name="rect">
		A RectangleF structure that specifies the image location and size.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
            <summary>
                <para>Draws an image portion at a specified location.
</para>
            </summary>
            <param name="image">
		An Image to draw.

            </param>
            <param name="x">
		An Int32 value that is the x-coordinate of the image upper-left corner.

            </param>
            <param name="y">
		An Int32 value that is the y-coordinate of the image upper-left corner.

            </param>
            <param name="srcRect">
		A Rectangle structure that specifies the image portion to be drawn.

            </param>
            <param name="srcUnit">
		A GraphicsUnit enumeration value that specifies the measure units for the <i>srcRect</i> parameter.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Single,System.Single)">
            <summary>
                <para>Draws the Image using its original physical size and at the specified location.
</para>
            </summary>
            <param name="image">
		An Image to draw.

            </param>
            <param name="x">
		An Single value that is the x-coordinate of the image upper-left corner.

            </param>
            <param name="y">
		An Single value that is the y-coordinate of the image upper-left corner.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
            <summary>
                <para>Draws an Image portion at the specified location and with the specified size.
</para>
            </summary>
            <param name="image">
		An Image to draw.

            </param>
            <param name="destRect">
		A RectangleF structure that specifies the image location and size. The image is scaled to fit this rectangle.

            </param>
            <param name="srcRect">
		A RectangleF structure that specifies the image portion to be drawn.

            </param>
            <param name="srcUnit">
		A GraphicsUnit enumeration value that specifies the measure units for the <i>srcRect</i> parameter.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
            <summary>
                <para>Draws an Image portion at the specified location and with the specified size.
</para>
            </summary>
            <param name="image">
		An Image to draw.

            </param>
            <param name="destRect">
		A Rectangle structure that specifies the image location and size. The image is scaled to fit this rectangle.

            </param>
            <param name="srcX">
		A Single value that is the x-coordinate of the image portion's upper-left corner.

            </param>
            <param name="srcY">
		A Single value that is the y-coordinate of the image portion's upper-left corner.

            </param>
            <param name="srcWidth">
		A Single value that is the image portion's width.

            </param>
            <param name="srcHeight">
		A Single value that is the image portion's height.

            </param>
            <param name="srcUnit">
		A GraphicsUnit enumeration value that specifies the measure units for the <i>srcX</i>, <i>srcY</i>, <i>srcHeight</i> and <i>srcWidth</i> parameters.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
            <summary>
                <para>Draws an Image portion at the specified location and with the specified size.
</para>
            </summary>
            <param name="image">
		An Image to draw.

            </param>
            <param name="destRect">
		A Rectangle structure that specifies the image location and size. The image is scaled to fit this rectangle.

            </param>
            <param name="x">
		An Int32 value that is the x-coordinate of the image portion' upper-left corner.

            </param>
            <param name="y">
		An Int32 value that is the y-coordinate of the image portion' upper-left corner.

            </param>
            <param name="width">
		An Int32 value that is the x-coordinate the image portion's width.

            </param>
            <param name="height">
		An Int32 value that is the image portion' height.

            </param>
            <param name="srcUnit">
		A GraphicsUnit enumeration value that specifies the measure units for the <i>x</i>, <i>y</i>, <i>width</i> and <i>height</i> parameters.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                <para>Draws the Image at the specific location and with the specific size.
</para>
            </summary>
            <param name="image">
		An Image to draw.

            </param>
            <param name="x">
		An Single value that is the x-coordinate of the image upper-left corner.

            </param>
            <param name="y">
		An Single value that is the y-coordinate of the image upper-left corner.


            </param>
            <param name="width">
		An Single value that is the image width.

            </param>
            <param name="height">
		An Single value that is the image height.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Imaging.ColorMatrix)">
            <summary>
                <para>Draws the portion of the specified Image at the specified location and with the specified size.
</para>
            </summary>
            <param name="image">
		An Image to draw.

            </param>
            <param name="destPts">
		An array of three Point structures that define a parallelogram.

            </param>
            <param name="srcRect">
		A Rectangle structure that specifies the image portion to be drawn.

            </param>
            <param name="matrix">
		A color-adjustment matrix for the default category.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Imaging.ColorMatrix)">
            <summary>
                <para>Draws the portion of the specified Image at the specified location and with the specified size.
</para>
            </summary>
            <param name="image">
		An Image to draw.

            </param>
            <param name="destRect">
		A Rectangle structure that specifies the drawn image's location and size. The image is scaled to fit the rectangle.

            </param>
            <param name="srcRect">
		A Rectangle structure that specifies the image portion to be drawn.

            </param>
            <param name="matrix">
		A color-adjustment matrix for the default category.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.Imaging.ColorMatrix)">
            <summary>
                <para>Draws an Image portion at the specified location and with the specified size.
</para>
            </summary>
            <param name="image">
		An Image to draw.

            </param>
            <param name="destRect">
		A Rectangle structure that specifies the image location and size. The image is scaled to fit this rectangle.

            </param>
            <param name="srcX">
		A Single value that is the x-coordinate of the image portion's upper-left corner.

            </param>
            <param name="srcY">
		A Single value that is the y-coordinate of the image portion's upper-left corner.

            </param>
            <param name="srcWidth">
		A Single value that is the image portion's width.

            </param>
            <param name="srcHeight">
		A Single value that is the image portion's height.

            </param>
            <param name="matrix">
		A color-adjustment matrix for the default category.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.Imaging.ColorMatrix)">
            <summary>
                <para>Draws the Image portion at the specified location and with the specified size.
</para>
            </summary>
            <param name="image">
		An Image to draw.

            </param>
            <param name="destPts">
		An array of three PointF structures that define a parallelogram.

            </param>
            <param name="srcRect">
		A RectangleF structure that specifies the image portion to be drawn.

            </param>
            <param name="matrix">
		A color-adjustment matrix for the default category.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
            <summary>
                <para>Draws the specified Image portion with the specified size.
</para>
            </summary>
            <param name="image">
		An Image to draw. 

            </param>
            <param name="destRect">
		A Rectangle structure that specifies the drawn image's location and size. The image is scaled to fit the rectangle. 

            </param>
            <param name="scrRect">
		A Rectangle structure that specifies the image portion to be drawn. 

            </param>
            <param name="enabled">
		<b>true</b> if the image should be painted as is; <b>false</b> to draw a grayed-out "disabled" image.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Imaging.ImageAttributes)">
            <summary>
                <para>Draws the specified Image portion at the specific coordinates and with the specified attributes and size.
</para>
            </summary>
            <param name="image">
		An Image to draw. 

            </param>
            <param name="destRect">
		A Rectangle structure that specifies the drawn image's location and size. The image is scaled to fit the rectangle. 

            </param>
            <param name="scrRect">
		A Rectangle structure that specifies the image portion to be drawn. 

            </param>
            <param name="attributes">
		A System.Drawing.Imaging.ImageAttributes object that specifies recoloring and gamma information for the image object.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Boolean)">
            <summary>
                <para>Draws the specified Image portion at the specific coordinates and with the specified size.
</para>
            </summary>
            <param name="image">
		An Image to draw. 

            </param>
            <param name="x">
		An Int32 value that is the x-coordinate of the image upper-left corner. 

            </param>
            <param name="y">
		An Int32 value that is the y-coordinate of the image upper-left corner. 

            </param>
            <param name="srcRect">
		A Rectangle structure that specifies the image portion to be drawn. 

            </param>
            <param name="enabled">
		<b>true</b> if the image should be painted as is; <b>false</b> to draw a grayed-out "disabled" image.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                <para>Draws an image at the specific location using its original physical size.
</para>
            </summary>
            <param name="image">
		An Image to draw.

            </param>
            <param name="x">
		An Int32 value that is the x-coordinate of the image upper-left corner.

            </param>
            <param name="y">
		An Int32 value that is the y-coordinate of the image upper-left corner.

            </param>
            <param name="width">
		Not used.

            </param>
            <param name="height">
		Not used.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
                <para>Draws an image using its original physical size at the location specified by a coordinate pair.
</para>
            </summary>
            <param name="image">
		An Image to draw.

            </param>
            <param name="x">
		An Int32 value that is the x-coordinate of the image upper-left corner.

            </param>
            <param name="y">
		An Int32 value that is the y-coordinate of the image upper-left corner.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
            <summary>
                <para>Draws an image at the specific location using its original physical size.
</para>
            </summary>
            <param name="image">
		An Image to draw.

            </param>
            <param name="point">
		A Point structure that specifies the image upper-left corner location.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
                <para>Draws an image at the specific location using its original physical size.
</para>
            </summary>
            <param name="image">
		An Image to draw.

            </param>
            <param name="rect">
		A Rectangle structure, whose X and Y properties specify the image upper-left corner coordinates, and Width and Height properties are ignored.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawLine(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Int32)">
            <summary>
                <para>Draws a line connecting two Point structures.
</para>
            </summary>
            <param name="pt1">
		Point structure that represents the first point to connect.

            </param>
            <param name="pt2">
		Point structure that represents the second point to connect.

            </param>
            <param name="color">
		A Color structure that indicates the color of the Pen used to draw the line.

            </param>
            <param name="thickness">
		A value indicating the width of the Pen used to draw the line.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawLine(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Int32)">
            <summary>
                <para>Draws a line connecting two PointF structures.
</para>
            </summary>
            <param name="pt1">
		A PointF structure that represents the first point to connect.

            </param>
            <param name="pt2">
		A PointF structure that represents the second point to connect.

            </param>
            <param name="color">
		A Color structure that indicates the color of the Pen used to draw the line.

            </param>
            <param name="thickness">
		A value indicating the width of the Pen used to draw the line.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)">
            <summary>
                <para>Draws a line on the current painting surface connecting two Point structures.
</para>
            </summary>
            <param name="pen">
		A Pen object specifying the Pen used to draw the line.

            </param>
            <param name="pt1">
		A Point structure that represents the first point to connect.

            </param>
            <param name="pt2">
		A Point structure that represents the second point to connect.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawLine(System.Single,System.Single,System.Single,System.Single,System.Drawing.Color,System.Int32)">
            <summary>
                <para>Draws a line connecting two PointF structures.
</para>
            </summary>
            <param name="x1">
		The x-coordinate of the PointF structure that represents the first point to connect.

            </param>
            <param name="y1">
		The y-coordinate of the PointF structure that represents the first point to connect.

            </param>
            <param name="x2">
		The x-coordinate of the PointF structure that represents the second point to connect.

            </param>
            <param name="y2">
		The y-coordinate of the PointF structure that represents the second point to connect.

            </param>
            <param name="color">
		A Color structure that indicates the color of the Pen used to draw the line.

            </param>
            <param name="thickness">
		A value indicating the width of the Pen used to draw the line.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Int32)">
            <summary>
                <para>Draws a line connecting two Point structures.
</para>
            </summary>
            <param name="x1">
		The x-coordinate of the Point structure that represents the first point to connect.

            </param>
            <param name="y1">
		The y-coordinate of the Point structure that represents the first point to connect.

            </param>
            <param name="x2">
		The x-coordinate of the Point structure that represents the second point to connect.

            </param>
            <param name="y2">
		The y-coordinate of the Point structure that represents the second point to connect.

            </param>
            <param name="color">
		A Color structure that indicates the color of the Pen used to draw the line.

            </param>
            <param name="thickness">
		A value indicating the width of the Pen used to draw the line.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawLines(System.Drawing.Point[],System.Drawing.Color,System.Int32)">
            <summary>
                <para>Draws a polygon defined by an array of Point structures.
</para>
            </summary>
            <param name="lines">
		Array of Point structures that represent the vertices of the polygon.

            </param>
            <param name="color">
		A Color structure that indicates the color of the Pen used to draw the lines.

            </param>
            <param name="thickness">
		A value indicating the width of the Pen used to draw the lines.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawLines(System.Drawing.PointF[],System.Drawing.Color,System.Int32)">
            <summary>
                <para>Draws a polygon defined by an array of PointF structures.
</para>
            </summary>
            <param name="lines">
		Array of PointF structures that represent the vertices of the polygon.

            </param>
            <param name="color">
		A Color structure that indicates the color of the Pen used to draw the lines.

            </param>
            <param name="thickness">
		A value indicating the width of the Pen used to draw the lines.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
                <para>Draws a <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.
</para>
            </summary>
            <param name="pen">
		<see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the path.

            </param>
            <param name="path">
		<see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> to draw.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                <para>Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.
</para>
            </summary>
            <param name="pen">
		<see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the pie shape.

            </param>
            <param name="x">
		The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.

            </param>
            <param name="y">
		The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.

            </param>
            <param name="width">
		Width of the bounding rectangle that defines the ellipse from which the pie shape comes.

            </param>
            <param name="height">
		Height of the bounding rectangle that defines the ellipse from which the pie shape comes.

            </param>
            <param name="startAngle">
		Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.

            </param>
            <param name="sweepAngle">
		Angle measured in degrees clockwise from the <i>startAngle</i> parameter to the second side of the pie shape.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                <para>Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.
</para>
            </summary>
            <param name="pen">
		<see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the pie shape.

            </param>
            <param name="x">
		The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.

            </param>
            <param name="y">
		The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.

            </param>
            <param name="width">
		Width of the bounding rectangle that defines the ellipse from which the pie shape comes.

            </param>
            <param name="height">
		Height of the bounding rectangle that defines the ellipse from which the pie shape comes.

            </param>
            <param name="startAngle">
		Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.

            </param>
            <param name="sweepAngle">
		Angle measured in degrees clockwise from the <i>startAngle</i> parameter to the second side of the pie shape.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
            <summary>
                <para>Draws a pie shape defined by an ellipse specified by a <see cref="T:System.Drawing.Rectangle"/> structure and two radial lines.
</para>
            </summary>
            <param name="pen">
		<see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the pie shape.

            </param>
            <param name="rect">
		<see cref="T:System.Drawing.Rectangle"/> structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.

            </param>
            <param name="startAngle">
		Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.

            </param>
            <param name="sweepAngle">
		Angle measured in degrees clockwise from the <i>startAngle</i> parameter to the second side of the pie shape.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
                <para>Draws a pie shape defined by an ellipse specified by a <see cref="T:System.Drawing.RectangleF"/> structure and two radial lines.
</para>
            </summary>
            <param name="pen">
		<see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the pie shape.

            </param>
            <param name="rect">
		<see cref="T:System.Drawing.RectangleF"/> structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.

            </param>
            <param name="startAngle">
		Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.

            </param>
            <param name="sweepAngle">
		Angle measured in degrees clockwise from the <i>startAngle</i> parameter to the second side of the pie shape.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawPolygon(System.Drawing.PointF[],System.Drawing.Color,System.Int32)">
            <summary>
                <para>Draws a polygon defined by an array of PointF structures.
</para>
            </summary>
            <param name="points">
		Array of PointF structures that represent the vertices of the polygon.

            </param>
            <param name="color">
		A Color structure that indicates the color of the Pen used to draw the polygon.

            </param>
            <param name="thickness">
		A value indicating the width of the Pen used to draw the polygon.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawPolygon(System.Drawing.Point[],System.Drawing.Color,System.Int32)">
            <summary>
                <para>Draws a polygon defined by an array of Point structures.
</para>
            </summary>
            <param name="points">
		Array of Point structures that represent the vertices of the polygon.

            </param>
            <param name="color">
		A Color structure that indicates the color of the Pen used to draw the polygon.

            </param>
            <param name="thickness">
		A value indicating the width of the Pen used to draw the polygon.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)">
            <summary>
                <para>Draws a rectangle specified by a <see cref="T:System.Drawing.Rectangle"/> structure.
</para>
            </summary>
            <param name="pen">
		A <see cref="T:System.Drawing.Pen"/> object which specifies the color, width and style of the rectangle.

            </param>
            <param name="r">
		A <see cref="T:System.Drawing.Rectangle"/> structure which represents the rectangle to draw.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Int32)">
            <summary>
                <para>Draws a rectangle specified by a pair of coordinates, a width, and a height.
</para>
            </summary>
            <param name="x">
		The x-coordinate of the upper-left corner of the rectangle to draw.

            </param>
            <param name="y">
		The y-coordinate of the upper-left corner of the rectangle to draw.

            </param>
            <param name="width">
		Width of the rectangle to draw.

            </param>
            <param name="height">
		Height of the rectangle to draw.

            </param>
            <param name="color">
		A <see cref="T:System.Drawing.Color"/> structure that indicates the color of the Pen used to draw the rectangle.

            </param>
            <param name="thickness">
		A value indicating the width of the Pen used to draw the rectangle.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Int32)">
            <summary>
                <para>Draws a rectangle specified by a <see cref="T:System.Drawing.Rectangle"/> structure.
</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle to draw.

            </param>
            <param name="color">
		A <see cref="T:System.Drawing.Color"/> structure that indicates the color of the Pen used to draw the rectangle.

            </param>
            <param name="thickness">
		A value indicating the width of the Pen used to draw the rectangle.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawRectangle(System.Single,System.Single,System.Single,System.Single,System.Drawing.Color,System.Int32)">
            <summary>
                <para>Draws a rectangle with the specified border color and thickness.
</para>
            </summary>
            <param name="x">
		An Single value that is the top left corner's x-coordinate.

            </param>
            <param name="y">
		An Single value that is the top left corner's y-coordinate.

            </param>
            <param name="width">
		A Single value that is the rectangle width.

            </param>
            <param name="height">
		A Single value that is the rectangle height.

            </param>
            <param name="color">
		A Color object that specifies the border color.

            </param>
            <param name="thickness">
		An Int32 value that specifies the border thickness.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawRectangles(System.Drawing.RectangleF[],System.Drawing.Color,System.Int32)">
            <summary>
                <para>Draws a series of rectangles specified by <see cref="T:System.Drawing.RectangleF"/> structures.
</para>
            </summary>
            <param name="rects">
		Array of <see cref="T:System.Drawing.RectangleF"/> structures that represent the rectangles to draw.

            </param>
            <param name="color">
		A <see cref="T:System.Drawing.Color"/> structure that indicates the color of the Pen used to draw the rectangles.

            </param>
            <param name="thickness">
		A value indicating the width of the Pen used to draw the rectangles.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawRectangles(System.Drawing.Rectangle[],System.Drawing.Color,System.Int32)">
            <summary>
                <para>Draws a series of rectangles specified by <see cref="T:System.Drawing.Rectangle"/> structures.
</para>
            </summary>
            <param name="rects">
		Array of <see cref="T:System.Drawing.Rectangle"/> structures that represent the rectangles to draw.

            </param>
            <param name="color">
		A <see cref="T:System.Drawing.Color"/> structure that indicates the color of the Pen used to draw the rectangles.

            </param>
            <param name="thickness">
		A value indicating the width of the Pen used to draw the rectangles.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.Rectangle,System.Drawing.StringFormat)">
            <summary>
                <para>Draws a text string at the specified position using the specified font, color and format.
</para>
            </summary>
            <param name="s">
		A <see cref="T:System.String"/> value representing the text to be drawn.

            </param>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object which defines the font and associated settings of the text to be drawn.

            </param>
            <param name="foreBrush">
		A <see cref="T:System.Drawing.Brush"/> object which specifies the color and texture of the drawn text.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure which represents the drawing area.

            </param>
            <param name="strFormat">
		A <see cref="T:System.Drawing.StringFormat"/> object which specifies formatting attributes, such as the line spacing and alignment, that are applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
            <summary>
                <para>Draws the specified text string at the specified location with the specified Brush and Font objects.
</para>
            </summary>
            <param name="s">
		String to draw.

            </param>
            <param name="font">
		Font that defines the text format of the string.

            </param>
            <param name="brush">
		Brush that determines the color and texture of the drawn text.

            </param>
            <param name="x">
		The x-coordinate of the upper-left corner of the drawn text.

            </param>
            <param name="y">
		The y-coordinate of the upper-left corner of the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
            <summary>
                <para>Draws the specified text string at the specified location with the specified Brush and Font objects.
</para>
            </summary>
            <param name="s">
		String to draw.

            </param>
            <param name="font">
		Font that defines the text format of the string.

            </param>
            <param name="brush">
		Brush that determines the color and texture of the drawn text.

            </param>
            <param name="point">
		PointF structure that specifies the upper-left corner of the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
                <para>Draws the specified text string in the specified rectangle with the specified Brush and Font objects.
</para>
            </summary>
            <param name="s">
		String to draw.

            </param>
            <param name="font">
		Font that defines the text format of the string.

            </param>
            <param name="brush">
		Brush that determines the color and texture of the drawn text.

            </param>
            <param name="bounds">
		RectangleF structure that specifies the location of the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
            <summary>
                <para>Draws the specified text string at the specified location with the specified Brush and Font objects using the formatting attributes of the specified StringFormat.
</para>
            </summary>
            <param name="s">
		String to draw.

            </param>
            <param name="font">
		Font that defines the text format of the string.

            </param>
            <param name="brush">
		Brush that determines the color and texture of the drawn text.

            </param>
            <param name="point">
		PointF structure that specifies the upper-left corner of the drawn text.

            </param>
            <param name="format">
		StringFormat that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <summary>
                <para>Draws the specified text string in the specified rectangle with the specified Brush and Font objects using the formatting attributes of the specified StringFormat.
</para>
            </summary>
            <param name="s">
		String to draw.

            </param>
            <param name="font">
		Font that defines the text format of the string.

            </param>
            <param name="foreColor">
		Color of the drawn text.

            </param>
            <param name="bounds">
		RectangleF structure that specifies the location of the drawn text.

            </param>
            <param name="format">
		StringFormat that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
            <summary>
                <para>Draws the specified text string at the specified location with the specified Brush and Font objects using the formatting attributes of the specified StringFormat.
</para>
            </summary>
            <param name="s">
		String to draw.

            </param>
            <param name="font">
		Font that defines the text format of the string.

            </param>
            <param name="brush">
		Brush that determines the color and texture of the drawn text.

            </param>
            <param name="x">
		The x-coordinate of the upper-left corner of the drawn text.

            </param>
            <param name="y">
		The y-coordinate of the upper-left corner of the drawn text.

            </param>
            <param name="format">
		StringFormat that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.Rectangle,DevExpress.Utils.StringFormatInfo)">
            <summary>
                <para>Draws the specified text string at the specified location with the specified Brush and Font objects using the specified formatting attributes.
</para>
            </summary>
            <param name="s">
		String to draw.

            </param>
            <param name="font">
		Font that defines the text format of the string.

            </param>
            <param name="foreBrush">
		Brush that determines the color and texture of the drawn text.

            </param>
            <param name="bounds">
		Rectangle structure that specifies the location of the drawn text.

            </param>
            <param name="strFormat">
		StringFormatInfo object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,DevExpress.Utils.StringFormatInfo)">
            <summary>
                <para>Draws the specified text string in the specified rectangle with the specified Brush and Font objects using the specified formatting attributes.
</para>
            </summary>
            <param name="s">
		String to draw.

            </param>
            <param name="font">
		Font that defines the text format of the string.

            </param>
            <param name="foreColor">
		Color of the drawn text.

            </param>
            <param name="bounds">
		RectangleF structure that specifies the location of the drawn text.

            </param>
            <param name="format">
		StringFormatInfo that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,DevExpress.Utils.StringFormatInfo)">
            <summary>
                <para>Draws the specified text string at the specified location with the specified Brush and Font objects using the specified formatting attributes.
</para>
            </summary>
            <param name="s">
		String to draw.

            </param>
            <param name="font">
		Font that defines the text format of the string.

            </param>
            <param name="brush">
		Brush that determines the color and texture of the drawn text.

            </param>
            <param name="point">
		PointF structure that specifies the upper-left corner of the drawn text.

            </param>
            <param name="format">
		StringFormatInfo object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,DevExpress.Utils.StringFormatInfo)">
            <summary>
                <para>Draws the specified text string at the specified location with the specified Brush and Font objects.
</para>
            </summary>
            <param name="s">
		String to draw.

            </param>
            <param name="font">
		Font that defines the text format of the string.

            </param>
            <param name="brush">
		Brush that determines the color and texture of the drawn text.

            </param>
            <param name="x">
		The x-coordinate of the upper-left corner of the drawn text.

            </param>
            <param name="y">
		The y-coordinate of the upper-left corner of the drawn text.

            </param>
            <param name="format">
		StringFormatInfo object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Rectangle,System.Drawing.StringFormat)">
            <summary>
                <para>Draws the specified text string in the specified rectangle with the specified Brush and Font objects using the specified formatting attributes.
</para>
            </summary>
            <param name="s">
		String to draw.

            </param>
            <param name="font">
		Font that defines the text format of the string.

            </param>
            <param name="color">
		Color of the drawn text.

            </param>
            <param name="bounds">
		Rectangle structure that specifies the location of the drawn text.

            </param>
            <param name="strFormatInfo">
		StringFormatInfo object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Rectangle,DevExpress.Utils.StringFormatInfo)">
            <summary>
                <para>Draws the specified text string in the specified rectangle with the specified Brush and Font objects using the specified formatting attributes.
</para>
            </summary>
            <param name="s">
		String to draw.

            </param>
            <param name="font">
		Font that defines the text format of the string.

            </param>
            <param name="color">
		Color of the drawn text.

            </param>
            <param name="bounds">
		Rectangle structure that specifies the location of the drawn text.

            </param>
            <param name="strFormatInfo">
		StringFormatInfo object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawVString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.Rectangle,System.Drawing.StringFormat,System.Int32)">
            <summary>
                <para>Draws a text string vertically with the specified angle and at the specified position using the specified font, color and format.
</para>
            </summary>
            <param name="s">
		A <see cref="T:System.String"/> value which represents the text to be drawn.

            </param>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object which defines the font and associated settings of the text to be drawn.

            </param>
            <param name="foreBrush">
		A <see cref="T:System.Drawing.Brush"/> object which specifies the color and texture of the drawn text.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure which represents the drawing area.

            </param>
            <param name="strFormat">
		A <see cref="T:System.Drawing.StringFormat"/> object which specifies formatting attributes such as the line spacing and alignment that are applied to the drawn text.

            </param>
            <param name="angle">
		An integer value specifying the angle in degrees at which the text should be drawn.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawVString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.Rectangle,DevExpress.Utils.StringFormatInfo,System.Int32)">
            <summary>
                <para>Draws a text string vertically with the specified angle and at the specified position using the specified font, color and format.
</para>
            </summary>
            <param name="s">
		A <see cref="T:System.String"/> value which represents the text to be drawn.

            </param>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object which defines the font and associated settings of the text to be drawn.

            </param>
            <param name="foreBrush">
		A <see cref="T:System.Drawing.Brush"/> object which specifies the color and texture of the drawn text.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure which represents the drawing area.

            </param>
            <param name="strFormat">
		A StringFormatInfo object which specifies formatting attributes such as the line spacing and alignment that are applied to the drawn text.

            </param>
            <param name="angle">
		An integer value specifying the angle in degrees at which the text should be drawn.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.EnableDirectXPaint(DevExpress.Utils.DirectXPaint.DirectXPaint)">
            <summary>
                <para>Allows the target painter to utilize the DirectX API.

</para>
            </summary>
            <param name="painter">
		A DirectXPaint object that is the target painter.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillEllipse(System.Single,System.Single,System.Single,System.Single,System.Drawing.Color)">
            <summary>
                <para>Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.
</para>
            </summary>
            <param name="x">
		The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.

            </param>
            <param name="y">
		The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.

            </param>
            <param name="width">
		Width of the bounding rectangle that defines the ellipse.

            </param>
            <param name="height">
		Height of the bounding rectangle that defines the ellipse.

            </param>
            <param name="color">
		Brush that determines the characteristics of the fill.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillEllipse(System.Drawing.Color,System.Drawing.Rectangle)">
            <summary>
                <para>Fills the interior of an ellipse defined by a bounding rectangle specified by a <see cref="T:System.Drawing.Rectangle"/> structure.
</para>
            </summary>
            <param name="color">
		A <see cref="T:System.Drawing.Color"/> structure that indicates the color of the <see cref="T:System.Drawing.Brush"/> from the current cache that determines the characteristics of the fill.

            </param>
            <param name="rect">
		A <see cref="T:System.Drawing.Rectangle"/> structure that represents the bounding rectangle that defines the ellipse.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillEllipse(System.Drawing.Color,System.Drawing.RectangleF)">
            <summary>
                <para>Fills the interior of an ellipse defined by a bounding rectangle specified by a <see cref="T:System.Drawing.RectangleF"/> structure.
</para>
            </summary>
            <param name="color">
		A <see cref="T:System.Drawing.Color"/> structure that indicates the color of the <see cref="T:System.Drawing.Brush"/> from the current cache that determines the characteristics of the fill.

            </param>
            <param name="rect">
		A <see cref="T:System.Drawing.RectangleF"/> structure that represents the bounding rectangle that defines the ellipse.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillEllipse(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
                <para>Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.
</para>
            </summary>
            <param name="x">
		The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.

            </param>
            <param name="y">
		The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.

            </param>
            <param name="width">
		Width of the bounding rectangle that defines the ellipse.

            </param>
            <param name="height">
		Height of the bounding rectangle that defines the ellipse.

            </param>
            <param name="color">
		A <see cref="T:System.Drawing.Color"/> structure that indicates the color of the <see cref="T:System.Drawing.Brush"/> from the current cache that determines the characteristics of the fill.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
                <para>Fills the interior of a <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.
</para>
            </summary>
            <param name="brush">
		<see cref="T:System.Drawing.Brush"/> that determines the characteristics of the fill.

            </param>
            <param name="path">
		<see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> that represents the path to fill.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                <para>Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, a height, and two radial lines.
</para>
            </summary>
            <param name="brush">
		<see cref="T:System.Drawing.Brush"/> that determines the characteristics of the fill.

            </param>
            <param name="x">
		The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.

            </param>
            <param name="y">
		The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.

            </param>
            <param name="width">
		Width of the bounding rectangle that defines the ellipse from which the pie section comes.

            </param>
            <param name="height">
		Height of the bounding rectangle that defines the ellipse from which the pie section comes.

            </param>
            <param name="startAngle">
		Angle in degrees measured clockwise from the x-axis to the first side of the pie section.

            </param>
            <param name="sweepAngle">
		Angle in degrees measured clockwise from the <i>startAngle</i> parameter to the second side of the pie section.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                <para>Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, a height, and two radial lines.
</para>
            </summary>
            <param name="brush">
		<see cref="T:System.Drawing.Brush"/> that determines the characteristics of the fill.

            </param>
            <param name="x">
		The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.

            </param>
            <param name="y">
		The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.

            </param>
            <param name="width">
		Width of the bounding rectangle that defines the ellipse from which the pie section comes.

            </param>
            <param name="height">
		Height of the bounding rectangle that defines the ellipse from which the pie section comes.

            </param>
            <param name="startAngle">
		Angle in degrees measured clockwise from the x-axis to the first side of the pie section.

            </param>
            <param name="sweepAngle">
		Angle in degrees measured clockwise from the startAngle parameter to the second side of the pie section.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
            <summary>
                <para>Fills the interior of a pie section defined by an ellipse specified by a <see cref="T:System.Drawing.Rectangle"/> structure and two radial lines.
</para>
            </summary>
            <param name="brush">
		<see cref="T:System.Drawing.Brush"/> that determines the characteristics of the fill.

            </param>
            <param name="rect">
		<see cref="T:System.Drawing.Rectangle"/> structure that represents the bounding rectangle that defines the ellipse from which the pie section comes.

            </param>
            <param name="startAngle">
		Angle in degrees measured clockwise from the x-axis to the first side of the pie section.

            </param>
            <param name="sweepAngle">
		Angle in degrees measured clockwise from the <i>startAngle</i> parameter to the second side of the pie section.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillPolygon(System.Drawing.Point[],System.Drawing.Color)">
            <summary>
                <para>Fills the interior of a polygon defined by an array of points specified by Point structures.
</para>
            </summary>
            <param name="points">
		Array of Point structures that represent the vertices of the polygon to fill.

            </param>
            <param name="color">
		A Color structure that specifies the color of the fill.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillPolygon(System.Drawing.PointF[],System.Drawing.Color)">
            <summary>
                <para>Fills the interior of a polygon defined by an array of points specified by PointF structures.
</para>
            </summary>
            <param name="points">
		Array of PointF structures that represent the vertices of the polygon to fill.

            </param>
            <param name="color">
		A Color structure that specifies the color of the fill.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)">
            <summary>
                <para>Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.Rectangle"/> structure.
</para>
            </summary>
            <param name="brush">
		A <see cref="T:System.Drawing.Brush"/> object which represents the brush used to fill the rectangle.

            </param>
            <param name="rect">
		A <see cref="T:System.Drawing.Rectangle"/> value which represents the rectangle to fill.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillRectangle(System.Drawing.Color,System.Drawing.Rectangle)">
            <summary>
                <para>Fills the specified rectangular area with the specified color.
</para>
            </summary>
            <param name="color">
		A <see cref="T:System.Drawing.Color"/> value that specifies the filling color.

            </param>
            <param name="rect">
		A <see cref="T:System.Drawing.Rectangle"/> value which represents the rectangle to be filled.


            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
                <para>Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.RectangleF"/> structure. 
</para>
            </summary>
            <param name="brush">
		A <see cref="T:System.Drawing.Brush"/> object which represents the brush used to fill the rectangle.

            </param>
            <param name="rect">
		A <see cref="T:System.Drawing.Rectangle"/> value which represents the rectangle to fill.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillRectangle(DevExpress.Utils.AppearanceObject,System.Drawing.Rectangle)">
            <summary>
                <para>Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.Rectangle"/> structure.
</para>
            </summary>
            <param name="appearanceObject">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> object specifying the background color used to fill the rectangle.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure which represents the rectangle to fill.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillRectangle(System.Drawing.Color,System.Drawing.RectangleF)">
            <summary>
                <para>Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.RectangleF"/> structure.
</para>
            </summary>
            <param name="color">
		A <see cref="T:System.Drawing.Color"/> structure that represents the color of this brush used to fill the rectangle.

            </param>
            <param name="rect">
		A <see cref="T:System.Drawing.RectangleF"/> structure which represents the rectangle to fill.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                <para>Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.
</para>
            </summary>
            <param name="brush">
		<see cref="T:System.Drawing.Brush"/> that determines the characteristics of the fill.

            </param>
            <param name="x">
		The x-coordinate of the upper-left corner of the rectangle to fill.

            </param>
            <param name="y">
		The y-coordinate of the upper-left corner of the rectangle to fill.

            </param>
            <param name="width">
		Width of the rectangle to fill.

            </param>
            <param name="height">
		Height of the rectangle to fill.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                <para>Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.
</para>
            </summary>
            <param name="brush">
		<see cref="T:System.Drawing.Brush"/> that determines the characteristics of the fill.

            </param>
            <param name="x">
		The x-coordinate of the upper-left corner of the rectangle to fill.


            </param>
            <param name="y">
		The y-coordinate of the upper-left corner of the rectangle to fill.

            </param>
            <param name="width">
		Width of the rectangle to fill.

            </param>
            <param name="height">
		Height of the rectangle to fill.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillRectangles(System.Drawing.Color,System.Drawing.RectangleF[])">
            <summary>
                <para>Fills the interiors of a series of rectangles specified by <see cref="T:System.Drawing.RectangleF"/> structures.
</para>
            </summary>
            <param name="color">
		A <see cref="T:System.Drawing.Color"/> structure that indicates the color of the <see cref="T:System.Drawing.Brush"/> from the current cache that determines the characteristics of the fill.

            </param>
            <param name="rects">
		Array of   <see cref="T:System.Drawing.RectangleF"/> structures that represent the rectangles to fill.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillRectangles(System.Drawing.Color,System.Drawing.Rectangle[])">
            <summary>
                <para>Fills the interiors of a series of rectangles specified by <see cref="T:System.Drawing.Rectangle"/> structures.
</para>
            </summary>
            <param name="color">
		A <see cref="T:System.Drawing.Color"/> structure that indicates the color of the <see cref="T:System.Drawing.Brush"/> from the current cache that determines the characteristics of the fill.

            </param>
            <param name="rects">
		Array of <see cref="T:System.Drawing.Rectangle"/> structures that represent the rectangles to fill.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetFont(System.Drawing.Font,System.Drawing.FontStyle)">
            <summary>
                <para>Gets a font object with the specified settings.
</para>
            </summary>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object whose settings specify the desired font's typeface and size.

            </param>
            <param name="fontStyle">
		A bitwise combination of <see cref="T:System.Drawing.Font"/> enumeration values specifying the desired font style.

            </param>
            <returns>A <see cref="T:System.Drawing.Font"/> object representing a font with the specified settings.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetGradientBrush(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
            <summary>
                <para>Returns a linear gradient brush with specified settings.
</para>
            </summary>
            <param name="rect">
		A <b>System.Drawing.Rectangle</b> structure that specifies the endpoints of the linear gradient. The starting point is the upper-left corner of the rectangle, and the endpoint is the upper-right corner of the rectangle. 

            </param>
            <param name="startColor">
		A <b>System.Drawing.Color</b> object that represents the starting color for the gradient. 

            </param>
            <param name="endColor">
		A <b>System.Drawing.Color</b> object that represents the ending color for the gradient. 

            </param>
            <param name="mode">
		A <b>System.Drawing.Drawing2D.LinearGradientMode</b> enumeration value specifying the gradient orientation. 

            </param>
            <returns>A <b>System.Drawing.Brush</b> descendant representing the requested linear gradient brush (typically a <b>System.Drawing.Drawing2D.LinearGradientBrush</b> object).
</returns>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetGradientBrush(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode,System.Int32)">
            <summary>
                <para>Returns a linear gradient brush with the specified settings.
</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the endpoints of the linear gradient. The starting point is the upper-left corner of the rectangle, and the endpoint is the upper-right corner of the rectangle. 

            </param>
            <param name="startColor">
		A <see cref="T:System.Drawing.Color"/> object that represents the starting color for the gradient. 

            </param>
            <param name="endColor">
		A <see cref="T:System.Drawing.Color"/> object that represents the ending color for the gradient. 

            </param>
            <param name="mode">
		A <see cref="T:System.Drawing.Drawing2D.LinearGradientMode"/> enumeration value specifying the gradient's orientation. 

            </param>
            <param name="blendCount">
		An integer value specifying the number of blend patterns for the brush.

            </param>
            <returns>A <see cref="T:System.Drawing.Brush"/> descendant representing the requested linear gradient brush (typically a <b>System.Drawing.Drawing2D.LinearGradientBrush</b> object).
</returns>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetPen(System.Drawing.Color,System.Int32)">
            <summary>
                <para>Returns a pen with specified settings.
</para>
            </summary>
            <param name="color">
		A <b>System.Drawing.Color</b> object specifying the pen color.

            </param>
            <param name="width">
		An integer value specifying the pen width.

            </param>
            <returns>A <b>System.Drawing.Pen</b> object representing the requested pen.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetPen(System.Drawing.Color)">
            <summary>
                <para>Returns the pixel-wide pen with a specified color.
</para>
            </summary>
            <param name="color">
		A <b>System.Drawing.Color</b> object specifying the pen color.

            </param>
            <returns>A <b>System.Drawing.Pen</b> object representing the requested pen.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetSolidBrush(System.Drawing.Color)">
            <summary>
                <para>Gets a solid brush with specified parameters.
</para>
            </summary>
            <param name="color">
		A <b>System.Drawing.Color</b> object specifying the brush color.

            </param>
            <returns>A <b>System.Drawing.Brush</b> descendant representing the requested brush (typically a <b>System.Drawing.SolidBrush</b> object).
</returns>


        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.Graphics">
            <summary>
                <para>Gets an object that serves as the painting surface and provides painting facilities.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Graphics"/> object providing painting facilities.
</value>


        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.InterpolationMode">
            <summary>
                <para>Gets or sets the interpolation mode associated with the cached <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.Graphics"/>.
</para>
            </summary>
            <value>One of the <see cref="T:System.Drawing.Drawing2D.InterpolationMode"/> values.
</value>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.IsNeedDrawRect(System.Drawing.Rectangle)">
            <summary>
                <para>Returns whether the region which is bounded by the specified rectangle needs to be redrawn.

</para>
            </summary>
            <param name="r">
		A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the rectangle to test.

            </param>
            <returns><b>true</b> if the specified rectangle needs to be redrawn; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.IsNeedDrawRectEx(System.Drawing.Rectangle)">
            <summary>
                <para>Returns whether the region which is bounded by the specified rectangle needs to be redrawn, taking into account clip regions, if any.
</para>
            </summary>
            <param name="r">
		A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the rectangle to test.

            </param>
            <returns><b>true</b>, if the specified rectangle needs to be redrawn; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.Offset">
            <summary>
                <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Point"/> structure.
</value>


        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.OffsetEx">
            <summary>
                <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Point"/> structure.
</value>


        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.Paint">
            <summary>
                <para>Gets or sets a <b>DevExpress.Utils.Paint.XPaint</b> object.
</para>
            </summary>
            <value>A <b>DevExpress.Utils.Paint.XPaint</b> object.
</value>


        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.PaintArgs">
            <summary>
                <para>Gets an object providing information for painting.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.Drawing.DXPaintEventArgs"/> object that contains data used to perform painting.
</value>


        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.PixelOffsetMode">
            <summary>
                <para>Gets or set a value specifying how pixels are offset during rendering of the cached <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.Graphics"/>.
</para>
            </summary>
            <value>One of the <see cref="T:System.Drawing.Drawing2D.PixelOffsetMode"/> values.
</value>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.PrepareClipRegion">
            <summary>
                <para>Retrieves clip regions from a display device context.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.ResetMatrix">
            <summary>
                <para>Resets a Matrix object used to perform geometric transformations.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.ScaleDPI">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.SmoothingMode">
            <summary>
                <para>Gets or sets the rendering quality for the cached <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.Graphics"/>.
</para>
            </summary>
            <value>One of the <see cref="T:System.Drawing.Drawing2D.SmoothingMode"/> values.
</value>


        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.TextRenderingHint">
            <summary>
                <para>Gets or sets the rendering mode for text associated with the cached <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.Graphics"/>.
</para>
            </summary>
            <value>One of the <see cref="T:System.Drawing.Text.TextRenderingHint"/> values.
</value>


        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.TransformMatrix">
            <summary>
                <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Drawing2D.Matrix"/> object.
</value>


        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.UseDirectXPaint">
            <summary>
                <para>Returns whether or not the application currently uses the DirectX Hardware Acceleration.
</para>
            </summary>
            <value><b>true</b>, if the application currently uses the DirectX Hardware Acceleration; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Utils.XPThemeSupport">

            <summary>
                <para>Contains values specifying whether bound controls is drawn using XP style.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.XPThemeSupport.Default">
            <summary>
                <para>If bound control can display or edit data using inplace editors, latter are painted in the same style as its container. Otherwise it is drawn in XP style, if it is supported by a user's system.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.XPThemeSupport.Disabled">
            <summary>
                <para>An editor is drawn in Windows Classic style.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.XPThemeSupport.Enabled">
            <summary>
                <para>An editor is drawn in XP style if it is supported by user's system.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.Menu.DXButtonGroupItem">

            <summary>
                <para>A group of buttons that can be displayed within a <see cref="T:DevExpress.Utils.Menu.DXPopupMenu"/> object.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Menu.DXButtonGroupItem.#ctor">
            <summary>
                <para>Initializes a new DXButtonGroupItem instance with the default settings.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.Controls.StyleIndeterminate">

            <summary>
                <para>Contains values specifying the display style for the check box when an editor is in an indeterminate state.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.StyleIndeterminate.Inactive">
            <summary>
                <para>A check box is drawn inactive (grayed). 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.StyleIndeterminate.InactiveChecked">
            <summary>
                <para>A check box is drawn grayed and checked (partially checked). 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.StyleIndeterminate.Unchecked">
            <summary>
                <para>A check box is drawn unchecked. 
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.Controls.CheckStyles">

            <summary>
                <para>Contains values specifying the look of the check box within a <see cref="T:DevExpress.XtraEditors.CheckEdit"/> control.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Radio">
            <summary>
                <para>A radio button (the appearance depends on the control's look-and-feel): 
<para>
In the Skin, Office 2003 and WindowsXP paint schemes, the <b>Indeterminate</b> and <b>Unchecked</b> check styles look the same. 
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Standard">
            <summary>
                <para>The default mode (the appearance depends on the control's look-and-feel) : 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style1">
            <summary>
                <para>Predefined custom style. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style10">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style11">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style12">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style13">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style14">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style15">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style16">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style2">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style3">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style4">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style5">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style6">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style7">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style8">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style9">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.UserDefined">
            <summary>
                <para>Allows a user to embed custom check mark pictures into a check editor via 
1) the <see cref="P:DevExpress.XtraEditors.Repository.RepositoryItemCheckEdit.PictureChecked"/>, <see cref="P:DevExpress.XtraEditors.Repository.RepositoryItemCheckEdit.PictureUnchecked"/> and <see cref="P:DevExpress.XtraEditors.Repository.RepositoryItemCheckEdit.PictureGrayed"/> properties or 
2) the <see cref="P:DevExpress.XtraEditors.Repository.RepositoryItemCheckEdit.ImageIndexChecked"/>, <see cref="P:DevExpress.XtraEditors.Repository.RepositoryItemCheckEdit.ImageIndexUnchecked"/> and <see cref="P:DevExpress.XtraEditors.Repository.RepositoryItemCheckEdit.ImageIndexGrayed"/> properties.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.Controls.ButtonStates">

            <summary>
                <para>Specifies the state of an <see cref="T:DevExpress.XtraEditors.Controls.EditorButton"/>.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonStates.DeepPush">
            <summary>
                <para>A button is highlighted when mouse crosses the entire button boundaries.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonStates.Disabled">
            <summary>
                <para>A button is disabled and does not respond to end-user actions.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonStates.Hottrack">
            <summary>
                <para>A button is highlighted when the mouse enters its boundaries.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonStates.None">
            <summary>
                <para>A button is drawn using its default look and feel.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonStates.Push">
            <summary>
                <para>A button is drawn to reflect a pressed state.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.Controls.ButtonPredefines">

            <summary>
                <para>Specifies the surface image of a button.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Clear">
            <summary>
                <para>A Clear symbol is drawn on the button's surface.
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Close">
            <summary>
                <para>A Close symbol is displayed on the button's surface.
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Combo">
            <summary>
                <para>A Down-arrow for a combo box is drawn on the button's surface.
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Delete">
            <summary>
                <para>A Delete symbol is drawn on the button's surface.
<para>

</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Down">
            <summary>
                <para>A Down-arrow is drawn on the button's surface.
<para>

</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.DropDown">
            <summary>
                <para>A Down-arrow is drawn on the button's surface. Unlike, the <b>Down</b> button, this kind of button allows text to be displayed next to the down-arrow.

<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Ellipsis">
            <summary>
                <para>An Ellipsis symbol is drawn on the button's surface.
<para>

</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Glyph">
            <summary>
                <para>A custom bitmap is drawn on the button's surface.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Left">
            <summary>
                <para>A Left-arrow symbol is drawn on the button's surface.
<para>

</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Minus">
            <summary>
                <para>A Minus sign is drawn on the button's surface.
<para>

</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.OK">
            <summary>
                <para>An OK sign is drawn on the button's surface.
<para>

</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Plus">
            <summary>
                <para>A Plus sign is drawn on the button's surface.
<para>

</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Redo">
            <summary>
                <para>A Redo symbol is drawn on the button's surface.
<para>

</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Right">
            <summary>
                <para>A Right-arrow is drawn the button's surface.
<para>

</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Search">
            <summary>
                <para>A Search symbol is drawn on the button's surface.
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Separator">
            <summary>
                <para>A Separator.
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.SpinDown">
            <summary>
                <para>A down-arrow for a spin editor is displayed on the button's surface.
<para>

</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.SpinLeft">
            <summary>
                <para>A left-arrow for a spin editor is displayed on the button's surface.
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.SpinRight">
            <summary>
                <para>A right-arrow for a spin editor is displayed on the button's surface.
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.SpinUp">
            <summary>
                <para>An up-arrow for a spin editor is displayed on the button's surface.
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Undo">
            <summary>
                <para>An Undo symbol is drawn on the button's surface.
<para>

</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Up">
            <summary>
                <para>An Up-arrow is drawn on the button's surface.
<para>

</para>

</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.Controls.BorderStyles">

            <summary>
                <para>Specifies the style for borders to draw on a <b>Graphics</b> surface.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderStyles.Default">
            <summary>
                <para><para>The border style is determined by the current Look-and-Feel settings.</para>
For example, text editors' borders are painted according to the <see cref="P:DevExpress.XtraEditors.Repository.RepositoryItem.LookAndFeel"/> object's settings.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderStyles.Flat">
            <summary>
                <para><para>Borders are flat.</para>
The image below demonstrates the <b>Flat</b> style applied to the <see cref="T:DevExpress.XtraEditors.ButtonEdit"/> control.

<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderStyles.HotFlat">
            <summary>
                <para><para>Borders are flat. Borders and the client area are highlighted when the mouse pointer is positioned over them.</para>
The image below demonstrates the <b>HotFlat</b> style applied to the <see cref="T:DevExpress.XtraEditors.ButtonEdit"/> control.
<para></para>
<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderStyles.NoBorder">
            <summary>
                <para><para>There are no borders.</para>
The image below demonstrates the <b>NoBorder</b> style applied to the <see cref="T:DevExpress.XtraEditors.ButtonEdit"/> control.

<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderStyles.Office2003">
            <summary>
                <para><para>Borders have an Office 2003 style.</para>
<para>The image below demonstrates the <b>Office2003</b> style applied to a <see cref="T:DevExpress.XtraEditors.ButtonEdit"/> control.</para>
<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderStyles.Simple">
            <summary>
                <para><para>Borders are flat.</para>
The image below demonstrates the <b>Simple</b> style applied to the <see cref="T:DevExpress.XtraEditors.ButtonEdit"/> control.

<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderStyles.Style3D">
            <summary>
                <para><para>Borders are three-dimensional.</para>
The image below demonstrates the <b>Style3D</b> style applied to the <see cref="T:DevExpress.XtraEditors.ButtonEdit"/> control.

<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderStyles.UltraFlat">
            <summary>
                <para><para>Borders have an Office XP style. Borders and the client area are highlighted when the mouse pointer is positioned over them or they are focused. Otherwise, there are no borders.</para>
The image below demonstrates the <b>UltraFlat</b> style applied to the <see cref="T:DevExpress.XtraEditors.ButtonEdit"/> control.

<para></para>
<para></para>
</para>
            </summary>


        </member>
    </members>
</doc>
